{"ast":null,"code":"import firebase from 'firebase';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAb42q41W0gH-0OHLPw6mOHcvQoGFFfwtE\",\n  authDomain: \"flexxo-dev.firebaseapp.com\",\n  databaseURL: \"https://flexxo-dev-default-rtdb.firebaseio.com\",\n  projectId: \"flexxo-dev\",\n  storageBucket: \"flexxo-dev.appspot.com\",\n  messagingSenderId: \"462526675458\",\n  appId: \"1:462526675458:web:6156527a55904bd5e1051b\",\n  measurementId: \"G-E04VE4YK0W\"\n};\n!firebase.apps.length && firebase.initializeApp(firebaseConfig);\nvar database = firebase.database();\n\nvar mapUserFromFirebaseAuthToUser = function mapUserFromFirebaseAuthToUser(user) {\n  console.log(\"info de usuario\" + user);\n\n  if (user != null) {\n    console.log(\"informacion de usuario \" + user);\n    var displayName = user.displayName,\n        email = user.email,\n        photoURL = user.photoURL,\n        uid = user.uid;\n    return {\n      avatar: photoURL,\n      email: email,\n      name: displayName,\n      uid: uid\n    };\n  } else {\n    return null;\n  }\n};\n\nexport var onAuthStateChanged = function onAuthStateChanged(onChange) {\n  return firebase.auth().onAuthStateChanged(function (user) {\n    var normalizedUser = mapUserFromFirebaseAuthToUser(user);\n    onChange(normalizedUser);\n  });\n};\nexport var loginWithGoogle = function loginWithGoogle() {\n  var googleProvider = new firebase.auth.GoogleAuthProvider();\n  return firebase.auth().signInWithPopup(googleProvider); //        .then(mapUserFromFirebaseAuthToUser)\n}; //Data the all booths\n\nexport var getBooths = function getBooths() {\n  var booths = [];\n  firebase.app().database().ref('/booths/').once('value', function (snapshot) {\n    var data = snapshot.val();\n\n    for (var key in data) {\n      var elems = {\n        code: data[key]['code'],\n        photo: data[key]['photo']\n      };\n      booths.push(elems);\n    }\n  });\n  return booths;\n};\nexport var addBooth = function addBooth() {\n  var boothId = Lg5DfOvUWjILYFg5_bx;\n  return firebase.database().ref('/booths/' + boothId).once('value').then(function (snapshot) {\n    var boothName = snapshot.val() && snapshot.val().name; // ...\n  });\n};\nexport var fetchData = function fetchData() {\n  var boothId = -Lg5DfOvUWjILYFg5_bx;\n  return database.ref('booths/' + boothId).get().then(function (snapshot) {\n    return snapshot.on('name');\n  });\n};\nexport function writeUserData(userId, name, email, imageUrl) {\n  firebase.database().ref('users/' + userId).set({\n    username: name,\n    email: email,\n    profile_picture: imageUrl\n  });\n}","map":{"version":3,"sources":["/home/raul/Documentos/Proyectos/Flexxo/flexxo-web/firebase/client.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","database","mapUserFromFirebaseAuthToUser","user","console","log","displayName","email","photoURL","uid","avatar","name","onAuthStateChanged","onChange","auth","normalizedUser","loginWithGoogle","googleProvider","GoogleAuthProvider","signInWithPopup","getBooths","booths","app","ref","once","snapshot","data","val","key","elems","code","photo","push","addBooth","boothId","Lg5DfOvUWjILYFg5_bx","then","boothName","fetchData","get","on","writeUserData","userId","imageUrl","set","username","profile_picture"],"mappings":"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","sourcesContent":["import firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAb42q41W0gH-0OHLPw6mOHcvQoGFFfwtE\",\n    authDomain: \"flexxo-dev.firebaseapp.com\",\n    databaseURL: \"https://flexxo-dev-default-rtdb.firebaseio.com\",\n    projectId: \"flexxo-dev\",\n    storageBucket: \"flexxo-dev.appspot.com\",\n    messagingSenderId: \"462526675458\",\n    appId: \"1:462526675458:web:6156527a55904bd5e1051b\",\n    measurementId: \"G-E04VE4YK0W\"\n};\n\n!firebase.apps.length && firebase.initializeApp(firebaseConfig);\n\nlet database = firebase.database();\n\nconst mapUserFromFirebaseAuthToUser = (user) => {\n    console.log(\"info de usuario\" + user)\n    if (user != null) {\n        console.log(\"informacion de usuario \" + user)\n        const { displayName, email, photoURL, uid } = user\n        return {\n            avatar: photoURL,\n            email,\n            name: displayName,\n            uid\n        }\n    } else {\n        return null\n    }\n}\n\nexport const onAuthStateChanged = (onChange) => {\n    return firebase\n        .auth()\n        .onAuthStateChanged(user => {\n            const normalizedUser =\n                mapUserFromFirebaseAuthToUser(user)\n            onChange(normalizedUser)\n        })\n}\n\nexport const loginWithGoogle = () => {\n    const googleProvider = new firebase.auth.GoogleAuthProvider();\n    return firebase\n        .auth()\n        .signInWithPopup(googleProvider)\n    //        .then(mapUserFromFirebaseAuthToUser)\n}\n\n//Data the all booths\nexport const getBooths = () => {\n    let booths = [];\n    firebase.app().database().ref('/booths/')\n        .once('value', (snapshot) => {\n            const data = snapshot.val()\n            for (let key in data) {\n                let elems = {\n                    code: data[key]['code'],\n                    photo: data[key]['photo'],\n                }\n                booths.push(elems);\n            }\n        })\n    return booths\n}\n\n\n\nexport const addBooth = () => {\n    const boothId = Lg5DfOvUWjILYFg5_bx;\n    return firebase.database().ref('/booths/' + boothId).once('value').then((snapshot) => {\n        const boothName = (snapshot.val() && snapshot.val().name);\n        // ...\n    });\n\n}\n\nexport const fetchData = () => {\n    const boothId = -Lg5DfOvUWjILYFg5_bx;\n    return database.ref('booths/' + boothId)\n        .get()\n        .then(snapshot => {\n            return snapshot.on('name')\n        })\n}\n\n\nexport function writeUserData(userId, name, email, imageUrl) {\n    firebase.database().ref('users/' + userId).set({\n        username: name,\n        email: email,\n        profile_picture: imageUrl\n    });\n}"]},"metadata":{},"sourceType":"module"}