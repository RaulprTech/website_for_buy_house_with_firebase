{"ast":null,"code":"import React, { useReducer } from \"react\"; // Hook\n\nexport default function useToggle(initialValue = false) {\n  // Returns the tuple [state, dispatch]\n  // Normally with useReducer you pass a value to dispatch to indicate what action to\n  // take on the state, but in this case there's only one action.\n  return useReducer(state => !state, initialValue);\n} // Usage\n\n/*\nfunction App() {\n    const [isOn, toggleIsOn] = useToggle();\n\n    return (\n        <button onClick={toggleIsOn}>\n            Turn  {isOn ? 'Off' : 'On'}\n        </button>\n    );\n}\n*/","map":{"version":3,"sources":["/home/raul/Documentos/Proyectos/Flexxo/flexxo-web/hooks/useToggle.js"],"names":["React","useReducer","useToggle","initialValue","state"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC,C,CAEA;;AACA,eAAe,SAASC,SAAT,CAAmBC,YAAY,GAAG,KAAlC,EAAyC;AACpD;AACA;AACA;AACA,SAAOF,UAAU,CAAEG,KAAD,IAAW,CAACA,KAAb,EAAoBD,YAApB,CAAjB;AACH,C,CAGD;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useReducer } from \"react\";\n\n// Hook\nexport default function useToggle(initialValue = false) {\n    // Returns the tuple [state, dispatch]\n    // Normally with useReducer you pass a value to dispatch to indicate what action to\n    // take on the state, but in this case there's only one action.\n    return useReducer((state) => !state, initialValue);\n}\n\n\n// Usage\n/*\nfunction App() {\n    const [isOn, toggleIsOn] = useToggle();\n\n    return (\n        <button onClick={toggleIsOn}>\n            Turn  {isOn ? 'Off' : 'On'}\n        </button>\n    );\n}\n*/"]},"metadata":{},"sourceType":"module"}