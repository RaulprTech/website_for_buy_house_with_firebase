{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/raul/Documentos/Proyectos/Flexxo/flexxo-web/hooks/useToggle.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useReducer } from \"react\"; // Usage\n\nfunction App() {\n  _s();\n\n  var _useToggle = useToggle(),\n      _useToggle2 = _slicedToArray(_useToggle, 2),\n      isOn = _useToggle2[0],\n      toggleIsOn = _useToggle2[1];\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleIsOn,\n    children: [\"Turn  \", isOn ? 'Off' : 'On']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n} // Hook\n\n\n_s(App, \"OX4J6511jW8bkiWr3lDKuka+tc4=\", false, function () {\n  return [useToggle];\n});\n\n_c = App;\n\nfunction useToggle() {\n  _s2();\n\n  var initialValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  // Returns the tuple [state, dispatch]\n  // Normally with useReducer you pass a value to dispatch to indicate what action to\n  // take on the state, but in this case there's only one action.\n  return useReducer(function (state) {\n    return !state;\n  }, initialValue);\n}\n\n_s2(useToggle, \"pNIL0eRARH2Tf6zRgnyIwauZ7RM=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/raul/Documentos/Proyectos/Flexxo/flexxo-web/hooks/useToggle.js"],"names":["React","useReducer","App","useToggle","isOn","toggleIsOn","initialValue","state"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC,C,CAEA;;AACA,SAASC,GAAT,GAAe;AAAA;;AAAA,mBACgBC,SAAS,EADzB;AAAA;AAAA,MACJC,IADI;AAAA,MACEC,UADF;;AAGX,sBACI;AAAQ,IAAA,OAAO,EAAEA,UAAjB;AAAA,yBACWD,IAAI,GAAG,KAAH,GAAW,IAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,C,CAED;;;GAVSF,G;UACsBC,S;;;KADtBD,G;;AAWT,SAASC,SAAT,GAAyC;AAAA;;AAAA,MAAtBG,YAAsB,uEAAP,KAAO;AACrC;AACA;AACA;AACA,SAAOL,UAAU,CAAC,UAACM,KAAD;AAAA,WAAW,CAACA,KAAZ;AAAA,GAAD,EAAoBD,YAApB,CAAjB;AACH;;IALQH,S","sourcesContent":["import React, { useReducer } from \"react\";\n\n// Usage\nfunction App() {\n    const [isOn, toggleIsOn] = useToggle();\n\n    return (\n        <button onClick={toggleIsOn}>\n            Turn  {isOn ? 'Off' : 'On'}\n        </button>\n    );\n}\n\n// Hook\nfunction useToggle(initialValue = false) {\n    // Returns the tuple [state, dispatch]\n    // Normally with useReducer you pass a value to dispatch to indicate what action to\n    // take on the state, but in this case there's only one action.\n    return useReducer((state) => !state, initialValue);\n}\n"]},"metadata":{},"sourceType":"module"}