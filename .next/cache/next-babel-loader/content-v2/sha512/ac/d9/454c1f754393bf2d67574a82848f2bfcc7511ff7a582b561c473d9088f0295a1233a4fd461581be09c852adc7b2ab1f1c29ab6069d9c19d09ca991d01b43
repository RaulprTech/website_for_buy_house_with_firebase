{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/raul/Documentos/Proyectos/Flexxo/flexxo-web/components/container.jsx\";\nimport Header from \"./header\";\nimport Nav from '../components/nav';\nimport { useState, useEffect } from 'react';\nexport default function Container(props) {\n  let {\n    0: isLogin,\n    1: setIsLogin\n  } = useState(false);\n  let {\n    0: links,\n    1: setLinks\n  } = useState([]);\n  const size = useWindowSize();\n  const linksLogin = [{\n    href: '/',\n    label: 'Inicio'\n  }, {\n    href: '/capsules',\n    label: 'Capsulas'\n  }, {\n    href: '/tickets',\n    label: 'Mis Reservas'\n  }, {\n    href: '/profile',\n    label: 'Perfil'\n  }];\n  const linksLogout = [{\n    href: '/',\n    label: 'Inicio'\n  }, {\n    href: '/capsules',\n    label: 'Capsulas'\n  }, {\n    href: '/tickets',\n    label: 'Mis Reservas'\n  }, {\n    href: '/profile',\n    label: 'Perfil'\n  }];\n\n  if (isLogin === true) {\n    setLinks(linksLogin);\n  } else {\n    setLinks(linksLogout);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white text-gray-800 rounded-xl shadow-lg overflow-hidden relative min-w-full h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white h-full w-full px-5 pt-6 pb-20 overflow-y-auto\",\n        children: [size.width > 640 && /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 33\n        }, this), props.children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), size.width <= 640 && /*#__PURE__*/_jsxDEV(Nav, {\n        links: links\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n} // Hook\n\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  const {\n    0: windowSize,\n    1: setWindowSize\n  } = useState({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    // only execute all the code below in client side\n    if (false) {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight\n        });\n      } // Add event listener\n\n\n      window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n      handleResize(); // Remove event listener on cleanup\n\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}","map":{"version":3,"sources":["/home/raul/Documentos/Proyectos/Flexxo/flexxo-web/components/container.jsx"],"names":["Header","Nav","useState","useEffect","Container","props","isLogin","setIsLogin","links","setLinks","size","useWindowSize","linksLogin","href","label","linksLogout","width","children","windowSize","setWindowSize","undefined","height","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import Header from \"./header\"\nimport Nav from '../components/nav'\nimport { useState, useEffect } from 'react';\n\n\n\nexport default function Container(props) {\n\n  let [isLogin, setIsLogin] = useState(false);\n  let [links, setLinks] = useState([]);\n\n  const size = useWindowSize();\n\n  const linksLogin = [\n    { href: '/', label: 'Inicio' },\n    { href: '/capsules', label: 'Capsulas' },\n    { href: '/tickets', label: 'Mis Reservas' },\n    { href: '/profile', label: 'Perfil' }\n  ]\n\n  const linksLogout = [\n    { href: '/', label: 'Inicio' },\n    { href: '/capsules', label: 'Capsulas' },\n    { href: '/tickets', label: 'Mis Reservas' },\n    { href: '/profile', label: 'Perfil' }\n  ]\n\n\n  if (isLogin === true) {\n    setLinks(linksLogin)\n  } else {\n    setLinks(linksLogout)\n  }\n\n  return (\n    <div>\n      <div className=\"bg-white text-gray-800 rounded-xl shadow-lg overflow-hidden relative min-w-full h-screen\">\n\n        <div className=\"bg-white h-full w-full px-5 pt-6 pb-20 overflow-y-auto\" >\n          {\n            size.width > 640 && <Header />\n          }\n          {props.children}\n        </div>\n        {\n          size.width <= 640 && <Nav links={links} />\n        }\n      </div>\n    </div>\n  )\n}\n\n// Hook\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // only execute all the code below in client side\n    if (typeof window !== 'undefined') {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight,\n        });\n      }\n\n      // Add event listener\n      window.addEventListener(\"resize\", handleResize);\n\n      // Call handler right away so state gets updated with initial window size\n      handleResize();\n\n      // Remove event listener on cleanup\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}"]},"metadata":{},"sourceType":"module"}