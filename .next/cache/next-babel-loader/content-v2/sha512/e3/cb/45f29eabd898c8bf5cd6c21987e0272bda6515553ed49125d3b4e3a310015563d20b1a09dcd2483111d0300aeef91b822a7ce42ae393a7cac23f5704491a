{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/raul/Documentos/Proyectos/Flexxo/flexxo-web/components/container.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport Header from \"./header\";\nimport Nav from '../components/nav';\nimport { useState, useEffect } from 'react';\nexport default function Container(props) {\n  _s();\n\n  var _useState = useState(false),\n      isLogin = _useState[0],\n      setIsLogin = _useState[1];\n\n  var _useState2 = useState([]),\n      links = _useState2[0],\n      setLinks = _useState2[1];\n\n  var size = useWindowSize();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white text-gray-800 rounded-xl shadow-lg overflow-hidden relative min-w-full h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white h-full w-full px-5 pt-6 pb-20 overflow-y-auto\",\n        children: [size.width > 640 && /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 33\n        }, this), props.children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), size.width <= 640 && /*#__PURE__*/_jsxDEV(Nav, {\n        links: isLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n} // Hook\n\n_s(Container, \"0GKF3Bjb83WxYhzUqAETf6QCMR0=\", false, function () {\n  return [useWindowSize];\n});\n\n_c = Container;\n\nfunction useWindowSize() {\n  _s2();\n\n  // Initialize state with undefined width/height so server and client renders match\n  var _useState3 = useState({\n    width: undefined,\n    height: undefined\n  }),\n      windowSize = _useState3[0],\n      setWindowSize = _useState3[1];\n\n  useEffect(function () {\n    // only execute all the code below in client side\n    if (true) {\n      // Handler to call on window resize\n      var handleResize = function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight\n        });\n      }; // Add event listener\n\n\n      window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n      handleResize(); // Remove event listener on cleanup\n\n      return function () {\n        return window.removeEventListener(\"resize\", handleResize);\n      };\n    }\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\n_s2(useWindowSize, \"WMqaMVAPr0u8CJVTsAIdEuYrbbM=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["/home/raul/Documentos/Proyectos/Flexxo/flexxo-web/components/container.jsx"],"names":["Header","Nav","useState","useEffect","Container","props","isLogin","setIsLogin","links","setLinks","size","useWindowSize","width","children","undefined","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAIA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAAA,kBAEXH,QAAQ,CAAC,KAAD,CAFG;AAAA,MAElCI,OAFkC;AAAA,MAEzBC,UAFyB;;AAAA,mBAGfL,QAAQ,CAAC,EAAD,CAHO;AAAA,MAGlCM,KAHkC;AAAA,MAG3BC,QAH2B;;AAKvC,MAAMC,IAAI,GAAGC,aAAa,EAA1B;AAEA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,0FAAf;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAC,wDAAf;AAAA,mBAEID,IAAI,CAACE,KAAL,GAAa,GAAb,iBAAoB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAFxB,EAIGP,KAAK,CAACQ,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EASIH,IAAI,CAACE,KAAL,IAAc,GAAd,iBAAqB,QAAC,GAAD;AAAK,QAAA,KAAK,EAAEN;AAAZ;AAAA;AAAA;AAAA;AAAA,cATzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,C,CAED;;GAzBwBF,S;UAKTO,a;;;KALSP,S;;AA0BxB,SAASO,aAAT,GAAyB;AAAA;;AACvB;AADuB,mBAEaT,QAAQ,CAAC;AAC3CU,IAAAA,KAAK,EAAEE,SADoC;AAE3CC,IAAAA,MAAM,EAAED;AAFmC,GAAD,CAFrB;AAAA,MAEhBE,UAFgB;AAAA,MAEJC,aAFI;;AAOvBd,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,cAAmC;AACjC;AADiC,UAExBe,YAFwB,GAEjC,SAASA,YAAT,GAAwB;AACtB;AACAD,QAAAA,aAAa,CAAC;AACZL,UAAAA,KAAK,EAAEO,MAAM,CAACC,UADF;AAEZL,UAAAA,MAAM,EAAEI,MAAM,CAACE;AAFH,SAAD,CAAb;AAID,OARgC,EAUjC;;;AACAF,MAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC,EAXiC,CAajC;;AACAA,MAAAA,YAAY,GAdqB,CAgBjC;;AACA,aAAO;AAAA,eAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC,CAAN;AAAA,OAAP;AACD;AACF,GArBQ,EAqBN,EArBM,CAAT,CAPuB,CA4Bf;;AACR,SAAOF,UAAP;AACD;;IA9BQL,a","sourcesContent":["import Header from \"./header\"\nimport Nav from '../components/nav'\nimport { useState, useEffect } from 'react';\n\n\n\nexport default function Container(props) {\n\n  let [isLogin, setIsLogin] = useState(false);\n  let [links, setLinks] = useState([]);\n\n  const size = useWindowSize();\n\n  return (\n    <div>\n      <div className=\"bg-white text-gray-800 rounded-xl shadow-lg overflow-hidden relative min-w-full h-screen\">\n\n        <div className=\"bg-white h-full w-full px-5 pt-6 pb-20 overflow-y-auto\" >\n          {\n            size.width > 640 && <Header />\n          }\n          {props.children}\n        </div>\n        {\n          size.width <= 640 && <Nav links={isLogin} />\n        }\n      </div>\n    </div>\n  )\n}\n\n// Hook\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    // only execute all the code below in client side\n    if (typeof window !== 'undefined') {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWindowSize({\n          width: window.innerWidth,\n          height: window.innerHeight,\n        });\n      }\n\n      // Add event listener\n      window.addEventListener(\"resize\", handleResize);\n\n      // Call handler right away so state gets updated with initial window size\n      handleResize();\n\n      // Remove event listener on cleanup\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}"]},"metadata":{},"sourceType":"module"}