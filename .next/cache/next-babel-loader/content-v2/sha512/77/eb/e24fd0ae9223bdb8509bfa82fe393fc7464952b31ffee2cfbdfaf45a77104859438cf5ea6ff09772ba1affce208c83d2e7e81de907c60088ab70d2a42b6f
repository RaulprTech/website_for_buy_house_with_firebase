{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\"; // Hook\n\nfunction useToggle() {\n  _s();\n\n  var initialValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  // Returns the tuple [state, dispatch]\n  // Normally with useReducer you pass a value to dispatch to indicate what action to\n  // take on the state, but in this case there's only one action.\n  return useReducer(function (state) {\n    return !state;\n  }, initialValue);\n}\n\n_s(useToggle, \"pNIL0eRARH2Tf6zRgnyIwauZ7RM=\");","map":{"version":3,"sources":["/home/raul/Documentos/Proyectos/Flexxo/flexxo-web/hooks/useToggle.js"],"names":["React","useReducer","useToggle","initialValue","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC,C,CAEA;;AACA,SAASC,SAAT,GAAyC;AAAA;;AAAA,MAAtBC,YAAsB,uEAAP,KAAO;AACrC;AACA;AACA;AACA,SAAOF,UAAU,CAAC,UAACG,KAAD;AAAA,WAAW,CAACA,KAAZ;AAAA,GAAD,EAAoBD,YAApB,CAAjB;AACH;;GALQD,S","sourcesContent":["import React, { useReducer } from \"react\";\n\n// Hook\nfunction useToggle(initialValue = false) {\n    // Returns the tuple [state, dispatch]\n    // Normally with useReducer you pass a value to dispatch to indicate what action to\n    // take on the state, but in this case there's only one action.\n    return useReducer((state) => !state, initialValue);\n}\n"]},"metadata":{},"sourceType":"module"}