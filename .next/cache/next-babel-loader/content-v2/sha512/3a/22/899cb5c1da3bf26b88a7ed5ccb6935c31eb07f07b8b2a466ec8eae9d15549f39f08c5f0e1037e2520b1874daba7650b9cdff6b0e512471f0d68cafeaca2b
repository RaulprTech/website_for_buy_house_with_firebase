{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/raulprtech/code/projects/houseforsale/hooks/useAuth.js\";\n// Hook (use-auth.js)\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport firebase from 'firebase';\nimport \"firebase/auth\"; // Add your Firebase credentials\n\n!firebase.apps.length && firebase.initializeApp({\n  apiKey: \"AIzaSyAb42q41W0gH-0OHLPw6mOHcvQoGFFfwtE\",\n  authDomain: \"flexxo-dev.firebaseapp.com\",\n  databaseURL: \"https://flexxo-dev-default-rtdb.firebaseio.com\",\n  projectId: \"flexxo-dev\",\n  storageBucket: \"flexxo-dev.appspot.com\",\n  messagingSenderId: \"462526675458\",\n  appId: \"1:462526675458:web:6156527a55904bd5e1051b\",\n  measurementId: \"G-E04VE4YK0W\"\n});\nconst authContext = /*#__PURE__*/createContext(); // Provider component that wraps your app and makes auth object ...\n// ... available to any child component that calls useAuth().\n\nexport function ProvideAuth({\n  children\n}) {\n  const auth = useProvideAuth();\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n} // Hook for child components to get the auth object ...\n// ... and re-render when it changes.\n\nexport const useAuth = () => {\n  return useContext(authContext);\n}; // Provider hook that creates auth object and handles state\n\nfunction useProvideAuth() {\n  const {\n    0: user,\n    1: setUser\n  } = useState(null); // Wrap any Firebase methods we want to use making sure ...\n  // ... to save the user to state.\n\n  const signin = (email, password) => {\n    return firebase.auth().signInWithEmailAndPassword(email, password).then(response => {\n      setUser(response.user);\n      return response.user;\n    });\n  };\n\n  const signup = (email, password) => {\n    return firebase.auth().createUserWithEmailAndPassword(email, password).then(response => {\n      setUser(response.user);\n      return response.user;\n    });\n  };\n\n  const signout = () => {\n    return firebase.auth().signOut().then(() => {\n      setUser(false);\n    });\n  };\n\n  const sendPasswordResetEmail = email => {\n    return firebase.auth().sendPasswordResetEmail(email).then(() => {\n      return true;\n    });\n  };\n\n  const confirmPasswordReset = (code, password) => {\n    return firebase.auth().confirmPasswordReset(code, password).then(() => {\n      return true;\n    });\n  }; // Subscribe to user on mount\n  // Because this sets state in the callback it will cause any ...\n  // ... component that utilizes this hook to re-render with the ...\n  // ... latest auth object.\n\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(false);\n      }\n    }); // Cleanup subscription on unmount\n\n    return () => unsubscribe();\n  }, []); // Return the user object and auth methods\n\n  return {\n    user,\n    signin,\n    signup,\n    signout,\n    sendPasswordResetEmail,\n    confirmPasswordReset\n  };\n}","map":{"version":3,"sources":["/home/raulprtech/code/projects/houseforsale/hooks/useAuth.js"],"names":["React","useState","useEffect","useContext","createContext","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","authContext","ProvideAuth","children","auth","useProvideAuth","useAuth","user","setUser","signin","email","password","signInWithEmailAndPassword","then","response","signup","createUserWithEmailAndPassword","signout","signOut","sendPasswordResetEmail","confirmPasswordReset","code","unsubscribe","onAuthStateChanged"],"mappings":"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","sourcesContent":["// Hook (use-auth.js)\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport firebase from 'firebase'\nimport \"firebase/auth\";\n\n// Add your Firebase credentials\n!firebase.apps.length &&\n    firebase.initializeApp({\n        apiKey: \"AIzaSyAb42q41W0gH-0OHLPw6mOHcvQoGFFfwtE\",\n        authDomain: \"flexxo-dev.firebaseapp.com\",\n        databaseURL: \"https://flexxo-dev-default-rtdb.firebaseio.com\",\n        projectId: \"flexxo-dev\",\n        storageBucket: \"flexxo-dev.appspot.com\",\n        messagingSenderId: \"462526675458\",\n        appId: \"1:462526675458:web:6156527a55904bd5e1051b\",\n        measurementId: \"G-E04VE4YK0W\"\n    });\n\n\n\n\nconst authContext = createContext();\n\n// Provider component that wraps your app and makes auth object ...\n// ... available to any child component that calls useAuth().\nexport function ProvideAuth({ children }) {\n    const auth = useProvideAuth();\n    return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\n// Hook for child components to get the auth object ...\n// ... and re-render when it changes.\nexport const useAuth = () => {\n    return useContext(authContext);\n};\n\n// Provider hook that creates auth object and handles state\nfunction useProvideAuth() {\n    const [user, setUser] = useState(null);\n\n    // Wrap any Firebase methods we want to use making sure ...\n    // ... to save the user to state.\n    const signin = (email, password) => {\n        return firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .then(response => {\n                setUser(response.user);\n                return response.user;\n            });\n    };\n\n    const signup = (email, password) => {\n        return firebase\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then(response => {\n                setUser(response.user);\n                return response.user;\n            });\n    };\n\n    const signout = () => {\n        return firebase\n            .auth()\n            .signOut()\n            .then(() => {\n                setUser(false);\n            });\n    };\n\n    const sendPasswordResetEmail = email => {\n        return firebase\n            .auth()\n            .sendPasswordResetEmail(email)\n            .then(() => {\n                return true;\n            });\n    };\n\n    const confirmPasswordReset = (code, password) => {\n        return firebase\n            .auth()\n            .confirmPasswordReset(code, password)\n            .then(() => {\n                return true;\n            });\n    };\n\n    // Subscribe to user on mount\n    // Because this sets state in the callback it will cause any ...\n    // ... component that utilizes this hook to re-render with the ...\n    // ... latest auth object.\n    useEffect(() => {\n        const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                setUser(user);\n            } else {\n                setUser(false);\n            }\n        });\n\n        // Cleanup subscription on unmount\n        return () => unsubscribe();\n    }, []);\n\n    // Return the user object and auth methods\n    return {\n        user,\n        signin,\n        signup,\n        signout,\n        sendPasswordResetEmail,\n        confirmPasswordReset\n    };\n}\n"]},"metadata":{},"sourceType":"module"}