{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[29],{WI49:function(e,t,r){\"use strict\";r.r(t);var n=r(\"zIRd\"),o=r(\"mrSG\"),i=r(\"qOnz\"),a=r(\"/6Yf\"),s=\"firebasestorage.googleapis.com\",u=function(e){function t(r,n){var o=e.call(this,U(r),\"Firebase Storage: \"+n+\" (\"+U(r)+\")\")||this;return o.customData={serverResponse:null},Object.setPrototypeOf(o,t.prototype),o}return Object(o.c)(t,e),t.prototype.codeEquals=function(e){return U(e)===this.code},Object.defineProperty(t.prototype,\"message\",{get:function(){return this.customData.serverResponse?this.message+\"\\n\"+this.customData.serverResponse:this.message},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"serverResponse\",{get:function(){return this.customData.serverResponse},set:function(e){this.customData.serverResponse=e},enumerable:!1,configurable:!0}),t}(i.c),c=\"unknown\",l=\"object-not-found\",h=\"quota-exceeded\",f=\"unauthenticated\",p=\"unauthorized\",d=\"retry-limit-exceeded\",_=\"canceled\",g=\"invalid-url\",b=\"invalid-default-bucket\",v=\"no-default-bucket\",m=\"cannot-slice-blob\",y=\"server-file-wrong-size\",w=\"no-download-url\",R=\"invalid-argument\",k=\"app-deleted\",T=\"invalid-root-operation\",O=\"invalid-format\",x=\"internal-error\",P=\"unsupported-environment\";function U(e){return\"storage/\"+e}function S(){return new u(c,\"An unknown error occurred, please check the error payload for server response.\")}function C(){return new u(_,\"User canceled the upload/download.\")}function E(){return new u(m,\"Cannot slice blob for upload. Please retry the upload.\")}function A(e){return new u(R,e)}function j(){return new u(k,\"The Firebase app was deleted.\")}function I(e){return new u(T,\"The operation '\"+e+\"' cannot be performed on a root reference, create a non-root reference using child, such as .child('file.png').\")}function q(e,t){return new u(O,\"String does not match format '\"+e+\"': \"+t)}function L(e){throw new u(x,\"Internal error: \"+e)}var N={RAW:\"raw\",BASE64:\"base64\",BASE64URL:\"base64url\",DATA_URL:\"data_url\"},B=function(e,t){this.data=e,this.contentType=t||null};function z(e,t){switch(e){case N.RAW:return new B(M(t));case N.BASE64:case N.BASE64URL:return new B(D(e,t));case N.DATA_URL:return new B(function(e){var t=new H(e);return t.base64?D(N.BASE64,t.rest):function(e){var t;try{t=decodeURIComponent(e)}catch(r){throw q(N.DATA_URL,\"Malformed data URL.\")}return M(t)}(t.rest)}(t),new H(t).contentType)}throw S()}function M(e){for(var t=[],r=0;r<e.length;r++){var n=e.charCodeAt(r);if(n<=127)t.push(n);else if(n<=2047)t.push(192|n>>6,128|63&n);else if(55296===(64512&n))if(r<e.length-1&&56320===(64512&e.charCodeAt(r+1)))n=65536|(1023&n)<<10|1023&e.charCodeAt(++r),t.push(240|n>>18,128|n>>12&63,128|n>>6&63,128|63&n);else t.push(239,191,189);else 56320===(64512&n)?t.push(239,191,189):t.push(224|n>>12,128|n>>6&63,128|63&n)}return new Uint8Array(t)}function D(e,t){switch(e){case N.BASE64:var r=-1!==t.indexOf(\"-\"),n=-1!==t.indexOf(\"_\");if(r||n)throw q(e,\"Invalid character '\"+(r?\"-\":\"_\")+\"' found: is it base64url encoded?\");break;case N.BASE64URL:var o=-1!==t.indexOf(\"+\"),i=-1!==t.indexOf(\"/\");if(o||i)throw q(e,\"Invalid character '\"+(o?\"+\":\"/\")+\"' found: is it base64 encoded?\");t=t.replace(/-/g,\"+\").replace(/_/g,\"/\")}var a;try{a=atob(t)}catch(c){throw q(e,\"Invalid character found\")}for(var s=new Uint8Array(a.length),u=0;u<a.length;u++)s[u]=a.charCodeAt(u);return s}var H=function(e){this.base64=!1,this.contentType=null;var t=e.match(/^data:([^,]+)?,/);if(null===t)throw q(N.DATA_URL,\"Must be formatted 'data:[<mediatype>][;base64],<data>\");var r=t[1]||null;null!=r&&(this.base64=(n=r,o=\";base64\",n.length>=o.length&&n.substring(n.length-o.length)===o),this.contentType=this.base64?r.substring(0,r.length-\";base64\".length):r),this.rest=e.substring(e.indexOf(\",\")+1);var n,o};var F,X={STATE_CHANGED:\"state_changed\"},G=\"running\",W=\"pausing\",K=\"paused\",V=\"success\",J=\"canceling\",Y=\"canceled\",Z=\"error\",$={RUNNING:\"running\",PAUSED:\"paused\",SUCCESS:\"success\",CANCELED:\"canceled\",ERROR:\"error\"};function Q(e){switch(e){case G:case W:case J:return $.RUNNING;case K:return $.PAUSED;case V:return $.SUCCESS;case Y:return $.CANCELED;case Z:default:return $.ERROR}}!function(e){e[e.NO_ERROR=0]=\"NO_ERROR\",e[e.NETWORK_ERROR=1]=\"NETWORK_ERROR\",e[e.ABORT=2]=\"ABORT\"}(F||(F={}));var ee=function(){function e(){var e=this;this.sent_=!1,this.xhr_=new XMLHttpRequest,this.errorCode_=F.NO_ERROR,this.sendPromise_=new Promise((function(t){e.xhr_.addEventListener(\"abort\",(function(){e.errorCode_=F.ABORT,t(e)})),e.xhr_.addEventListener(\"error\",(function(){e.errorCode_=F.NETWORK_ERROR,t(e)})),e.xhr_.addEventListener(\"load\",(function(){t(e)}))}))}return e.prototype.send=function(e,t,r,n){if(this.sent_)throw L(\"cannot .send() more than once\");if(this.sent_=!0,this.xhr_.open(t,e,!0),void 0!==n)for(var o in n)n.hasOwnProperty(o)&&this.xhr_.setRequestHeader(o,n[o].toString());return void 0!==r?this.xhr_.send(r):this.xhr_.send(),this.sendPromise_},e.prototype.getErrorCode=function(){if(!this.sent_)throw L(\"cannot .getErrorCode() before sending\");return this.errorCode_},e.prototype.getStatus=function(){if(!this.sent_)throw L(\"cannot .getStatus() before sending\");try{return this.xhr_.status}catch(e){return-1}},e.prototype.getResponseText=function(){if(!this.sent_)throw L(\"cannot .getResponseText() before sending\");return this.xhr_.responseText},e.prototype.abort=function(){this.xhr_.abort()},e.prototype.getResponseHeader=function(e){return this.xhr_.getResponseHeader(e)},e.prototype.addUploadProgressListener=function(e){null!=this.xhr_.upload&&this.xhr_.upload.addEventListener(\"progress\",e)},e.prototype.removeUploadProgressListener=function(e){null!=this.xhr_.upload&&this.xhr_.upload.removeEventListener(\"progress\",e)},e}(),te=function(){function e(){}return e.prototype.createXhrIo=function(){return new ee},e}();function re(e){return\"string\"===typeof e||e instanceof String}function ne(e){return oe()&&e instanceof Blob}function oe(){return\"undefined\"!==typeof Blob}function ie(e,t,r,n){if(n<t)throw new u(R,\"Invalid value for '\"+e+\"'. Expected \"+t+\" or greater.\");if(n>r)throw new u(R,\"Invalid value for '\"+e+\"'. Expected \"+r+\" or less.\")}function ae(){return\"undefined\"!==typeof BlobBuilder?BlobBuilder:\"undefined\"!==typeof WebKitBlobBuilder?WebKitBlobBuilder:void 0}function se(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var r=ae();if(void 0!==r){for(var n=new r,o=0;o<e.length;o++)n.append(e[o]);return n.getBlob()}if(oe())return new Blob(e);throw new u(P,\"This browser doesn't seem to support creating Blobs\")}var ue=function(){function e(e,t){var r=0,n=\"\";ne(e)?(this.data_=e,r=e.size,n=e.type):e instanceof ArrayBuffer?(t?this.data_=new Uint8Array(e):(this.data_=new Uint8Array(e.byteLength),this.data_.set(new Uint8Array(e))),r=this.data_.length):e instanceof Uint8Array&&(t?this.data_=e:(this.data_=new Uint8Array(e.length),this.data_.set(e)),r=e.length),this.size_=r,this.type_=n}return e.prototype.size=function(){return this.size_},e.prototype.type=function(){return this.type_},e.prototype.slice=function(t,r){if(ne(this.data_)){var n=function(e,t,r){return e.webkitSlice?e.webkitSlice(t,r):e.mozSlice?e.mozSlice(t,r):e.slice?e.slice(t,r):null}(this.data_,t,r);return null===n?null:new e(n)}return new e(new Uint8Array(this.data_.buffer,t,r-t),!0)},e.getBlob=function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];if(oe()){var n=t.map((function(t){return t instanceof e?t.data_:t}));return new e(se.apply(null,n))}var o=t.map((function(e){return re(e)?z(N.RAW,e).data:e.data_})),i=0;o.forEach((function(e){i+=e.byteLength}));var a=new Uint8Array(i),s=0;return o.forEach((function(e){for(var t=0;t<e.length;t++)a[s++]=e[t]})),new e(a,!0)},e.prototype.uploadData=function(){return this.data_},e}(),ce=function(){function e(e,t){this.bucket=e,this.path_=t}return Object.defineProperty(e.prototype,\"path\",{get:function(){return this.path_},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"isRoot\",{get:function(){return 0===this.path.length},enumerable:!1,configurable:!0}),e.prototype.fullServerUrl=function(){var e=encodeURIComponent;return\"/b/\"+e(this.bucket)+\"/o/\"+e(this.path)},e.prototype.bucketOnlyServerUrl=function(){return\"/b/\"+encodeURIComponent(this.bucket)+\"/o\"},e.makeFromBucketSpec=function(t){var r;try{r=e.makeFromUrl(t)}catch(n){return new e(t,\"\")}if(\"\"===r.path)return r;throw new u(b,\"Invalid default bucket '\"+t+\"'.\")},e.makeFromUrl=function(t){var r=null,n=\"([A-Za-z0-9.\\\\-_]+)\";var o=new RegExp(\"^gs://\"+n+\"(/(.*))?$\",\"i\");function i(e){e.path_=decodeURIComponent(e.path)}for(var a=s.replace(/[.]/g,\"\\\\.\"),c=[{regex:o,indices:{bucket:1,path:3},postModify:function(e){\"/\"===e.path.charAt(e.path.length-1)&&(e.path_=e.path_.slice(0,-1))}},{regex:new RegExp(\"^https?://\"+a+\"/v[A-Za-z0-9_]+/b/\"+n+\"/o(/([^?#]*).*)?$\",\"i\"),indices:{bucket:1,path:3},postModify:i},{regex:new RegExp(\"^https?://(?:storage.googleapis.com|storage.cloud.google.com)/\"+n+\"/([^?#]*)\",\"i\"),indices:{bucket:1,path:2},postModify:i}],l=0;l<c.length;l++){var h=c[l],f=h.regex.exec(t);if(f){var p=f[h.indices.bucket],d=f[h.indices.path];d||(d=\"\"),r=new e(p,d),h.postModify(r);break}}if(null==r)throw function(e){return new u(g,\"Invalid URL '\"+e+\"'.\")}(t);return r},e}();function le(e){var t,r;try{t=JSON.parse(e)}catch(n){return null}return\"object\"!==typeof(r=t)||Array.isArray(r)?null:t}function he(e){var t=e.lastIndexOf(\"/\",e.length-2);return-1===t?e:e.slice(t+1)}function fe(e){return\"https://\"+s+\"/v0\"+e}function pe(e){var t=encodeURIComponent,r=\"?\";for(var n in e){if(e.hasOwnProperty(n))r=r+(t(n)+\"=\"+t(e[n]))+\"&\"}return r=r.slice(0,-1)}function de(e,t){return t}var _e=function(e,t,r,n){this.server=e,this.local=t||e,this.writable=!!r,this.xform=n||de},ge=null;function be(){if(ge)return ge;var e=[];e.push(new _e(\"bucket\")),e.push(new _e(\"generation\")),e.push(new _e(\"metageneration\")),e.push(new _e(\"name\",\"fullPath\",!0));var t=new _e(\"name\");t.xform=function(e,t){return function(e){return!re(e)||e.length<2?e:he(e)}(t)},e.push(t);var r=new _e(\"size\");return r.xform=function(e,t){return void 0!==t?Number(t):t},e.push(r),e.push(new _e(\"timeCreated\")),e.push(new _e(\"updated\")),e.push(new _e(\"md5Hash\",null,!0)),e.push(new _e(\"cacheControl\",null,!0)),e.push(new _e(\"contentDisposition\",null,!0)),e.push(new _e(\"contentEncoding\",null,!0)),e.push(new _e(\"contentLanguage\",null,!0)),e.push(new _e(\"contentType\",null,!0)),e.push(new _e(\"metadata\",\"customMetadata\",!0)),ge=e}function ve(e,t,r){for(var n={type:\"file\"},o=r.length,i=0;i<o;i++){var a=r[i];n[a.local]=a.xform(n,t[a.server])}return function(e,t){Object.defineProperty(e,\"ref\",{get:function(){var r=e.bucket,n=e.fullPath,o=new ce(r,n);return t.makeStorageReference(o)}})}(n,e),n}function me(e,t,r){var n=le(t);return null===n?null:ve(e,n,r)}function ye(e,t){for(var r={},n=t.length,o=0;o<n;o++){var i=t[o];i.writable&&(r[i.server]=e[i.local])}return JSON.stringify(r)}function we(e,t,r){var n=le(r);return null===n?null:function(e,t,r){var n={prefixes:[],items:[],nextPageToken:r.nextPageToken};if(r.prefixes)for(var o=0,i=r.prefixes;o<i.length;o++){var a=i[o].replace(/\\/$/,\"\"),s=e.makeStorageReference(new ce(t,a));n.prefixes.push(s)}if(r.items)for(var u=0,c=r.items;u<c.length;u++){var l=c[u];s=e.makeStorageReference(new ce(t,l.name)),n.items.push(s)}return n}(e,t,n)}var Re=function(e,t,r,n){this.url=e,this.method=t,this.handler=r,this.timeout=n,this.urlParams={},this.headers={},this.body=null,this.errorHandler=null,this.progressCallback=null,this.successCodes=[200],this.additionalRetryCodes=[]};function ke(e){if(!e)throw S()}function Te(e,t){return function(r,n){var o=me(e,n,t);return ke(null!==o),o}}function Oe(e,t){return function(r,n){var o=me(e,n,t);return ke(null!==o),function(e,t){var r=le(t);if(null===r)return null;if(!re(r.downloadTokens))return null;var n=r.downloadTokens;if(0===n.length)return null;var o=encodeURIComponent;return n.split(\",\").map((function(t){var r=e.bucket,n=e.fullPath;return fe(\"/b/\"+o(r)+\"/o/\"+o(n))+pe({alt:\"media\",token:t})}))[0]}(o,n)}}function xe(e){return function(t,r){var n,o,i;return 401===t.getStatus()?n=new u(f,\"User is not authenticated, please authenticate using Firebase Authentication and try again.\"):402===t.getStatus()?(i=e.bucket,n=new u(h,\"Quota for bucket '\"+i+\"' exceeded, please view quota on https://firebase.google.com/pricing/.\")):403===t.getStatus()?(o=e.path,n=new u(p,\"User does not have permission to access '\"+o+\"'.\")):n=r,n.serverResponse=r.serverResponse,n}}function Pe(e){var t=xe(e);return function(r,n){var o,i=t(r,n);return 404===r.getStatus()&&(o=e.path,i=new u(l,\"Object '\"+o+\"' does not exist.\")),i.serverResponse=n.serverResponse,i}}function Ue(e,t,r){var n=fe(t.fullServerUrl()),o=e.maxOperationRetryTime,i=new Re(n,\"GET\",Te(e,r),o);return i.errorHandler=Pe(t),i}function Se(e,t,r,n,o){var i={};t.isRoot?i.prefix=\"\":i.prefix=t.path+\"/\",r&&r.length>0&&(i.delimiter=r),n&&(i.pageToken=n),o&&(i.maxResults=o);var a=fe(t.bucketOnlyServerUrl()),s=e.maxOperationRetryTime,u=new Re(a,\"GET\",function(e,t){return function(r,n){var o=we(e,t,n);return ke(null!==o),o}}(e,t.bucket),s);return u.urlParams=i,u.errorHandler=xe(t),u}function Ce(e,t,r){var n=Object.assign({},r);return n.fullPath=e.path,n.size=t.size(),n.contentType||(n.contentType=function(e,t){return e&&e.contentType||t&&t.type()||\"application/octet-stream\"}(null,t)),n}var Ee=function(e,t,r,n){this.current=e,this.total=t,this.finalized=!!r,this.metadata=n||null};function Ae(e,t){var r=null;try{r=e.getResponseHeader(\"X-Goog-Upload-Status\")}catch(n){ke(!1)}return ke(!!r&&-1!==(t||[\"active\"]).indexOf(r)),r}var je=262144;function Ie(e,t,r,n,o,i,a,s){var c=new Ee(0,0);if(a?(c.current=a.current,c.total=a.total):(c.current=0,c.total=n.size()),n.size()!==c.total)throw new u(y,\"Server recorded incorrect upload file size, please retry the upload.\");var l=c.total-c.current,h=l;o>0&&(h=Math.min(h,o));var f=c.current,p=f+h,d={\"X-Goog-Upload-Command\":h===l?\"upload, finalize\":\"upload\",\"X-Goog-Upload-Offset\":c.current},_=n.slice(f,p);if(null===_)throw E();var g=t.maxUploadRetryTime,b=new Re(r,\"POST\",(function(e,r){var o,a=Ae(e,[\"active\",\"final\"]),s=c.current+h,u=n.size();return o=\"final\"===a?Te(t,i)(e,r):null,new Ee(s,u,\"final\"===a,o)}),g);return b.headers=d,b.body=_.uploadData(),b.progressCallback=s||null,b.errorHandler=xe(e),b}var qe=function(e,t,r){if(\"function\"===typeof e||null!=t||null!=r)this.next=e,this.error=t,this.complete=r;else{var n=e;this.next=n.next,this.error=n.error,this.complete=n.complete}},Le=function(e,t,r,n,o,i){this.bytesTransferred=e,this.totalBytes=t,this.state=r,this.metadata=n,this.task=o,this.ref=i};function Ne(e){return function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];Promise.resolve().then((function(){return e.apply(void 0,t)}))}}var Be=function(){function e(e,t,r){var n=this;void 0===r&&(r=null),this._transferred=0,this._needToFetchStatus=!1,this._needToFetchMetadata=!1,this._observers=[],this._error=void 0,this._uploadUrl=void 0,this._request=void 0,this._chunkMultiplier=1,this._resolve=void 0,this._reject=void 0,this._ref=e,this._blob=t,this._metadata=r,this._mappings=be(),this._resumable=this._shouldDoResumable(this._blob),this._state=G,this._errorHandler=function(e){n._request=void 0,n._chunkMultiplier=1,e.codeEquals(_)?(n._needToFetchStatus=!0,n.completeTransitions_()):(n._error=e,n._transition(Z))},this._metadataErrorHandler=function(e){n._request=void 0,e.codeEquals(_)?n.completeTransitions_():(n._error=e,n._transition(Z))},this._promise=new Promise((function(e,t){n._resolve=e,n._reject=t,n._start()})),this._promise.then(null,(function(){}))}return e.prototype._makeProgressCallback=function(){var e=this,t=this._transferred;return function(r){return e._updateProgress(t+r)}},e.prototype._shouldDoResumable=function(e){return e.size()>262144},e.prototype._start=function(){this._state===G&&void 0===this._request&&(this._resumable?void 0===this._uploadUrl?this._createResumable():this._needToFetchStatus?this._fetchStatus():this._needToFetchMetadata?this._fetchMetadata():this._continueUpload():this._oneShotUpload())},e.prototype._resolveToken=function(e){var t=this;this._ref.storage.getAuthToken().then((function(r){switch(t._state){case G:e(r);break;case J:t._transition(Y);break;case W:t._transition(K)}}))},e.prototype._createResumable=function(){var e=this;this._resolveToken((function(t){var r=function(e,t,r,n,o){var i=t.bucketOnlyServerUrl(),a=Ce(t,n,o),s={name:a.fullPath},u=fe(i),c={\"X-Goog-Upload-Protocol\":\"resumable\",\"X-Goog-Upload-Command\":\"start\",\"X-Goog-Upload-Header-Content-Length\":n.size(),\"X-Goog-Upload-Header-Content-Type\":a.contentType,\"Content-Type\":\"application/json; charset=utf-8\"},l=ye(a,r),h=e.maxUploadRetryTime,f=new Re(u,\"POST\",(function(e){var t;Ae(e);try{t=e.getResponseHeader(\"X-Goog-Upload-URL\")}catch(r){ke(!1)}return ke(re(t)),t}),h);return f.urlParams=s,f.headers=c,f.body=l,f.errorHandler=xe(t),f}(e._ref.storage,e._ref._location,e._mappings,e._blob,e._metadata),n=e._ref.storage.makeRequest(r,t);e._request=n,n.getPromise().then((function(t){e._request=void 0,e._uploadUrl=t,e._needToFetchStatus=!1,e.completeTransitions_()}),e._errorHandler)}))},e.prototype._fetchStatus=function(){var e=this,t=this._uploadUrl;this._resolveToken((function(r){var n=function(e,t,r,n){var o=e.maxUploadRetryTime,i=new Re(r,\"POST\",(function(e){var t=Ae(e,[\"active\",\"final\"]),r=null;try{r=e.getResponseHeader(\"X-Goog-Upload-Size-Received\")}catch(i){ke(!1)}r||ke(!1);var o=Number(r);return ke(!isNaN(o)),new Ee(o,n.size(),\"final\"===t)}),o);return i.headers={\"X-Goog-Upload-Command\":\"query\"},i.errorHandler=xe(t),i}(e._ref.storage,e._ref._location,t,e._blob),o=e._ref.storage.makeRequest(n,r);e._request=o,o.getPromise().then((function(t){t=t,e._request=void 0,e._updateProgress(t.current),e._needToFetchStatus=!1,t.finalized&&(e._needToFetchMetadata=!0),e.completeTransitions_()}),e._errorHandler)}))},e.prototype._continueUpload=function(){var e=this,t=je*this._chunkMultiplier,r=new Ee(this._transferred,this._blob.size()),n=this._uploadUrl;this._resolveToken((function(o){var i;try{i=Ie(e._ref._location,e._ref.storage,n,e._blob,t,e._mappings,r,e._makeProgressCallback())}catch(s){return e._error=s,void e._transition(Z)}var a=e._ref.storage.makeRequest(i,o);e._request=a,a.getPromise().then((function(t){e._increaseMultiplier(),e._request=void 0,e._updateProgress(t.current),t.finalized?(e._metadata=t.metadata,e._transition(V)):e.completeTransitions_()}),e._errorHandler)}))},e.prototype._increaseMultiplier=function(){je*this._chunkMultiplier<33554432&&(this._chunkMultiplier*=2)},e.prototype._fetchMetadata=function(){var e=this;this._resolveToken((function(t){var r=Ue(e._ref.storage,e._ref._location,e._mappings),n=e._ref.storage.makeRequest(r,t);e._request=n,n.getPromise().then((function(t){e._request=void 0,e._metadata=t,e._transition(V)}),e._metadataErrorHandler)}))},e.prototype._oneShotUpload=function(){var e=this;this._resolveToken((function(t){var r=function(e,t,r,n,o){var i=t.bucketOnlyServerUrl(),a={\"X-Goog-Upload-Protocol\":\"multipart\"},s=function(){for(var e=\"\",t=0;t<2;t++)e+=Math.random().toString().slice(2);return e}();a[\"Content-Type\"]=\"multipart/related; boundary=\"+s;var u=Ce(t,n,o),c=\"--\"+s+\"\\r\\nContent-Type: application/json; charset=utf-8\\r\\n\\r\\n\"+ye(u,r)+\"\\r\\n--\"+s+\"\\r\\nContent-Type: \"+u.contentType+\"\\r\\n\\r\\n\",l=\"\\r\\n--\"+s+\"--\",h=ue.getBlob(c,n,l);if(null===h)throw E();var f={name:u.fullPath},p=fe(i),d=e.maxUploadRetryTime,_=new Re(p,\"POST\",Te(e,r),d);return _.urlParams=f,_.headers=a,_.body=h.uploadData(),_.errorHandler=xe(t),_}(e._ref.storage,e._ref._location,e._mappings,e._blob,e._metadata),n=e._ref.storage.makeRequest(r,t);e._request=n,n.getPromise().then((function(t){e._request=void 0,e._metadata=t,e._updateProgress(e._blob.size()),e._transition(V)}),e._errorHandler)}))},e.prototype._updateProgress=function(e){var t=this._transferred;this._transferred=e,this._transferred!==t&&this._notifyObservers()},e.prototype._transition=function(e){if(this._state!==e)switch(e){case J:case W:this._state=e,void 0!==this._request&&this._request.cancel();break;case G:var t=this._state===K;this._state=e,t&&(this._notifyObservers(),this._start());break;case K:this._state=e,this._notifyObservers();break;case Y:this._error=C(),this._state=e,this._notifyObservers();break;case Z:case V:this._state=e,this._notifyObservers()}},e.prototype.completeTransitions_=function(){switch(this._state){case W:this._transition(K);break;case J:this._transition(Y);break;case G:this._start()}},Object.defineProperty(e.prototype,\"snapshot\",{get:function(){var e=Q(this._state);return new Le(this._transferred,this._blob.size(),e,this._metadata,this,this._ref)},enumerable:!1,configurable:!0}),e.prototype.on=function(e,t,r,n){var o=this,i=new qe(t,r,n);return this._addObserver(i),function(){o._removeObserver(i)}},e.prototype.then=function(e,t){return this._promise.then(e,t)},e.prototype.catch=function(e){return this.then(null,e)},e.prototype._addObserver=function(e){this._observers.push(e),this._notifyObserver(e)},e.prototype._removeObserver=function(e){var t=this._observers.indexOf(e);-1!==t&&this._observers.splice(t,1)},e.prototype._notifyObservers=function(){var e=this;this._finishPromise(),this._observers.slice().forEach((function(t){e._notifyObserver(t)}))},e.prototype._finishPromise=function(){if(void 0!==this._resolve){var e=!0;switch(Q(this._state)){case $.SUCCESS:Ne(this._resolve.bind(null,this.snapshot))();break;case $.CANCELED:case $.ERROR:Ne(this._reject.bind(null,this._error))();break;default:e=!1}e&&(this._resolve=void 0,this._reject=void 0)}},e.prototype._notifyObserver=function(e){switch(Q(this._state)){case $.RUNNING:case $.PAUSED:e.next&&Ne(e.next.bind(e,this.snapshot))();break;case $.SUCCESS:e.complete&&Ne(e.complete.bind(e))();break;case $.CANCELED:case $.ERROR:e.error&&Ne(e.error.bind(e,this._error))();break;default:e.error&&Ne(e.error.bind(e,this._error))()}},e.prototype.resume=function(){var e=this._state===K||this._state===W;return e&&this._transition(G),e},e.prototype.pause=function(){var e=this._state===G;return e&&this._transition(W),e},e.prototype.cancel=function(){var e=this._state===G||this._state===W;return e&&this._transition(J),e},e}(),ze=function(){function e(e,t){this._service=e,this._location=t instanceof ce?t:ce.makeFromUrl(t)}return e.prototype.toString=function(){return\"gs://\"+this._location.bucket+\"/\"+this._location.path},e.prototype.newRef=function(t,r){return new e(t,r)},Object.defineProperty(e.prototype,\"root\",{get:function(){var e=new ce(this._location.bucket,\"\");return this.newRef(this._service,e)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"bucket\",{get:function(){return this._location.bucket},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"fullPath\",{get:function(){return this._location.path},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"name\",{get:function(){return he(this._location.path)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"storage\",{get:function(){return this._service},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"parent\",{get:function(){var t=function(e){if(0===e.length)return null;var t=e.lastIndexOf(\"/\");return-1===t?\"\":e.slice(0,t)}(this._location.path);if(null===t)return null;var r=new ce(this._location.bucket,t);return new e(this._service,r)},enumerable:!1,configurable:!0}),e.prototype._throwIfRoot=function(e){if(\"\"===this._location.path)throw I(e)},e}();function Me(e){var t={prefixes:[],items:[]};return De(e,t).then((function(){return t}))}function De(e,t,r){return Object(o.b)(this,void 0,void 0,(function(){var n,i,a;return Object(o.d)(this,(function(o){switch(o.label){case 0:return[4,He(e,{pageToken:r})];case 1:return n=o.sent(),(i=t.prefixes).push.apply(i,n.prefixes),(a=t.items).push.apply(a,n.items),null==n.nextPageToken?[3,3]:[4,De(e,t,n.nextPageToken)];case 2:o.sent(),o.label=3;case 3:return[2]}}))}))}function He(e,t){return Object(o.b)(this,void 0,void 0,(function(){var r,n,i;return Object(o.d)(this,(function(o){switch(o.label){case 0:return null!=t&&\"number\"===typeof t.maxResults&&ie(\"options.maxResults\",1,1e3,t.maxResults),[4,e.storage.getAuthToken()];case 1:return r=o.sent(),n=t||{},i=Se(e.storage,e._location,\"/\",n.pageToken,n.maxResults),[2,e.storage.makeRequest(i,r).getPromise()]}}))}))}function Fe(e,t){return Object(o.b)(this,void 0,void 0,(function(){var r,n;return Object(o.d)(this,(function(o){switch(o.label){case 0:return e._throwIfRoot(\"updateMetadata\"),[4,e.storage.getAuthToken()];case 1:return r=o.sent(),n=function(e,t,r,n){var o=fe(t.fullServerUrl()),i=ye(r,n),a=e.maxOperationRetryTime,s=new Re(o,\"PATCH\",Te(e,n),a);return s.headers={\"Content-Type\":\"application/json; charset=utf-8\"},s.body=i,s.errorHandler=Pe(t),s}(e.storage,e._location,t,be()),[2,e.storage.makeRequest(n,r).getPromise()]}}))}))}function Xe(e){return Object(o.b)(this,void 0,void 0,(function(){var t,r;return Object(o.d)(this,(function(n){switch(n.label){case 0:return e._throwIfRoot(\"getDownloadURL\"),[4,e.storage.getAuthToken()];case 1:return t=n.sent(),r=function(e,t,r){var n=fe(t.fullServerUrl()),o=e.maxOperationRetryTime,i=new Re(n,\"GET\",Oe(e,r),o);return i.errorHandler=Pe(t),i}(e.storage,e._location,be()),[2,e.storage.makeRequest(r,t).getPromise().then((function(e){if(null===e)throw new u(w,\"The given file does not have any download URLs.\");return e}))]}}))}))}function Ge(e){return Object(o.b)(this,void 0,void 0,(function(){var t,r;return Object(o.d)(this,(function(n){switch(n.label){case 0:return e._throwIfRoot(\"deleteObject\"),[4,e.storage.getAuthToken()];case 1:return t=n.sent(),r=function(e,t){var r=fe(t.fullServerUrl()),n=e.maxOperationRetryTime,o=new Re(r,\"DELETE\",(function(e,t){}),n);return o.successCodes=[200,204],o.errorHandler=Pe(t),o}(e.storage,e._location),[2,e.storage.makeRequest(r,t).getPromise()]}}))}))}function We(e,t){var r=function(e,t){var r=t.split(\"/\").filter((function(e){return e.length>0})).join(\"/\");return 0===e.length?r:e+\"/\"+r}(e._location.path,t),n=new ce(e._location.bucket,r);return new ze(e.storage,n)}var Ke=function(){function e(e,t,r){this._delegate=e,this.task=t,this.ref=r}return Object.defineProperty(e.prototype,\"bytesTransferred\",{get:function(){return this._delegate.bytesTransferred},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"metadata\",{get:function(){return this._delegate.metadata},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"state\",{get:function(){return this._delegate.state},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"totalBytes\",{get:function(){return this._delegate.totalBytes},enumerable:!1,configurable:!0}),e}(),Ve=function(){function e(e,t){this._delegate=e,this._ref=t,this.cancel=this._delegate.cancel.bind(this._delegate),this.catch=this._delegate.catch.bind(this._delegate),this.pause=this._delegate.pause.bind(this._delegate),this.resume=this._delegate.resume.bind(this._delegate),this._snapshot=new Ke(this._delegate.snapshot,this,this._ref)}return Object.defineProperty(e.prototype,\"snapshot\",{get:function(){return this._snapshot},enumerable:!1,configurable:!0}),e.prototype.then=function(e,t){var r=this;return this._delegate.then((function(t){if(e)return e(new Ke(t,r,r._ref))}),t)},e.prototype.on=function(e,t,r,n){var o=this,i=void 0;return t&&(i=\"function\"===typeof t?function(e){return t(new Ke(e,o,o._ref))}:{next:t.next?function(e){return t.next(new Ke(e,o,o._ref))}:void 0,complete:t.complete||void 0,error:t.error||void 0}),this._delegate.on(e,i,r||void 0,n||void 0)},e}(),Je=function(){function e(e,t){this._delegate=e,this._service=t}return Object.defineProperty(e.prototype,\"prefixes\",{get:function(){var e=this;return this._delegate.prefixes.map((function(t){return new Ye(t,e._service)}))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"items\",{get:function(){var e=this;return this._delegate.items.map((function(t){return new Ye(t,e._service)}))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"nextPageToken\",{get:function(){return this._delegate.nextPageToken||null},enumerable:!1,configurable:!0}),e}(),Ye=function(){function e(e,t){this._delegate=e,this.storage=t}return Object.defineProperty(e.prototype,\"name\",{get:function(){return this._delegate.name},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"bucket\",{get:function(){return this._delegate.bucket},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"fullPath\",{get:function(){return this._delegate.fullPath},enumerable:!1,configurable:!0}),e.prototype.toString=function(){return this._delegate.toString()},e.prototype.child=function(t){return new e(We(this._delegate,t),this.storage)},Object.defineProperty(e.prototype,\"root\",{get:function(){return new e(this._delegate.root,this.storage)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"parent\",{get:function(){var t=this._delegate.parent;return null==t?null:new e(t,this.storage)},enumerable:!1,configurable:!0}),e.prototype.put=function(e,t){return this._throwIfRoot(\"put\"),new Ve(function(e,t,r){return void 0===r&&(r=null),e._throwIfRoot(\"uploadBytesResumable\"),new Be(e,new ue(t),r)}(this._delegate,e,t),this)},e.prototype.putString=function(e,t,r){return void 0===t&&(t=N.RAW),this._throwIfRoot(\"putString\"),new Ve(function(e,t,r,n){void 0===r&&(r=N.RAW),e._throwIfRoot(\"putString\");var i=z(r,t),a=Object(o.a)({},n);return null==a.contentType&&null!=i.contentType&&(a.contentType=i.contentType),new Be(e,new ue(i.data,!0),a)}(this._delegate,e,t,r),this)},e.prototype.listAll=function(){var e=this;return Me(this._delegate).then((function(t){return new Je(t,e.storage)}))},e.prototype.list=function(e){var t=this;return He(this._delegate,e).then((function(e){return new Je(e,t.storage)}))},e.prototype.getMetadata=function(){return function(e){return Object(o.b)(this,void 0,void 0,(function(){var t,r;return Object(o.d)(this,(function(n){switch(n.label){case 0:return e._throwIfRoot(\"getMetadata\"),[4,e.storage.getAuthToken()];case 1:return t=n.sent(),r=Ue(e.storage,e._location,be()),[2,e.storage.makeRequest(r,t).getPromise()]}}))}))}(this._delegate)},e.prototype.updateMetadata=function(e){return Fe(this._delegate,e)},e.prototype.getDownloadURL=function(){return Xe(this._delegate)},e.prototype.delete=function(){return this._throwIfRoot(\"delete\"),Ge(this._delegate)},e.prototype._throwIfRoot=function(e){if(\"\"===this._delegate._location.path)throw I(e)},e}(),Ze=function(){function e(e){this.promise_=Promise.reject(e)}return e.prototype.getPromise=function(){return this.promise_},e.prototype.cancel=function(e){},e}();var $e=function(){function e(e,t,r,n,o,i,a,s,u,c,l){var h=this;this.pendingXhr_=null,this.backoffId_=null,this.canceled_=!1,this.appDelete_=!1,this.url_=e,this.method_=t,this.headers_=r,this.body_=n,this.successCodes_=o.slice(),this.additionalRetryCodes_=i.slice(),this.callback_=a,this.errorCallback_=s,this.progressCallback_=c,this.timeout_=u,this.pool_=l,this.promise_=new Promise((function(e,t){h.resolve_=e,h.reject_=t,h.start_()}))}return e.prototype.start_=function(){var e=this;function t(t,r){var n,o=e.resolve_,i=e.reject_,a=r.xhr;if(r.wasSuccessCode)try{var s=e.callback_(a,a.getResponseText());void 0!==s?o(s):o()}catch(c){i(c)}else null!==a?((n=S()).serverResponse=a.getResponseText(),e.errorCallback_?i(e.errorCallback_(a,n)):i(n)):r.canceled?i(n=e.appDelete_?j():C()):i(n=new u(d,\"Max retry time for operation exceeded, please try again.\"))}this.canceled_?t(0,new Qe(!1,null,!0)):this.backoffId_=function(e,t,r){var n=1,i=null,a=!1,s=0;function u(){return 2===s}var c=!1;function l(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];c||(c=!0,t.apply(null,e))}function h(t){i=setTimeout((function(){i=null,e(f,u())}),t)}function f(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];if(!c)if(e)l.call.apply(l,Object(o.g)([null,e],t));else{var i;u()||a?l.call.apply(l,Object(o.g)([null,e],t)):(n<64&&(n*=2),1===s?(s=2,i=0):i=1e3*(n+Math.random()),h(i))}}var p=!1;function d(e){p||(p=!0,c||(null!==i?(e||(s=2),clearTimeout(i),h(0)):e||(s=1)))}return h(0),setTimeout((function(){a=!0,d(!0)}),r),d}((function(t,r){if(r)t(!1,new Qe(!1,null,!0));else{var n=e.pool_.createXhrIo();e.pendingXhr_=n,null!==e.progressCallback_&&n.addUploadProgressListener(o),n.send(e.url_,e.method_,e.body_,e.headers_).then((function(r){null!==e.progressCallback_&&r.removeUploadProgressListener(o),e.pendingXhr_=null;var n=(r=r).getErrorCode()===F.NO_ERROR,i=r.getStatus();if(n&&!e.isRetryStatusCode_(i)){var a=-1!==e.successCodes_.indexOf(i);t(!0,new Qe(a,r))}else{var s=r.getErrorCode()===F.ABORT;t(!1,new Qe(!1,null,s))}}))}function o(t){var r=t.loaded,n=t.lengthComputable?t.total:-1;null!==e.progressCallback_&&e.progressCallback_(r,n)}}),t,this.timeout_)},e.prototype.getPromise=function(){return this.promise_},e.prototype.cancel=function(e){this.canceled_=!0,this.appDelete_=e||!1,null!==this.backoffId_&&(0,this.backoffId_)(!1),null!==this.pendingXhr_&&this.pendingXhr_.abort()},e.prototype.isRetryStatusCode_=function(e){var t=e>=500&&e<600,r=-1!==[408,429].indexOf(e),n=-1!==this.additionalRetryCodes_.indexOf(e);return t||r||n},e}(),Qe=function(e,t,r){this.wasSuccessCode=e,this.xhr=t,this.canceled=!!r};function et(e,t,r,o){var i=pe(e.urlParams),a=e.url+i,s=Object.assign({},e.headers);return function(e,t){t&&(e[\"X-Firebase-GMPID\"]=t)}(s,t),function(e,t){null!==t&&t.length>0&&(e.Authorization=\"Firebase \"+t)}(s,r),function(e){var t=\"undefined\"!==typeof n.a?n.a.SDK_VERSION:\"AppManager\";e[\"X-Firebase-Storage-Version\"]=\"webjs/\"+t}(s),new $e(a,e.method,s,e.body,e.successCodes,e.additionalRetryCodes,e.handler,e.errorHandler,e.timeout,e.progressCallback,o)}function tt(e){return/^[A-Za-z]+:\\/\\//.test(e)}function rt(e,t){if(e instanceof ot){var r=e;if(null==r._bucket)throw new u(v,\"No default bucket found. Did you set the 'storageBucket' property when initializing the app?\");var n=new ze(r,r._bucket);return null!=t?rt(n,t):n}if(void 0!==t){if(t.includes(\"..\"))throw A('`path` param cannot contain \"..\"');return We(e,t)}return e}function nt(e,t){if(t&&tt(t)){if(e instanceof ot)return new ze(e,t);throw A(\"To use ref(service, url), the first argument must be a Storage instance.\")}return rt(e,t)}var ot=function(){function e(e,t,r,n){this.app=e,this._authProvider=t,this._pool=r,this._url=n,this._bucket=null,this._appId=null,this._deleted=!1,this._maxOperationRetryTime=12e4,this._maxUploadRetryTime=6e5,this._requests=new Set,this._bucket=null!=n?ce.makeFromBucketSpec(n):function(e){var t=null===e||void 0===e?void 0:e.storageBucket;return null==t?null:ce.makeFromBucketSpec(t)}(this.app.options)}return Object.defineProperty(e.prototype,\"maxUploadRetryTime\",{get:function(){return this._maxUploadRetryTime},set:function(e){ie(\"time\",0,Number.POSITIVE_INFINITY,e),this._maxUploadRetryTime=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"maxOperationRetryTime\",{get:function(){return this._maxOperationRetryTime},set:function(e){ie(\"time\",0,Number.POSITIVE_INFINITY,e),this._maxOperationRetryTime=e},enumerable:!1,configurable:!0}),e.prototype.getAuthToken=function(){return Object(o.b)(this,void 0,void 0,(function(){var e,t;return Object(o.d)(this,(function(r){switch(r.label){case 0:return(e=this._authProvider.getImmediate({optional:!0}))?[4,e.getToken()]:[3,2];case 1:if(null!==(t=r.sent()))return[2,t.accessToken];r.label=2;case 2:return[2,null]}}))}))},e.prototype._delete=function(){return this._deleted=!0,this._requests.forEach((function(e){return e.cancel()})),this._requests.clear(),Promise.resolve()},e.prototype.makeStorageReference=function(e){return new ze(this,e)},e.prototype.makeRequest=function(e,t){var r=this;if(this._deleted)return new Ze(j());var n=et(e,this._appId,t,this._pool);return this._requests.add(n),n.getPromise().then((function(){return r._requests.delete(n)}),(function(){return r._requests.delete(n)})),n},e}(),it=function(){function e(e,t){var r=this;this.app=e,this._delegate=t,this.INTERNAL={delete:function(){return r._delegate._delete()}}}return Object.defineProperty(e.prototype,\"maxOperationRetryTime\",{get:function(){return this._delegate.maxOperationRetryTime},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"maxUploadRetryTime\",{get:function(){return this._delegate.maxUploadRetryTime},enumerable:!1,configurable:!0}),e.prototype.ref=function(e){if(tt(e))throw A(\"ref() expected a child path but got a URL, use refFromURL instead.\");return new Ye(nt(this._delegate,e),this)},e.prototype.refFromURL=function(e){if(!tt(e))throw A(\"refFromURL() expected a full URL but got a child path, use ref() instead.\");try{ce.makeFromUrl(e)}catch(t){throw A(\"refFromUrl() expected a valid full URL but got an invalid one.\")}return new Ye(nt(this._delegate,e),this)},e.prototype.setMaxUploadRetryTime=function(e){this._delegate.maxUploadRetryTime=e},e.prototype.setMaxOperationRetryTime=function(e){this._delegate.maxOperationRetryTime=e},e}();function at(e,t){var r=e.getProvider(\"app\").getImmediate(),n=e.getProvider(\"auth-internal\");return new it(r,new ot(r,n,new te,t))}!function(e){var t={TaskState:$,TaskEvent:X,StringFormat:N,Storage:ot,Reference:Ye};e.INTERNAL.registerComponent(new a.a(\"storage\",at,\"PUBLIC\").setServiceProps(t).setMultipleInstances(!0)),e.registerVersion(\"@firebase/storage\",\"0.4.2\")}(n.a)}}]);","map":{"version":3,"sources":["static/chunks/storage.024603149e4b5fa33ca5.js"],"names":["window","push","WI49","module","__webpack_exports__","__webpack_require__","r","index_esm","tslib_es6","dist_index_esm","component_dist_index_esm","DEFAULT_HOST","index_esm_FirebaseStorageError","_super","FirebaseStorageError","code","message","_this","call","this","prependCode","customData","serverResponse","Object","setPrototypeOf","prototype","codeEquals","defineProperty","get","enumerable","configurable","set","Code","unknown","index_esm_canceled","cannotSliceBlob","invalidArgument","appDeleted","invalidRootOperation","name","invalidFormat","format","internalError","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","StringData","data","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","dataUrl","parts","DataURLParts","base64","rest","value","decoded","decodeURIComponent","e","percentEncodedBytes_","dataURLBytes_","b","i","length","c","charCodeAt","Uint8Array","hasMinus","indexOf","hasUnder","hasPlus","hasSlash","replace","bytes","atob","array","dataURL","matches","match","middle","s","end","substring","ErrorCode","TaskEvent","STATE_CHANGED","InternalTaskState","TaskState","RUNNING","PAUSED","SUCCESS","CANCELED","ERROR","taskStateFromInternalTaskState","state","NetworkXhrIo","sent_","xhr_","XMLHttpRequest","errorCode_","NO_ERROR","sendPromise_","Promise","resolve","addEventListener","ABORT","NETWORK_ERROR","send","url","method","body","headers","open","undefined","key","hasOwnProperty","setRequestHeader","toString","getErrorCode","getStatus","status","getResponseText","responseText","abort","getResponseHeader","header","addUploadProgressListener","listener","upload","removeUploadProgressListener","removeEventListener","XhrIoPool","createXhrIo","isString","p","String","isNativeBlob","isNativeBlobDefined","Blob","validateNumber","argument","minValue","maxValue","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob","args","_i","arguments","bb","append","FbsBlob","elideCopy","size","blobType","data_","type","ArrayBuffer","byteLength","size_","type_","slice","startByte","endByte","sliced","blob","start","webkitSlice","mozSlice","sliceBlob","buffer","blobby","map","val","apply","uint8Arrays","finalLength_1","forEach","merged_1","index_1","uploadData","Location","bucket","path","path_","fullServerUrl","encode","encodeURIComponent","bucketOnlyServerUrl","makeFromBucketSpec","bucketString","bucketLocation","makeFromUrl","location","bucketDomain","gsRegex","RegExp","httpModify","loc","firebaseStorageHost","groups","regex","indices","postModify","charAt","group","captures","exec","bucketValue","pathValue","invalidUrl","jsonObjectOrNull","obj","JSON","parse","Array","isArray","lastComponent","index","lastIndexOf","makeUrl","urlPart","makeQueryString","params","queryPart","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","getMappings","mappings","nameMapping","_metadata","fullPath","xformPath","sizeMapping","Number","fromResource","service","resource","len","mapping","makeStorageReference","addRef","fromResourceString","resourceString","toResourceString","stringify","fromResponseString","listResult","prefixes","items","nextPageToken","_a","pathWithoutTrailingSlash","reference","_b","_c","item","fromBackendResponse","RequestInfo","handler","timeout","urlParams","errorHandler","progressCallback","successCodes","additionalRetryCodes","handlerCheck","cndn","metadataHandler","xhr","text","downloadUrlHandler","tokens","split","token","alt","downloadUrlFromResourceString","sharedErrorHandler","err","newErr","objectErrorHandler","shared","getMetadata","maxOperationRetryTime","requestInfo","list","delimiter","pageToken","maxResults","isRoot","listHandler","metadataForUpload_","metadataClone","assign","determineContentType_","ResumableUploadStatus","current","total","finalized","checkResumeHeader_","allowed","resumableUploadChunkSize","continueResumableUpload","chunkSize","status_","bytesLeft","bytesToUpload","Math","min","X-Goog-Upload-Command","X-Goog-Upload-Offset","maxUploadRetryTime","uploadStatus","newCurrent","Observer","nextOrObserver","error","complete","next","observer","UploadTaskSnapshot","bytesTransferred","totalBytes","task","ref","index_esm_async","f","argsToForward","then","UploadTask","_transferred","_needToFetchStatus","_needToFetchMetadata","_observers","_error","_uploadUrl","_request","_chunkMultiplier","_resolve","_reject","_ref","_blob","_mappings","_resumable","_shouldDoResumable","_state","_errorHandler","completeTransitions_","_transition","_metadataErrorHandler","_promise","reject","_start","_makeProgressCallback","sizeBefore","loaded","_updateProgress","_createResumable","_fetchStatus","_fetchMetadata","_continueUpload","_oneShotUpload","_resolveToken","callback","storage","getAuthToken","authToken","metadataForUpload","X-Goog-Upload-Protocol","X-Goog-Upload-Header-Content-Length","X-Goog-Upload-Header-Content-Type","Content-Type","createResumableUpload","_location","createRequest","makeRequest","getPromise","sizeString","isNaN","getResumableUploadStatus","statusRequest","uploadRequest","newStatus","_increaseMultiplier","metadataRequest","boundary","str","random","genBoundary","metadata_","preBlobPart","postBlobPart","multipartUpload","multipartRequest","transferred","old","_notifyObservers","cancel","wasPaused","externalState","on","completed","_addObserver","_removeObserver","onFulfilled","onRejected","catch","_notifyObserver","splice","_finishPromise","triggered","bind","snapshot","resume","valid","pause","Reference","_service","newRef","newPath","index_esm_parent","_throwIfRoot","listAll","accumulator","listAllHelper","nextPage","label","list$1","sent","options","op","updateMetadata$1","updateMetadata","getDownloadURL","getDownloadUrl","deleteObject$1","_xhr","_text","deleteObject","getChild","childPath","canonicalChildPath","filter","component","join","child","UploadTaskSnapshotCompat","_delegate","UploadTaskCompat","_snapshot","wrappedNextOrObserver","taskSnapshot","ListResultCompat","ReferenceCompat","root","parent","put","uploadBytesResumable","putString","uploadString","getMetadata$1","delete","FailRequest","promise_","_appDelete","NetworkRequest","errorCallback","pool","pendingXhr_","backoffId_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","progressCallback_","timeout_","pool_","resolve_","reject_","start_","self","backoffDone","requestWentThrough","wasSuccessCode","result","canceled","RequestEndStatus","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","callWithDelay","millis","setTimeout","success","waitMillis","stopped","stop","wasTimeout","clearTimeout","backoffCallback","progressListener","hitServer","isRetryStatusCode_","successCode","wasCanceled","progressEvent","lengthComputable","appDelete","index_esm_stop","isFiveHundredCode","isExtraRetryCode","isRequestSpecificRetryCode","appId","addGmpidHeader_","addAuthHeader_","version","SDK_VERSION","addVersionHeader_","isUrl","test","refFromPath","index_esm_StorageService","_bucket","includes","index_esm_ref","serviceOrRef","pathOrUrl","StorageService","app","_authProvider","_pool","_url","_appId","_deleted","_maxOperationRetryTime","_maxUploadRetryTime","_requests","Set","config","extractBucket","time","POSITIVE_INFINITY","auth","tokenData","getImmediate","optional","getToken","accessToken","_delete","request","clear","request_1","add","StorageServiceCompat","INTERNAL","refFromURL","setMaxUploadRetryTime","setMaxOperationRetryTime","factory","container","getProvider","authProvider","instance","namespaceExports","Storage","registerComponent","setServiceProps","setMultipleInstances","registerVersion","registerStorage"],"mappings":"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"},"name":"static/chunks/storage.024603149e4b5fa33ca5.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[29],{\n\n/***/ \"WI49\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/@firebase/app/dist/index.esm.js\nvar index_esm = __webpack_require__(\"zIRd\");\n\n// EXTERNAL MODULE: ./node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(\"mrSG\");\n\n// EXTERNAL MODULE: ./node_modules/@firebase/util/dist/index.esm.js\nvar dist_index_esm = __webpack_require__(\"qOnz\");\n\n// EXTERNAL MODULE: ./node_modules/@firebase/component/dist/index.esm.js\nvar component_dist_index_esm = __webpack_require__(\"/6Yf\");\n\n// CONCATENATED MODULE: ./node_modules/@firebase/storage/dist/index.esm.js\n\n\n\n\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain name for firebase storage.\r\n */\r\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\r\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\r\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\r\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\r\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\nvar index_esm_FirebaseStorageError = /** @class */ (function (_super) {\r\n    Object(tslib_es6[\"c\" /* __extends */])(FirebaseStorageError, _super);\r\n    function FirebaseStorageError(code, message) {\r\n        var _this = _super.call(this, prependCode(code), \"Firebase Storage: \" + message + \" (\" + prependCode(code) + \")\") || this;\r\n        _this.customData = { serverResponse: null };\r\n        // Without this, `instanceof FirebaseStorageError`, in tests for example,\r\n        // returns false.\r\n        Object.setPrototypeOf(_this, FirebaseStorageError.prototype);\r\n        return _this;\r\n    }\r\n    FirebaseStorageError.prototype.codeEquals = function (code) {\r\n        return prependCode(code) === this.code;\r\n    };\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\r\n        get: function () {\r\n            if (this.customData.serverResponse) {\r\n                return this.message + \"\\n\" + this.customData.serverResponse;\r\n            }\r\n            else {\r\n                return this.message;\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\r\n        get: function () {\r\n            return this.customData.serverResponse;\r\n        },\r\n        set: function (serverResponse) {\r\n            this.customData.serverResponse = serverResponse;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return FirebaseStorageError;\r\n}(dist_index_esm[\"c\" /* FirebaseError */]));\r\nvar Code = {\r\n    // Shared between all platforms\r\n    UNKNOWN: 'unknown',\r\n    OBJECT_NOT_FOUND: 'object-not-found',\r\n    BUCKET_NOT_FOUND: 'bucket-not-found',\r\n    PROJECT_NOT_FOUND: 'project-not-found',\r\n    QUOTA_EXCEEDED: 'quota-exceeded',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    UNAUTHORIZED: 'unauthorized',\r\n    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\r\n    INVALID_CHECKSUM: 'invalid-checksum',\r\n    CANCELED: 'canceled',\r\n    // JS specific\r\n    INVALID_EVENT_NAME: 'invalid-event-name',\r\n    INVALID_URL: 'invalid-url',\r\n    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\r\n    NO_DEFAULT_BUCKET: 'no-default-bucket',\r\n    CANNOT_SLICE_BLOB: 'cannot-slice-blob',\r\n    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\r\n    NO_DOWNLOAD_URL: 'no-download-url',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\r\n    APP_DELETED: 'app-deleted',\r\n    INVALID_ROOT_OPERATION: 'invalid-root-operation',\r\n    INVALID_FORMAT: 'invalid-format',\r\n    INTERNAL_ERROR: 'internal-error',\r\n    UNSUPPORTED_ENVIRONMENT: 'unsupported-environment'\r\n};\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    var message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new index_esm_FirebaseStorageError(Code.UNKNOWN, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new index_esm_FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new index_esm_FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    var message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new index_esm_FirebaseStorageError(Code.UNAUTHENTICATED, message);\r\n}\r\nfunction unauthorized(path) {\r\n    return new index_esm_FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new index_esm_FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction index_esm_canceled() {\r\n    return new index_esm_FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new index_esm_FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new index_esm_FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction noDefaultBucket() {\r\n    return new index_esm_FirebaseStorageError(Code.NO_DEFAULT_BUCKET, 'No default bucket ' +\r\n        \"found. Did you set the '\" +\r\n        CONFIG_STORAGE_BUCKET_KEY +\r\n        \"' property when initializing the app?\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new index_esm_FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new index_esm_FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new index_esm_FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\r\n}\r\nfunction invalidArgument(message) {\r\n    return new index_esm_FirebaseStorageError(Code.INVALID_ARGUMENT, message);\r\n}\r\nfunction appDeleted() {\r\n    return new index_esm_FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name - The name of the operation that was invalid.\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new index_esm_FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new index_esm_FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message - A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new index_esm_FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StringFormat = {\r\n    RAW: 'raw',\r\n    BASE64: 'base64',\r\n    BASE64URL: 'base64url',\r\n    DATA_URL: 'data_url'\r\n};\r\nvar StringData = /** @class */ (function () {\r\n    function StringData(data, contentType) {\r\n        this.data = data;\r\n        this.contentType = contentType || null;\r\n    }\r\n    return StringData;\r\n}());\r\nfunction dataFromString(format, stringData) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(stringData));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, stringData));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\r\n        // do nothing\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(value) {\r\n    var b = [];\r\n    for (var i = 0; i < value.length; i++) {\r\n        var c = value.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) === 55296) {\r\n                    // The start of a surrogate pair.\r\n                    var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        var hi = c;\r\n                        var lo = value.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) === 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(value) {\r\n    var decoded;\r\n    try {\r\n        decoded = decodeURIComponent(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, value) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            var hasMinus = value.indexOf('-') !== -1;\r\n            var hasUnder = value.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                var invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            var hasPlus = value.indexOf('+') !== -1;\r\n            var hasSlash = value.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                var invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            value = value.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n        // do nothing\r\n    }\r\n    var bytes;\r\n    try {\r\n        bytes = atob(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    var array = new Uint8Array(bytes.length);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\nvar DataURLParts = /** @class */ (function () {\r\n    function DataURLParts(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        var matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        var middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n    return DataURLParts;\r\n}());\r\nfunction dataURLBytes_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    var longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TaskEvent = {\r\n    /** Triggered whenever the task changes or progress is updated. */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\nvar InternalTaskState = {\r\n    RUNNING: 'running',\r\n    PAUSING: 'pausing',\r\n    PAUSED: 'paused',\r\n    SUCCESS: 'success',\r\n    CANCELING: 'canceling',\r\n    CANCELED: 'canceled',\r\n    ERROR: 'error'\r\n};\r\nvar TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case InternalTaskState.RUNNING:\r\n        case InternalTaskState.PAUSING:\r\n        case InternalTaskState.CANCELING:\r\n            return TaskState.RUNNING;\r\n        case InternalTaskState.PAUSED:\r\n            return TaskState.PAUSED;\r\n        case InternalTaskState.SUCCESS:\r\n            return TaskState.SUCCESS;\r\n        case InternalTaskState.CANCELED:\r\n            return TaskState.CANCELED;\r\n        case InternalTaskState.ERROR:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\r\nvar NetworkXhrIo = /** @class */ (function () {\r\n    function NetworkXhrIo() {\r\n        var _this = this;\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = new Promise(function (resolve) {\r\n            _this.xhr_.addEventListener('abort', function () {\r\n                _this.errorCode_ = ErrorCode.ABORT;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('error', function () {\r\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('load', function () {\r\n                resolve(_this);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.send = function (url, method, body, headers) {\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (headers !== undefined) {\r\n            for (var key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    this.xhr_.setRequestHeader(key, headers[key].toString());\r\n                }\r\n            }\r\n        }\r\n        if (body !== undefined) {\r\n            this.xhr_.send(body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getErrorCode = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getStatus = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseText = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponseText() before sending');\r\n        }\r\n        return this.xhr_.responseText;\r\n    };\r\n    /**\r\n     * Aborts the request.\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.abort = function () {\r\n        this.xhr_.abort();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseHeader = function (header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    };\r\n    return NetworkXhrIo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\r\nvar XhrIoPool = /** @class */ (function () {\r\n    function XhrIoPool() {\r\n    }\r\n    XhrIoPool.prototype.createXhrIo = function () {\r\n        return new NetworkXhrIo();\r\n    };\r\n    return XhrIoPool;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return typeof p === 'object' && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\r\nfunction validateNumber(argument, minValue, maxValue, value) {\r\n    if (value < minValue) {\r\n        throw new index_esm_FirebaseStorageError(Code.INVALID_ARGUMENT, \"Invalid value for '\" + argument + \"'. Expected \" + minValue + \" or greater.\");\r\n    }\r\n    if (value > maxValue) {\r\n        throw new index_esm_FirebaseStorageError(Code.INVALID_ARGUMENT, \"Invalid value for '\" + argument + \"'. Expected \" + maxValue + \" or less.\");\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        var bb = new BlobBuilder();\r\n        for (var i = 0; i < args.length; i++) {\r\n            bb.append(args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(args);\r\n        }\r\n        else {\r\n            throw new index_esm_FirebaseStorageError(Code.UNSUPPORTED_ENVIRONMENT, \"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\r\nvar FbsBlob = /** @class */ (function () {\r\n    function FbsBlob(data, elideCopy) {\r\n        var size = 0;\r\n        var blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    FbsBlob.prototype.size = function () {\r\n        return this.size_;\r\n    };\r\n    FbsBlob.prototype.type = function () {\r\n        return this.type_;\r\n    };\r\n    FbsBlob.prototype.slice = function (startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            var realBlob = this.data_;\r\n            var sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    };\r\n    FbsBlob.getBlob = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (isNativeBlobDefined()) {\r\n            var blobby = args.map(function (val) {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob.apply(null, blobby));\r\n        }\r\n        else {\r\n            var uint8Arrays = args.map(function (val) {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            var finalLength_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                finalLength_1 += array.byteLength;\r\n            });\r\n            var merged_1 = new Uint8Array(finalLength_1);\r\n            var index_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                for (var i = 0; i < array.length; i++) {\r\n                    merged_1[index_1++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged_1, true);\r\n        }\r\n    };\r\n    FbsBlob.prototype.uploadData = function () {\r\n        return this.data_;\r\n    };\r\n    return FbsBlob;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Location = /** @class */ (function () {\r\n    function Location(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    Object.defineProperty(Location.prototype, \"path\", {\r\n        get: function () {\r\n            return this.path_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Location.prototype, \"isRoot\", {\r\n        get: function () {\r\n            return this.path.length === 0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Location.prototype.fullServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    };\r\n    Location.prototype.bucketOnlyServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    };\r\n    Location.makeFromBucketSpec = function (bucketString) {\r\n        var bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    };\r\n    Location.makeFromUrl = function (url) {\r\n        var location = null;\r\n        var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        var gsPath = '(/(.*))?$';\r\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        var gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        var version = 'v[A-Za-z0-9_]+';\r\n        var firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\r\n        var firebaseStoragePath = '(/([^?#]*).*)?$';\r\n        var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\r\n        var firebaseStorageIndices = { bucket: 1, path: 3 };\r\n        var cloudStorageHost = '(?:storage.googleapis.com|storage.cloud.google.com)';\r\n        var cloudStoragePath = '([^?#]*)';\r\n        var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\r\n        var cloudStorageIndices = { bucket: 1, path: 2 };\r\n        var groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            {\r\n                regex: firebaseStorageRegExp,\r\n                indices: firebaseStorageIndices,\r\n                postModify: httpModify\r\n            },\r\n            {\r\n                regex: cloudStorageRegExp,\r\n                indices: cloudStorageIndices,\r\n                postModify: httpModify\r\n            }\r\n        ];\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var group = groups[i];\r\n            var captures = group.regex.exec(url);\r\n            if (captures) {\r\n                var bucketValue = captures[group.indices.bucket];\r\n                var pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    };\r\n    return Location;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    var obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction index_esm_parent(path) {\r\n    if (path.length === 0) {\r\n        return null;\r\n    }\r\n    var index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    var newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    var canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(function (component) { return component.length > 0; })\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    var index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeUrl(urlPart) {\r\n    return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\r\n}\r\nfunction makeQueryString(params) {\r\n    var encode = encodeURIComponent;\r\n    var queryPart = '?';\r\n    for (var key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            var nextPart = encode(key) + '=' + encode(params[key]);\r\n            queryPart = queryPart + nextPart + '&';\r\n        }\r\n    }\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\nvar Mapping = /** @class */ (function () {\r\n    function Mapping(server, local, writable, xform) {\r\n        this.server = server;\r\n        this.local = local || server;\r\n        this.writable = !!writable;\r\n        this.xform = xform || noXform_;\r\n    }\r\n    return Mapping;\r\n}());\r\nvar mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    if (!isString(fullPath) || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    var mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(_metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    var nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(_metadata, size) {\r\n        if (size !== undefined) {\r\n            return Number(size);\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    var sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, service) {\r\n    function generateRef() {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var loc = new Location(bucket, path);\r\n        return service.makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(service, resource, mappings) {\r\n    var metadata = {};\r\n    metadata['type'] = 'file';\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, service);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(service, resourceString, mappings) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromResource(service, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    var tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    var encode = encodeURIComponent;\r\n    var tokensList = tokens.split(',');\r\n    var urls = tokensList.map(function (token) {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        var base = makeUrl(urlPart);\r\n        var queryString = makeQueryString({\r\n            alt: 'media',\r\n            token: token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    var resource = {};\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PREFIXES_KEY = 'prefixes';\r\nvar ITEMS_KEY = 'items';\r\nfunction fromBackendResponse(service, bucket, resource) {\r\n    var listResult = {\r\n        prefixes: [],\r\n        items: [],\r\n        nextPageToken: resource['nextPageToken']\r\n    };\r\n    if (resource[PREFIXES_KEY]) {\r\n        for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\r\n            var reference = service.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\r\n            listResult.prefixes.push(reference);\r\n        }\r\n    }\r\n    if (resource[ITEMS_KEY]) {\r\n        for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\r\n            var item = _c[_b];\r\n            var reference = service.makeStorageReference(new Location(bucket, item['name']));\r\n            listResult.items.push(reference);\r\n        }\r\n    }\r\n    return listResult;\r\n}\r\nfunction fromResponseString(service, bucket, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromBackendResponse(service, bucket, resource);\r\n}\n\nvar RequestInfo = /** @class */ (function () {\r\n    function RequestInfo(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n    return RequestInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction listHandler(service, bucket) {\r\n    function handler(xhr, text) {\r\n        var listResult = fromResponseString(service, bucket, text);\r\n        handlerCheck(listResult !== null);\r\n        return listResult;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        var newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            newErr = unauthenticated();\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    var shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        var newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata(service, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction list(service, location, delimiter, pageToken, maxResults) {\r\n    var urlParams = {};\r\n    if (location.isRoot) {\r\n        urlParams['prefix'] = '';\r\n    }\r\n    else {\r\n        urlParams['prefix'] = location.path + '/';\r\n    }\r\n    if (delimiter && delimiter.length > 0) {\r\n        urlParams['delimiter'] = delimiter;\r\n    }\r\n    if (pageToken) {\r\n        urlParams['pageToken'] = pageToken;\r\n    }\r\n    if (maxResults) {\r\n        urlParams['maxResults'] = maxResults;\r\n    }\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(service, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata(service, location, metadata, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'PATCH';\r\n    var body = toResourceString(metadata, mappings);\r\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject(service, location) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'DELETE';\r\n    var timeout = service.maxOperationRetryTime;\r\n    function handler(_xhr, _text) { }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, metadata) {\r\n    var metadataClone = Object.assign({}, metadata);\r\n    metadataClone['fullPath'] = location.path;\r\n    metadataClone['size'] = blob.size();\r\n    if (!metadataClone['contentType']) {\r\n        metadataClone['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadataClone;\r\n}\r\nfunction multipartUpload(service, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        var str = '';\r\n        for (var i = 0; i < 2; i++) {\r\n            str = str + Math.random().toString().slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    var boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    var metadata_ = metadataForUpload_(location, blob, metadata);\r\n    var metadataString = toResourceString(metadata_, mappings);\r\n    var preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata_['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    var postBlobPart = '\\r\\n--' + boundary + '--';\r\n    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    var urlParams = { name: metadata_['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */\r\nvar ResumableUploadStatus = /** @class */ (function () {\r\n    function ResumableUploadStatus(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n    return ResumableUploadStatus;\r\n}());\r\nfunction checkResumeHeader_(xhr, allowed) {\r\n    var status = null;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    var allowedStatus = allowed || ['active'];\r\n    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\r\n    return status;\r\n}\r\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var metadataForUpload = metadataForUpload_(location, blob, metadata);\r\n    var urlParams = { name: metadataForUpload['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': blob.size(),\r\n        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    var body = toResourceString(metadataForUpload, mappings);\r\n    var timeout = service.maxUploadRetryTime;\r\n    function handler(xhr) {\r\n        checkResumeHeader_(xhr);\r\n        var url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(service, location, url, blob) {\r\n    var headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr) {\r\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var sizeString = null;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        if (!sizeString) {\r\n            // null or empty string\r\n            handlerCheck(false);\r\n        }\r\n        var size = Number(sizeString);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nvar resumableUploadChunkSize = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    var status_ = new ResumableUploadStatus(0, 0);\r\n    if (status) {\r\n        status_.current = status.current;\r\n        status_.total = status.total;\r\n    }\r\n    else {\r\n        status_.current = 0;\r\n        status_.total = blob.size();\r\n    }\r\n    if (blob.size() !== status_.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    var bytesLeft = status_.total - status_.current;\r\n    var bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    var startByte = status_.current;\r\n    var endByte = startByte + bytesToUpload;\r\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    var headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': status_.current\r\n    };\r\n    var body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var newCurrent = status_.current + bytesToUpload;\r\n        var size = blob.size();\r\n        var metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(service, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Observer = /** @class */ (function () {\r\n    function Observer(nextOrObserver, error, complete) {\r\n        var asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = error;\r\n            this.complete = complete;\r\n        }\r\n        else {\r\n            var observer = nextOrObserver;\r\n            this.next = observer.next;\r\n            this.error = observer.error;\r\n            this.complete = observer.complete;\r\n        }\r\n    }\r\n    return Observer;\r\n}());\n\nvar UploadTaskSnapshot = /** @class */ (function () {\r\n    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\r\n        this.bytesTransferred = bytesTransferred;\r\n        this.totalBytes = totalBytes;\r\n        this.state = state;\r\n        this.metadata = metadata;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    return UploadTaskSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction index_esm_async(f) {\r\n    return function () {\r\n        var argsToForward = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            argsToForward[_i] = arguments[_i];\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.resolve().then(function () { return f.apply(void 0, argsToForward); });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\r\nvar UploadTask = /** @class */ (function () {\r\n    /**\r\n     * @param ref - The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob - The blob to upload.\r\n     */\r\n    function UploadTask(ref, blob, metadata) {\r\n        var _this = this;\r\n        if (metadata === void 0) { metadata = null; }\r\n        /**\r\n         * @internal\r\n         */\r\n        this._transferred = 0;\r\n        this._needToFetchStatus = false;\r\n        this._needToFetchMetadata = false;\r\n        this._observers = [];\r\n        this._error = undefined;\r\n        this._uploadUrl = undefined;\r\n        this._request = undefined;\r\n        this._chunkMultiplier = 1;\r\n        this._resolve = undefined;\r\n        this._reject = undefined;\r\n        this._ref = ref;\r\n        this._blob = blob;\r\n        this._metadata = metadata;\r\n        this._mappings = getMappings();\r\n        this._resumable = this._shouldDoResumable(this._blob);\r\n        this._state = InternalTaskState.RUNNING;\r\n        this._errorHandler = function (error) {\r\n            _this._request = undefined;\r\n            _this._chunkMultiplier = 1;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this._needToFetchStatus = true;\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this._error = error;\r\n                _this._transition(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this._metadataErrorHandler = function (error) {\r\n            _this._request = undefined;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this._error = error;\r\n                _this._transition(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this._promise = new Promise(function (resolve, reject) {\r\n            _this._resolve = resolve;\r\n            _this._reject = reject;\r\n            _this._start();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this._promise.then(null, function () { });\r\n    }\r\n    UploadTask.prototype._makeProgressCallback = function () {\r\n        var _this = this;\r\n        var sizeBefore = this._transferred;\r\n        return function (loaded) { return _this._updateProgress(sizeBefore + loaded); };\r\n    };\r\n    UploadTask.prototype._shouldDoResumable = function (blob) {\r\n        return blob.size() > 256 * 1024;\r\n    };\r\n    UploadTask.prototype._start = function () {\r\n        if (this._state !== InternalTaskState.RUNNING) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this._request !== undefined) {\r\n            return;\r\n        }\r\n        if (this._resumable) {\r\n            if (this._uploadUrl === undefined) {\r\n                this._createResumable();\r\n            }\r\n            else {\r\n                if (this._needToFetchStatus) {\r\n                    this._fetchStatus();\r\n                }\r\n                else {\r\n                    if (this._needToFetchMetadata) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this._fetchMetadata();\r\n                    }\r\n                    else {\r\n                        this._continueUpload();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._oneShotUpload();\r\n        }\r\n    };\r\n    UploadTask.prototype._resolveToken = function (callback) {\r\n        var _this = this;\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this._ref.storage.getAuthToken().then(function (authToken) {\r\n            switch (_this._state) {\r\n                case InternalTaskState.RUNNING:\r\n                    callback(authToken);\r\n                    break;\r\n                case InternalTaskState.CANCELING:\r\n                    _this._transition(InternalTaskState.CANCELED);\r\n                    break;\r\n                case InternalTaskState.PAUSING:\r\n                    _this._transition(InternalTaskState.PAUSED);\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    // TODO(andysoto): assert false\r\n    UploadTask.prototype._createResumable = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo = createResumableUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\r\n            var createRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\r\n            _this._request = createRequest;\r\n            createRequest.getPromise().then(function (url) {\r\n                _this._request = undefined;\r\n                _this._uploadUrl = url;\r\n                _this._needToFetchStatus = false;\r\n                _this.completeTransitions_();\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._fetchStatus = function () {\r\n        var _this = this;\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this._uploadUrl;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo = getResumableUploadStatus(_this._ref.storage, _this._ref._location, url, _this._blob);\r\n            var statusRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\r\n            _this._request = statusRequest;\r\n            statusRequest.getPromise().then(function (status) {\r\n                status = status;\r\n                _this._request = undefined;\r\n                _this._updateProgress(status.current);\r\n                _this._needToFetchStatus = false;\r\n                if (status.finalized) {\r\n                    _this._needToFetchMetadata = true;\r\n                }\r\n                _this.completeTransitions_();\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._continueUpload = function () {\r\n        var _this = this;\r\n        var chunkSize = resumableUploadChunkSize * this._chunkMultiplier;\r\n        var status = new ResumableUploadStatus(this._transferred, this._blob.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this._uploadUrl;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(_this._ref._location, _this._ref.storage, url, _this._blob, chunkSize, _this._mappings, status, _this._makeProgressCallback());\r\n            }\r\n            catch (e) {\r\n                _this._error = e;\r\n                _this._transition(InternalTaskState.ERROR);\r\n                return;\r\n            }\r\n            var uploadRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\r\n            _this._request = uploadRequest;\r\n            uploadRequest\r\n                .getPromise()\r\n                .then(function (newStatus) {\r\n                _this._increaseMultiplier();\r\n                _this._request = undefined;\r\n                _this._updateProgress(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    _this._metadata = newStatus.metadata;\r\n                    _this._transition(InternalTaskState.SUCCESS);\r\n                }\r\n                else {\r\n                    _this.completeTransitions_();\r\n                }\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._increaseMultiplier = function () {\r\n        var currentSize = resumableUploadChunkSize * this._chunkMultiplier;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this._chunkMultiplier *= 2;\r\n        }\r\n    };\r\n    UploadTask.prototype._fetchMetadata = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo = getMetadata(_this._ref.storage, _this._ref._location, _this._mappings);\r\n            var metadataRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\r\n            _this._request = metadataRequest;\r\n            metadataRequest.getPromise().then(function (metadata) {\r\n                _this._request = undefined;\r\n                _this._metadata = metadata;\r\n                _this._transition(InternalTaskState.SUCCESS);\r\n            }, _this._metadataErrorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._oneShotUpload = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo = multipartUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\r\n            var multipartRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\r\n            _this._request = multipartRequest;\r\n            multipartRequest.getPromise().then(function (metadata) {\r\n                _this._request = undefined;\r\n                _this._metadata = metadata;\r\n                _this._updateProgress(_this._blob.size());\r\n                _this._transition(InternalTaskState.SUCCESS);\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._updateProgress = function (transferred) {\r\n        var old = this._transferred;\r\n        this._transferred = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this._transferred !== old) {\r\n            this._notifyObservers();\r\n        }\r\n    };\r\n    UploadTask.prototype._transition = function (state) {\r\n        if (this._state === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case InternalTaskState.CANCELING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                var wasPaused = this._state === InternalTaskState.PAUSED;\r\n                this._state = state;\r\n                if (wasPaused) {\r\n                    this._notifyObservers();\r\n                    this._start();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case InternalTaskState.CANCELED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._error = index_esm_canceled();\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case InternalTaskState.ERROR:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case InternalTaskState.SUCCESS:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n        }\r\n    };\r\n    UploadTask.prototype.completeTransitions_ = function () {\r\n        switch (this._state) {\r\n            case InternalTaskState.PAUSING:\r\n                this._transition(InternalTaskState.PAUSED);\r\n                break;\r\n            case InternalTaskState.CANCELING:\r\n                this._transition(InternalTaskState.CANCELED);\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                this._start();\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\r\n        get: function () {\r\n            var externalState = taskStateFromInternalTaskState(this._state);\r\n            return new UploadTaskSnapshot(this._transferred, this._blob.size(), externalState, this._metadata, this, this._ref);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type - The type of event to listen for.\r\n     */\r\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        var _this = this;\r\n        var observer = new Observer(nextOrObserver, error, completed);\r\n        this._addObserver(observer);\r\n        return function () {\r\n            _this._removeObserver(observer);\r\n        };\r\n    };\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected - The rejection callback.\r\n     */\r\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this._promise.then(onFulfilled, onRejected);\r\n    };\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    UploadTask.prototype.catch = function (onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    UploadTask.prototype._addObserver = function (observer) {\r\n        this._observers.push(observer);\r\n        this._notifyObserver(observer);\r\n    };\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    UploadTask.prototype._removeObserver = function (observer) {\r\n        var i = this._observers.indexOf(observer);\r\n        if (i !== -1) {\r\n            this._observers.splice(i, 1);\r\n        }\r\n    };\r\n    UploadTask.prototype._notifyObservers = function () {\r\n        var _this = this;\r\n        this._finishPromise();\r\n        var observers = this._observers.slice();\r\n        observers.forEach(function (observer) {\r\n            _this._notifyObserver(observer);\r\n        });\r\n    };\r\n    UploadTask.prototype._finishPromise = function () {\r\n        if (this._resolve !== undefined) {\r\n            var triggered = true;\r\n            switch (taskStateFromInternalTaskState(this._state)) {\r\n                case TaskState.SUCCESS:\r\n                    index_esm_async(this._resolve.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    var toCall = this._reject;\r\n                    index_esm_async(toCall.bind(null, this._error))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this._resolve = undefined;\r\n                this._reject = undefined;\r\n            }\r\n        }\r\n    };\r\n    UploadTask.prototype._notifyObserver = function (observer) {\r\n        var externalState = taskStateFromInternalTaskState(this._state);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next) {\r\n                    index_esm_async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete) {\r\n                    index_esm_async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error) {\r\n                    index_esm_async(observer.error.bind(observer, this._error))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error) {\r\n                    index_esm_async(observer.error.bind(observer, this._error))();\r\n                }\r\n        }\r\n    };\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.resume = function () {\r\n        var valid = this._state === InternalTaskState.PAUSED ||\r\n            this._state === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this._transition(InternalTaskState.RUNNING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.pause = function () {\r\n        var valid = this._state === InternalTaskState.RUNNING;\r\n        if (valid) {\r\n            this._transition(InternalTaskState.PAUSING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.cancel = function () {\r\n        var valid = this._state === InternalTaskState.RUNNING ||\r\n            this._state === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this._transition(InternalTaskState.CANCELING);\r\n        }\r\n        return valid;\r\n    };\r\n    return UploadTask;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nvar Reference = /** @class */ (function () {\r\n    function Reference(_service, location) {\r\n        this._service = _service;\r\n        if (location instanceof Location) {\r\n            this._location = location;\r\n        }\r\n        else {\r\n            this._location = Location.makeFromUrl(location);\r\n        }\r\n    }\r\n    /**\r\n     * @returns The URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    Reference.prototype.toString = function () {\r\n        return 'gs://' + this._location.bucket + '/' + this._location.path;\r\n    };\r\n    Reference.prototype.newRef = function (service, location) {\r\n        return new Reference(service, location);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        /**\r\n         * @returns An reference to the root of this\r\n         *     object's bucket.\r\n         */\r\n        get: function () {\r\n            var location = new Location(this._location.bucket, '');\r\n            return this.newRef(this._service, location);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this._location.bucket;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this._location.path;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"name\", {\r\n        get: function () {\r\n            return lastComponent(this._location.path);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"storage\", {\r\n        get: function () {\r\n            return this._service;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            var newPath = index_esm_parent(this._location.path);\r\n            if (newPath === null) {\r\n                return null;\r\n            }\r\n            var location = new Location(this._location.bucket, newPath);\r\n            return new Reference(this._service, location);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Reference.prototype._throwIfRoot = function (name) {\r\n        if (this._location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return Reference;\r\n}());\r\n/**\r\n * Uploads a blob to this object's location.\r\n * @public\r\n * @param ref - Storage Reference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded string.\r\n * @returns An UploadTask that lets you control and\r\n *     observe the upload.\r\n */\r\nfunction uploadBytesResumable(ref, data, metadata) {\r\n    if (metadata === void 0) { metadata = null; }\r\n    ref._throwIfRoot('uploadBytesResumable');\r\n    return new UploadTask(ref, new FbsBlob(data), metadata);\r\n}\r\n/**\r\n * Uploads a string to this object's location.\r\n * @public\r\n * @param ref - Storage Reference where string should be uploaded.\r\n * @param value - The string to upload.\r\n * @param format - The format of the string to upload.\r\n * @param metadata - Metadata for the newly uploaded object.\r\n * @returns An UploadTask that lets you control and\r\n *     observe the upload.\r\n */\r\nfunction uploadString(ref, value, format, metadata) {\r\n    if (format === void 0) { format = StringFormat.RAW; }\r\n    ref._throwIfRoot('putString');\r\n    var data = dataFromString(format, value);\r\n    var metadataClone = Object(tslib_es6[\"a\" /* __assign */])({}, metadata);\r\n    if (metadataClone['contentType'] == null && data.contentType != null) {\r\n        metadataClone['contentType'] = data.contentType;\r\n    }\r\n    return new UploadTask(ref, new FbsBlob(data.data, true), metadataClone);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - Storage Reference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll(ref) {\r\n    var accumulator = {\r\n        prefixes: [],\r\n        items: []\r\n    };\r\n    return listAllHelper(ref, accumulator).then(function () { return accumulator; });\r\n}\r\n/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @internal\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */\r\nfunction listAllHelper(ref, accumulator, pageToken) {\r\n    return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n        var opt, nextPage;\r\n        var _a, _b;\r\n        return Object(tslib_es6[\"d\" /* __generator */])(this, function (_c) {\r\n            switch (_c.label) {\r\n                case 0:\r\n                    opt = {\r\n                        // maxResults is 1000 by default.\r\n                        pageToken: pageToken\r\n                    };\r\n                    return [4 /*yield*/, list$1(ref, opt)];\r\n                case 1:\r\n                    nextPage = _c.sent();\r\n                    (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\r\n                    (_b = accumulator.items).push.apply(_b, nextPage.items);\r\n                    if (!(nextPage.nextPageToken != null)) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, listAllHelper(ref, accumulator, nextPage.nextPageToken)];\r\n                case 2:\r\n                    _c.sent();\r\n                    _c.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - Storage Reference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list$1(ref, options) {\r\n    return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n        var authToken, op, requestInfo;\r\n        return Object(tslib_es6[\"d\" /* __generator */])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (options != null) {\r\n                        if (typeof options.maxResults === 'number') {\r\n                            validateNumber('options.maxResults', \r\n                            /* minValue= */ 1, \r\n                            /* maxValue= */ 1000, options.maxResults);\r\n                        }\r\n                    }\r\n                    return [4 /*yield*/, ref.storage.getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    op = options || {};\r\n                    requestInfo = list(ref.storage, ref._location, \r\n                    /*delimiter= */ '/', op.pageToken, op.maxResults);\r\n                    return [2 /*return*/, ref.storage.makeRequest(requestInfo, authToken).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * A promise that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - Storage Reference to get metadata from.\r\n */\r\nfunction getMetadata$1(ref) {\r\n    return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n        var authToken, requestInfo;\r\n        return Object(tslib_es6[\"d\" /* __generator */])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('getMetadata');\r\n                    return [4 /*yield*/, ref.storage.getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    requestInfo = getMetadata(ref.storage, ref._location, getMappings());\r\n                    return [2 /*return*/, ref.storage.makeRequest(requestInfo, authToken).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - Storage Reference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A promise that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */\r\nfunction updateMetadata$1(ref, metadata) {\r\n    return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n        var authToken, requestInfo;\r\n        return Object(tslib_es6[\"d\" /* __generator */])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('updateMetadata');\r\n                    return [4 /*yield*/, ref.storage.getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    requestInfo = updateMetadata(ref.storage, ref._location, metadata, getMappings());\r\n                    return [2 /*return*/, ref.storage.makeRequest(requestInfo, authToken).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A promise that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL(ref) {\r\n    return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n        var authToken, requestInfo;\r\n        return Object(tslib_es6[\"d\" /* __generator */])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('getDownloadURL');\r\n                    return [4 /*yield*/, ref.storage.getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\r\n                    return [2 /*return*/, ref.storage\r\n                            .makeRequest(requestInfo, authToken)\r\n                            .getPromise()\r\n                            .then(function (url) {\r\n                            if (url === null) {\r\n                                throw noDownloadURL();\r\n                            }\r\n                            return url;\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - Storage Reference for object to delete.\r\n * @returns A promise that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject$1(ref) {\r\n    return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n        var authToken, requestInfo;\r\n        return Object(tslib_es6[\"d\" /* __generator */])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('deleteObject');\r\n                    return [4 /*yield*/, ref.storage.getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    requestInfo = deleteObject(ref.storage, ref._location);\r\n                    return [2 /*return*/, ref.storage.makeRequest(requestInfo, authToken).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n * @internal\r\n *\r\n * @param ref - Storage Reference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n */\r\nfunction getChild(ref, childPath) {\r\n    var newPath = child(ref._location.path, childPath);\r\n    var location = new Location(ref._location.bucket, newPath);\r\n    return new Reference(ref.storage, location);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UploadTaskSnapshotCompat = /** @class */ (function () {\r\n    function UploadTaskSnapshotCompat(_delegate, task, ref) {\r\n        this._delegate = _delegate;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"bytesTransferred\", {\r\n        get: function () {\r\n            return this._delegate.bytesTransferred;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"metadata\", {\r\n        get: function () {\r\n            return this._delegate.metadata;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"state\", {\r\n        get: function () {\r\n            return this._delegate.state;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"totalBytes\", {\r\n        get: function () {\r\n            return this._delegate.totalBytes;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return UploadTaskSnapshotCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UploadTaskCompat = /** @class */ (function () {\r\n    function UploadTaskCompat(_delegate, _ref) {\r\n        this._delegate = _delegate;\r\n        this._ref = _ref;\r\n        this.cancel = this._delegate.cancel.bind(this._delegate);\r\n        this.catch = this._delegate.catch.bind(this._delegate);\r\n        this.pause = this._delegate.pause.bind(this._delegate);\r\n        this.resume = this._delegate.resume.bind(this._delegate);\r\n        this._snapshot = new UploadTaskSnapshotCompat(this._delegate.snapshot, this, this._ref);\r\n    }\r\n    Object.defineProperty(UploadTaskCompat.prototype, \"snapshot\", {\r\n        get: function () {\r\n            return this._snapshot;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    UploadTaskCompat.prototype.then = function (onFulfilled, onRejected) {\r\n        var _this = this;\r\n        return this._delegate.then(function (snapshot) {\r\n            if (onFulfilled) {\r\n                return onFulfilled(new UploadTaskSnapshotCompat(snapshot, _this, _this._ref));\r\n            }\r\n        }, onRejected);\r\n    };\r\n    UploadTaskCompat.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        var _this = this;\r\n        var wrappedNextOrObserver = undefined;\r\n        if (!!nextOrObserver) {\r\n            if (typeof nextOrObserver === 'function') {\r\n                wrappedNextOrObserver = function (taskSnapshot) {\r\n                    return nextOrObserver(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\r\n                };\r\n            }\r\n            else {\r\n                wrappedNextOrObserver = {\r\n                    next: !!nextOrObserver.next\r\n                        ? function (taskSnapshot) {\r\n                            return nextOrObserver.next(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\r\n                        }\r\n                        : undefined,\r\n                    complete: nextOrObserver.complete || undefined,\r\n                    error: nextOrObserver.error || undefined\r\n                };\r\n            }\r\n        }\r\n        return this._delegate.on(type, wrappedNextOrObserver, error || undefined, completed || undefined);\r\n    };\r\n    return UploadTaskCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ListResultCompat = /** @class */ (function () {\r\n    function ListResultCompat(_delegate, _service) {\r\n        this._delegate = _delegate;\r\n        this._service = _service;\r\n    }\r\n    Object.defineProperty(ListResultCompat.prototype, \"prefixes\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this._delegate.prefixes.map(function (ref) { return new ReferenceCompat(ref, _this._service); });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ListResultCompat.prototype, \"items\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this._delegate.items.map(function (ref) { return new ReferenceCompat(ref, _this._service); });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ListResultCompat.prototype, \"nextPageToken\", {\r\n        get: function () {\r\n            return this._delegate.nextPageToken || null;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return ListResultCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *  http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ReferenceCompat = /** @class */ (function () {\r\n    function ReferenceCompat(_delegate, storage) {\r\n        this._delegate = _delegate;\r\n        this.storage = storage;\r\n    }\r\n    Object.defineProperty(ReferenceCompat.prototype, \"name\", {\r\n        get: function () {\r\n            return this._delegate.name;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this._delegate.bucket;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this._delegate.fullPath;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ReferenceCompat.prototype.toString = function () {\r\n        return this._delegate.toString();\r\n    };\r\n    /**\r\n     * @returns A reference to the object obtained by\r\n     * appending childPath, removing any duplicate, beginning, or trailing\r\n     * slashes.\r\n     */\r\n    ReferenceCompat.prototype.child = function (childPath) {\r\n        var reference = getChild(this._delegate, childPath);\r\n        return new ReferenceCompat(reference, this.storage);\r\n    };\r\n    Object.defineProperty(ReferenceCompat.prototype, \"root\", {\r\n        get: function () {\r\n            return new ReferenceCompat(this._delegate.root, this.storage);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"parent\", {\r\n        /**\r\n         * @returns A reference to the parent of the\r\n         * current object, or null if the current object is the root.\r\n         */\r\n        get: function () {\r\n            var reference = this._delegate.parent;\r\n            if (reference == null) {\r\n                return null;\r\n            }\r\n            return new ReferenceCompat(reference, this.storage);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data - The blob to upload.\r\n     * @returns An UploadTask that lets you control and\r\n     * observe the upload.\r\n     */\r\n    ReferenceCompat.prototype.put = function (data, metadata) {\r\n        this._throwIfRoot('put');\r\n        return new UploadTaskCompat(uploadBytesResumable(this._delegate, data, metadata), this);\r\n    };\r\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param value - The string to upload.\r\n     * @param format - The format of the string to upload.\r\n     * @returns An UploadTask that lets you control and\r\n     * observe the upload.\r\n     */\r\n    ReferenceCompat.prototype.putString = function (value, format, metadata) {\r\n        if (format === void 0) { format = StringFormat.RAW; }\r\n        this._throwIfRoot('putString');\r\n        return new UploadTaskCompat(uploadString(this._delegate, value, format, metadata), this);\r\n    };\r\n    /**\r\n     * List all items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * This is a helper method for calling list() repeatedly until there are\r\n     * no more results. The default pagination size is 1000.\r\n     *\r\n     * Note: The results may not be consistent if objects are changed while this\r\n     * operation is running.\r\n     *\r\n     * Warning: listAll may potentially consume too many resources if there are\r\n     * too many results.\r\n     *\r\n     * @returns A Promise that resolves with all the items and prefixes under\r\n     *  the current storage reference. `prefixes` contains references to\r\n     *  sub-directories and `items` contains references to objects in this\r\n     *  folder. `nextPageToken` is never returned.\r\n     */\r\n    ReferenceCompat.prototype.listAll = function () {\r\n        var _this = this;\r\n        return listAll(this._delegate).then(function (r) { return new ListResultCompat(r, _this.storage); });\r\n    };\r\n    /**\r\n     * List items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * List API is only available for Firebase Rules Version 2.\r\n     *\r\n     * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n     * delimited folder structure. Refer to GCS's List API if you want to learn more.\r\n     *\r\n     * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n     * support objects whose paths end with \"/\" or contain two consecutive\r\n     * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n     * list() may fail if there are too many unsupported objects in the bucket.\r\n     *\r\n     * @param options - See ListOptions for details.\r\n     * @returns A Promise that resolves with the items and prefixes.\r\n     * `prefixes` contains references to sub-folders and `items`\r\n     * contains references to objects in this folder. `nextPageToken`\r\n     * can be used to get the rest of the results.\r\n     */\r\n    ReferenceCompat.prototype.list = function (options) {\r\n        var _this = this;\r\n        return list$1(this._delegate, options).then(function (r) { return new ListResultCompat(r, _this.storage); });\r\n    };\r\n    /**\r\n     * A promise that resolves with the metadata for this object. If this\r\n     * object doesn't exist or metadata cannot be retreived, the promise is\r\n     * rejected.\r\n     */\r\n    ReferenceCompat.prototype.getMetadata = function () {\r\n        return getMetadata$1(this._delegate);\r\n    };\r\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata - The new metadata for the object.\r\n     * Only values that have been explicitly set will be changed. Explicitly\r\n     * setting a value to null will remove the metadata.\r\n     * @returns A promise that resolves\r\n     * with the new metadata for this object.\r\n     * @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\r\n    ReferenceCompat.prototype.updateMetadata = function (metadata) {\r\n        return updateMetadata$1(this._delegate, metadata);\r\n    };\r\n    /**\r\n     * @returns A promise that resolves with the download\r\n     * URL for this object.\r\n     */\r\n    ReferenceCompat.prototype.getDownloadURL = function () {\r\n        return getDownloadURL(this._delegate);\r\n    };\r\n    /**\r\n     * Deletes the object at this location.\r\n     * @returns A promise that resolves if the deletion succeeds.\r\n     */\r\n    ReferenceCompat.prototype.delete = function () {\r\n        this._throwIfRoot('delete');\r\n        return deleteObject$1(this._delegate);\r\n    };\r\n    ReferenceCompat.prototype._throwIfRoot = function (name) {\r\n        if (this._delegate._location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return ReferenceCompat;\r\n}());\n\n/**\r\n * A request whose promise always fails.\r\n */\r\nvar FailRequest = /** @class */ (function () {\r\n    function FailRequest(error) {\r\n        this.promise_ = Promise.reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.cancel = function (_appDelete) {\r\n    };\r\n    return FailRequest;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ncallback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    var waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    // TODO: find a way to exclude Node type definition for storage because storage only works in browser\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    var timeoutId = null;\r\n    var hitTimeout = false;\r\n    var cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    var triggeredCallback = false;\r\n    function triggerCallback() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, args);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        timeoutId = setTimeout(function () {\r\n            timeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    function handler(success) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (success) {\r\n            triggerCallback.call.apply(triggerCallback, Object(tslib_es6[\"g\" /* __spreadArrays */])([null, success], args));\r\n            return;\r\n        }\r\n        var mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            triggerCallback.call.apply(triggerCallback, Object(tslib_es6[\"g\" /* __spreadArrays */])([null, success], args));\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        var waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    var stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (timeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(timeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    setTimeout(function () {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction index_esm_stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar NetworkRequest = /** @class */ (function () {\r\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\r\n        var _this = this;\r\n        this.pendingXhr_ = null;\r\n        this.backoffId_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.url_ = url;\r\n        this.method_ = method;\r\n        this.headers_ = headers;\r\n        this.body_ = body;\r\n        this.successCodes_ = successCodes.slice();\r\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\r\n        this.callback_ = callback;\r\n        this.errorCallback_ = errorCallback;\r\n        this.progressCallback_ = progressCallback;\r\n        this.timeout_ = timeout;\r\n        this.pool_ = pool;\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    NetworkRequest.prototype.start_ = function () {\r\n        var self = this;\r\n        function doTheRequest(backoffCallback, canceled) {\r\n            if (canceled) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            var xhr = self.pool_.createXhrIo();\r\n            self.pendingXhr_ = xhr;\r\n            function progressListener(progressEvent) {\r\n                var loaded = progressEvent.loaded;\r\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (self.progressCallback_ !== null) {\r\n                    self.progressCallback_(loaded, total);\r\n                }\r\n            }\r\n            if (self.progressCallback_ !== null) {\r\n                xhr.addUploadProgressListener(progressListener);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            xhr\r\n                .send(self.url_, self.method_, self.body_, self.headers_)\r\n                .then(function (xhr) {\r\n                if (self.progressCallback_ !== null) {\r\n                    xhr.removeUploadProgressListener(progressListener);\r\n                }\r\n                self.pendingXhr_ = null;\r\n                xhr = xhr;\r\n                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\r\n                var status = xhr.getStatus();\r\n                if (!hitServer || self.isRetryStatusCode_(status)) {\r\n                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                var successCode = self.successCodes_.indexOf(status) !== -1;\r\n                backoffCallback(true, new RequestEndStatus(successCode, xhr));\r\n            });\r\n        }\r\n        /**\r\n         * @param requestWentThrough - True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        function backoffDone(requestWentThrough, status) {\r\n            var resolve = self.resolve_;\r\n            var reject = self.reject_;\r\n            var xhr = status.xhr;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    var result = self.callback_(xhr, xhr.getResponseText());\r\n                    if (isJustDef(result)) {\r\n                        resolve(result);\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            else {\r\n                if (xhr !== null) {\r\n                    var err = unknown();\r\n                    err.serverResponse = xhr.getResponseText();\r\n                    if (self.errorCallback_) {\r\n                        reject(self.errorCallback_(xhr, err));\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        var err = self.appDelete_ ? appDeleted() : index_esm_canceled();\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        var err = retryLimitExceeded();\r\n                        reject(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.cancel = function (appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            index_esm_stop(this.backoffId_);\r\n        }\r\n        if (this.pendingXhr_ !== null) {\r\n            this.pendingXhr_.abort();\r\n        }\r\n    };\r\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        var isFiveHundredCode = status >= 500 && status < 600;\r\n        var extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\r\n        var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    };\r\n    return NetworkRequest;\r\n}());\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */\r\nvar RequestEndStatus = /** @class */ (function () {\r\n    function RequestEndStatus(wasSuccessCode, xhr, canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.xhr = xhr;\r\n        this.canceled = !!canceled;\r\n    }\r\n    return RequestEndStatus;\r\n}());\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers) {\r\n    var version = typeof index_esm[\"a\" /* default */] !== 'undefined' ? index_esm[\"a\" /* default */].SDK_VERSION : 'AppManager';\r\n    headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\r\n}\r\nfunction addGmpidHeader_(headers, appId) {\r\n    if (appId) {\r\n        headers['X-Firebase-GMPID'] = appId;\r\n    }\r\n}\r\nfunction makeRequest(requestInfo, appId, authToken, pool) {\r\n    var queryPart = makeQueryString(requestInfo.urlParams);\r\n    var url = requestInfo.url + queryPart;\r\n    var headers = Object.assign({}, requestInfo.headers);\r\n    addGmpidHeader_(headers, appId);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isUrl(path) {\r\n    return /^[A-Za-z]+:\\/\\//.test(path);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */\r\nfunction refFromURL(service, url) {\r\n    return new Reference(service, url);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */\r\nfunction refFromPath(ref, path) {\r\n    if (ref instanceof index_esm_StorageService) {\r\n        var service = ref;\r\n        if (service._bucket == null) {\r\n            throw noDefaultBucket();\r\n        }\r\n        var reference = new Reference(service, service._bucket);\r\n        if (path != null) {\r\n            return refFromPath(reference, path);\r\n        }\r\n        else {\r\n            return reference;\r\n        }\r\n    }\r\n    else {\r\n        // ref is a Reference\r\n        if (path !== undefined) {\r\n            if (path.includes('..')) {\r\n                throw invalidArgument('`path` param cannot contain \"..\"');\r\n            }\r\n            return getChild(ref, path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    }\r\n}\r\nfunction index_esm_ref(serviceOrRef, pathOrUrl) {\r\n    if (pathOrUrl && isUrl(pathOrUrl)) {\r\n        if (serviceOrRef instanceof index_esm_StorageService) {\r\n            return refFromURL(serviceOrRef, pathOrUrl);\r\n        }\r\n        else {\r\n            throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\r\n        }\r\n    }\r\n    else {\r\n        return refFromPath(serviceOrRef, pathOrUrl);\r\n    }\r\n}\r\nfunction extractBucket(config) {\r\n    var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\r\n    if (bucketString == null) {\r\n        return null;\r\n    }\r\n    return Location.makeFromBucketSpec(bucketString);\r\n}\r\n/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n */\r\nvar index_esm_StorageService = /** @class */ (function () {\r\n    function StorageService(app, \r\n    /**\r\n     * @internal\r\n     */\r\n    _authProvider, \r\n    /**\r\n     * @internal\r\n     */\r\n    _pool, \r\n    /**\r\n     * @internal\r\n     */\r\n    _url) {\r\n        this.app = app;\r\n        this._authProvider = _authProvider;\r\n        this._pool = _pool;\r\n        this._url = _url;\r\n        /**\r\n         * @internal\r\n         */\r\n        this._bucket = null;\r\n        this._appId = null;\r\n        this._deleted = false;\r\n        this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\r\n        this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\r\n        this._requests = new Set();\r\n        if (_url != null) {\r\n            this._bucket = Location.makeFromBucketSpec(_url);\r\n        }\r\n        else {\r\n            this._bucket = extractBucket(this.app.options);\r\n        }\r\n    }\r\n    Object.defineProperty(StorageService.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this._maxUploadRetryTime;\r\n        },\r\n        set: function (time) {\r\n            validateNumber('time', \r\n            /* minValue=*/ 0, \r\n            /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n            this._maxUploadRetryTime = time;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StorageService.prototype, \"maxOperationRetryTime\", {\r\n        get: function () {\r\n            return this._maxOperationRetryTime;\r\n        },\r\n        set: function (time) {\r\n            validateNumber('time', \r\n            /* minValue=*/ 0, \r\n            /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n            this._maxOperationRetryTime = time;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    StorageService.prototype.getAuthToken = function () {\r\n        return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var auth, tokenData;\r\n            return Object(tslib_es6[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        auth = this._authProvider.getImmediate({ optional: true });\r\n                        if (!auth) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, auth.getToken()];\r\n                    case 1:\r\n                        tokenData = _a.sent();\r\n                        if (tokenData !== null) {\r\n                            return [2 /*return*/, tokenData.accessToken];\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     * @internal\r\n     */\r\n    StorageService.prototype._delete = function () {\r\n        this._deleted = true;\r\n        this._requests.forEach(function (request) { return request.cancel(); });\r\n        this._requests.clear();\r\n        return Promise.resolve();\r\n    };\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n     * at the given Location.\r\n     */\r\n    StorageService.prototype.makeStorageReference = function (loc) {\r\n        return new Reference(this, loc);\r\n    };\r\n    /**\r\n     * @internal\r\n     * @param requestInfo - HTTP RequestInfo object\r\n     * @param authToken - Firebase auth token\r\n     */\r\n    StorageService.prototype.makeRequest = function (requestInfo, authToken) {\r\n        var _this = this;\r\n        if (!this._deleted) {\r\n            var request_1 = makeRequest(requestInfo, this._appId, authToken, this._pool);\r\n            this._requests.add(request_1);\r\n            // Request removes itself from set when complete.\r\n            request_1.getPromise().then(function () { return _this._requests.delete(request_1); }, function () { return _this._requests.delete(request_1); });\r\n            return request_1;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    };\r\n    return StorageService;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n */\r\nvar StorageServiceCompat = /** @class */ (function () {\r\n    function StorageServiceCompat(app, _delegate) {\r\n        var _this = this;\r\n        this.app = app;\r\n        this._delegate = _delegate;\r\n        this.INTERNAL = {\r\n            /**\r\n             * Called when the associated app is deleted.\r\n             */\r\n            delete: function () {\r\n                return _this._delegate._delete();\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(StorageServiceCompat.prototype, \"maxOperationRetryTime\", {\r\n        get: function () {\r\n            return this._delegate.maxOperationRetryTime;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StorageServiceCompat.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this._delegate.maxUploadRetryTime;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\r\n    StorageServiceCompat.prototype.ref = function (path) {\r\n        if (isUrl(path)) {\r\n            throw invalidArgument('ref() expected a child path but got a URL, use refFromURL instead.');\r\n        }\r\n        return new ReferenceCompat(index_esm_ref(this._delegate, path), this);\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\r\n    StorageServiceCompat.prototype.refFromURL = function (url) {\r\n        if (!isUrl(url)) {\r\n            throw invalidArgument('refFromURL() expected a full URL but got a child path, use ref() instead.');\r\n        }\r\n        try {\r\n            Location.makeFromUrl(url);\r\n        }\r\n        catch (e) {\r\n            throw invalidArgument('refFromUrl() expected a valid full URL but got an invalid one.');\r\n        }\r\n        return new ReferenceCompat(index_esm_ref(this._delegate, url), this);\r\n    };\r\n    StorageServiceCompat.prototype.setMaxUploadRetryTime = function (time) {\r\n        this._delegate.maxUploadRetryTime = time;\r\n    };\r\n    StorageServiceCompat.prototype.setMaxOperationRetryTime = function (time) {\r\n        this._delegate.maxOperationRetryTime = time;\r\n    };\r\n    return StorageServiceCompat;\r\n}());\n\nvar index_esm_name = \"@firebase/storage\";\nvar index_esm_version = \"0.4.2\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nvar STORAGE_TYPE = 'storage';\r\nfunction factory(container, url) {\r\n    // Dependencies\r\n    // TODO: This should eventually be 'app-compat'\r\n    var app = container.getProvider('app').getImmediate();\r\n    var authProvider = container.getProvider('auth-internal');\r\n    // TODO: get StorageService instance from component framework instead\r\n    // of creating a new one.\r\n    var storageServiceCompat = new StorageServiceCompat(app, new index_esm_StorageService(app, authProvider, new XhrIoPool(), url));\r\n    return storageServiceCompat;\r\n}\r\nfunction registerStorage(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        TaskState: TaskState,\r\n        TaskEvent: TaskEvent,\r\n        StringFormat: StringFormat,\r\n        Storage: index_esm_StorageService,\r\n        Reference: ReferenceCompat\r\n    };\r\n    instance.INTERNAL.registerComponent(new component_dist_index_esm[\"a\" /* Component */](STORAGE_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(index_esm_name, index_esm_version);\r\n}\r\nregisterStorage(index_esm[\"a\" /* default */]);\n\n\n//# sourceMappingURL=index.esm.js.map\n\n// CONCATENATED MODULE: ./node_modules/firebase/storage/dist/index.esm.js\n\n//# sourceMappingURL=index.esm.js.map\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/home/raul/Documentos/Proyectos/Flexxo/flexxo-web/node_modules/@firebase/storage/dist/index.esm.js","/home/raul/Documentos/Proyectos/Flexxo/flexxo-web/node_modules/firebase/storage/dist/index.esm.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAqC;AAC+C;AACrC;AACC;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,8BAAoB;AACxB,IAAI,sCAAS;AACb;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC,CAAC,uCAAa;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8BAAoB;AACnC;AACA;AACA,eAAe,8BAAoB;AACnC;AACA;AACA,eAAe,8BAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8BAAoB;AACnC;AACA;AACA,eAAe,8BAAoB;AACnC;AACA;AACA,eAAe,8BAAoB;AACnC;AACA,SAAS,kBAAQ;AACjB,eAAe,8BAAoB;AACnC;AACA;AACA,eAAe,8BAAoB;AACnC;AACA;AACA,eAAe,8BAAoB;AACnC;AACA;AACA,eAAe,8BAAoB;AACnC;AACA;AACA;AACA;AACA;AACA,eAAe,8BAAoB;AACnC;AACA;AACA,eAAe,8BAAoB;AACnC;AACA;AACA,eAAe,8BAAoB;AACnC;AACA;AACA,eAAe,8BAAoB;AACnC;AACA;AACA,eAAe,8BAAoB;AACnC;AACA;AACA;AACA;AACA;AACA,eAAe,8BAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8BAAoB;AACnC;AACA;AACA;AACA;AACA;AACA,cAAc,8BAAoB;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F;AAC/F;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8BAAoB;AACtC;AACA;AACA,kBAAkB,8BAAoB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8BAAowBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,mCAAmC;AACnC;AACA,aAAa,2DAA2D;AACxE;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAM;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,6BAA6B,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,mBAAmB;AAC/D;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gBAAgB;AAClmBAAmB,mCAAmC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACneAAK;AACd;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA,4CAA4C,uCAAuC,EAAE;AACrF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,8CAA8C,EAAE;AAChD;AACA;AACA;AACA;AACA,kCAAkC,mDAAmD;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kBAAQ;AACtoBAAoB,eAAK;AACzB;AACA;AACA;AACA;AACA,oBAAoB,eAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,eAAK;AACzB;AACA;AACA;AACA;AACA,oBAAoB,eAAK;AACzB;AACA;AACA;AACA;AACA;AACA,oBAAoB,eAAK;AACzB;AACA;AACA;AACA;AACA;AACA,oBAAoB,eAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,0BAA0B,gBAAM;AAChC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2BAA2B;AACvD;AACA;AACA,wBAAwB,qCAAQ,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,oBAAoB,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sCAAS;AACpB;AACA;AACA,eAAe,wCAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sCAAS;AACpB;AACA,eAAe,wCAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sCAAS;AACpB;AACA,eAAe,wCAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sCAAS;AACpB;AACA,eAAe,wCAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sCAAS;AACpB;AACA,eAAe,wCAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sCAAS;AACpB;AACA,eAAe,wCAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,iDAAiD,EAAE;AAClH,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,4DAA4D,iDAAiD,EAAE;AAC/G,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,2BAA2B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,+CAA+C,EAAE;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,+CAA+C,EAAE;AACnwBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,2CAAc;AACtE;AACA;AACA;AACA;AACA,wDAAwD,2CAAc;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,cAAI;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,kBAAQ;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,cAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4BAAQ,mBAAmB,4BAAQ;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,aAAG;AACZ;AACA,oCAAoC,wBAAc;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wBAAc;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,sCAAS;AACxB;AACA,mBAAmB,wCAAW;AAC9B;AACA;AACA,gEAAgE,iBAAiB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,yBAAyB,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,0CAA0C,EAAE,eAAe,0CAA0C,EAAE;AAC5J;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,aAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,aAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,IAAI,cAAI;AACR,IAAI,iBAAO;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,wBAAc;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,wBAAc;AAC/B;AACA;AACA,4CAA4C,6CAAS;AACrD;AACA;AACA,6BAA6B,cAAI,EAAE,iBAAO;AAC1C;AACA,gBAAgB,4BAAQ;;AAEG;AAC3B;;;AChjH2B;AAC3B","file":"x","sourcesContent":["import firebase from '@firebase/app';\nimport { __extends, __awaiter, __generator, __assign, __spreadArrays } from 'tslib';\nimport { FirebaseError } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain name for firebase storage.\r\n */\r\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\r\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\r\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\r\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\r\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\nvar FirebaseStorageError = /** @class */ (function (_super) {\r\n    __extends(FirebaseStorageError, _super);\r\n    function FirebaseStorageError(code, message) {\r\n        var _this = _super.call(this, prependCode(code), \"Firebase Storage: \" + message + \" (\" + prependCode(code) + \")\") || this;\r\n        _this.customData = { serverResponse: null };\r\n        // Without this, `instanceof FirebaseStorageError`, in tests for example,\r\n        // returns false.\r\n        Object.setPrototypeOf(_this, FirebaseStorageError.prototype);\r\n        return _this;\r\n    }\r\n    FirebaseStorageError.prototype.codeEquals = function (code) {\r\n        return prependCode(code) === this.code;\r\n    };\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\r\n        get: function () {\r\n            if (this.customData.serverResponse) {\r\n                return this.message + \"\\n\" + this.customData.serverResponse;\r\n            }\r\n            else {\r\n                return this.message;\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\r\n        get: function () {\r\n            return this.customData.serverResponse;\r\n        },\r\n        set: function (serverResponse) {\r\n            this.customData.serverResponse = serverResponse;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return FirebaseStorageError;\r\n}(FirebaseError));\r\nvar Code = {\r\n    // Shared between all platforms\r\n    UNKNOWN: 'unknown',\r\n    OBJECT_NOT_FOUND: 'object-not-found',\r\n    BUCKET_NOT_FOUND: 'bucket-not-found',\r\n    PROJECT_NOT_FOUND: 'project-not-found',\r\n    QUOTA_EXCEEDED: 'quota-exceeded',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    UNAUTHORIZED: 'unauthorized',\r\n    RETRY_LIMIT_EXCEEDED: 'retry-limit-exceeded',\r\n    INVALID_CHECKSUM: 'invalid-checksum',\r\n    CANCELED: 'canceled',\r\n    // JS specific\r\n    INVALID_EVENT_NAME: 'invalid-event-name',\r\n    INVALID_URL: 'invalid-url',\r\n    INVALID_DEFAULT_BUCKET: 'invalid-default-bucket',\r\n    NO_DEFAULT_BUCKET: 'no-default-bucket',\r\n    CANNOT_SLICE_BLOB: 'cannot-slice-blob',\r\n    SERVER_FILE_WRONG_SIZE: 'server-file-wrong-size',\r\n    NO_DOWNLOAD_URL: 'no-download-url',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    INVALID_ARGUMENT_COUNT: 'invalid-argument-count',\r\n    APP_DELETED: 'app-deleted',\r\n    INVALID_ROOT_OPERATION: 'invalid-root-operation',\r\n    INVALID_FORMAT: 'invalid-format',\r\n    INTERNAL_ERROR: 'internal-error',\r\n    UNSUPPORTED_ENVIRONMENT: 'unsupported-environment'\r\n};\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    var message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new FirebaseStorageError(Code.UNKNOWN, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new FirebaseStorageError(Code.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new FirebaseStorageError(Code.QUOTA_EXCEEDED, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    var message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new FirebaseStorageError(Code.UNAUTHENTICATED, message);\r\n}\r\nfunction unauthorized(path) {\r\n    return new FirebaseStorageError(Code.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new FirebaseStorageError(Code.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new FirebaseStorageError(Code.CANCELED, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new FirebaseStorageError(Code.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new FirebaseStorageError(Code.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction noDefaultBucket() {\r\n    return new FirebaseStorageError(Code.NO_DEFAULT_BUCKET, 'No default bucket ' +\r\n        \"found. Did you set the '\" +\r\n        CONFIG_STORAGE_BUCKET_KEY +\r\n        \"' property when initializing the app?\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new FirebaseStorageError(Code.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new FirebaseStorageError(Code.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new FirebaseStorageError(Code.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\r\n}\r\nfunction invalidArgument(message) {\r\n    return new FirebaseStorageError(Code.INVALID_ARGUMENT, message);\r\n}\r\nfunction appDeleted() {\r\n    return new FirebaseStorageError(Code.APP_DELETED, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name - The name of the operation that was invalid.\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new FirebaseStorageError(Code.INVALID_ROOT_OPERATION, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new FirebaseStorageError(Code.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message - A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new FirebaseStorageError(Code.INTERNAL_ERROR, 'Internal error: ' + message);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StringFormat = {\r\n    RAW: 'raw',\r\n    BASE64: 'base64',\r\n    BASE64URL: 'base64url',\r\n    DATA_URL: 'data_url'\r\n};\r\nvar StringData = /** @class */ (function () {\r\n    function StringData(data, contentType) {\r\n        this.data = data;\r\n        this.contentType = contentType || null;\r\n    }\r\n    return StringData;\r\n}());\r\nfunction dataFromString(format, stringData) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(stringData));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, stringData));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\r\n        // do nothing\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(value) {\r\n    var b = [];\r\n    for (var i = 0; i < value.length; i++) {\r\n        var c = value.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) === 55296) {\r\n                    // The start of a surrogate pair.\r\n                    var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        var hi = c;\r\n                        var lo = value.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) === 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(value) {\r\n    var decoded;\r\n    try {\r\n        decoded = decodeURIComponent(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, value) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            var hasMinus = value.indexOf('-') !== -1;\r\n            var hasUnder = value.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                var invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            var hasPlus = value.indexOf('+') !== -1;\r\n            var hasSlash = value.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                var invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            value = value.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n        // do nothing\r\n    }\r\n    var bytes;\r\n    try {\r\n        bytes = atob(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    var array = new Uint8Array(bytes.length);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\nvar DataURLParts = /** @class */ (function () {\r\n    function DataURLParts(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        var matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        var middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n    return DataURLParts;\r\n}());\r\nfunction dataURLBytes_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    var longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TaskEvent = {\r\n    /** Triggered whenever the task changes or progress is updated. */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\nvar InternalTaskState = {\r\n    RUNNING: 'running',\r\n    PAUSING: 'pausing',\r\n    PAUSED: 'paused',\r\n    SUCCESS: 'success',\r\n    CANCELING: 'canceling',\r\n    CANCELED: 'canceled',\r\n    ERROR: 'error'\r\n};\r\nvar TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case InternalTaskState.RUNNING:\r\n        case InternalTaskState.PAUSING:\r\n        case InternalTaskState.CANCELING:\r\n            return TaskState.RUNNING;\r\n        case InternalTaskState.PAUSED:\r\n            return TaskState.PAUSED;\r\n        case InternalTaskState.SUCCESS:\r\n            return TaskState.SUCCESS;\r\n        case InternalTaskState.CANCELED:\r\n            return TaskState.CANCELED;\r\n        case InternalTaskState.ERROR:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\r\nvar NetworkXhrIo = /** @class */ (function () {\r\n    function NetworkXhrIo() {\r\n        var _this = this;\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = new Promise(function (resolve) {\r\n            _this.xhr_.addEventListener('abort', function () {\r\n                _this.errorCode_ = ErrorCode.ABORT;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('error', function () {\r\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve(_this);\r\n            });\r\n            _this.xhr_.addEventListener('load', function () {\r\n                resolve(_this);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.send = function (url, method, body, headers) {\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (headers !== undefined) {\r\n            for (var key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    this.xhr_.setRequestHeader(key, headers[key].toString());\r\n                }\r\n            }\r\n        }\r\n        if (body !== undefined) {\r\n            this.xhr_.send(body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getErrorCode = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getStatus = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseText = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponseText() before sending');\r\n        }\r\n        return this.xhr_.responseText;\r\n    };\r\n    /**\r\n     * Aborts the request.\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.abort = function () {\r\n        this.xhr_.abort();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.getResponseHeader = function (header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    };\r\n    return NetworkXhrIo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\r\nvar XhrIoPool = /** @class */ (function () {\r\n    function XhrIoPool() {\r\n    }\r\n    XhrIoPool.prototype.createXhrIo = function () {\r\n        return new NetworkXhrIo();\r\n    };\r\n    return XhrIoPool;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return typeof p === 'object' && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\r\nfunction validateNumber(argument, minValue, maxValue, value) {\r\n    if (value < minValue) {\r\n        throw new FirebaseStorageError(Code.INVALID_ARGUMENT, \"Invalid value for '\" + argument + \"'. Expected \" + minValue + \" or greater.\");\r\n    }\r\n    if (value > maxValue) {\r\n        throw new FirebaseStorageError(Code.INVALID_ARGUMENT, \"Invalid value for '\" + argument + \"'. Expected \" + maxValue + \" or less.\");\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        var bb = new BlobBuilder();\r\n        for (var i = 0; i < args.length; i++) {\r\n            bb.append(args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(args);\r\n        }\r\n        else {\r\n            throw new FirebaseStorageError(Code.UNSUPPORTED_ENVIRONMENT, \"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n */\r\nvar FbsBlob = /** @class */ (function () {\r\n    function FbsBlob(data, elideCopy) {\r\n        var size = 0;\r\n        var blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    FbsBlob.prototype.size = function () {\r\n        return this.size_;\r\n    };\r\n    FbsBlob.prototype.type = function () {\r\n        return this.type_;\r\n    };\r\n    FbsBlob.prototype.slice = function (startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            var realBlob = this.data_;\r\n            var sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    };\r\n    FbsBlob.getBlob = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (isNativeBlobDefined()) {\r\n            var blobby = args.map(function (val) {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob.apply(null, blobby));\r\n        }\r\n        else {\r\n            var uint8Arrays = args.map(function (val) {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            var finalLength_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                finalLength_1 += array.byteLength;\r\n            });\r\n            var merged_1 = new Uint8Array(finalLength_1);\r\n            var index_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                for (var i = 0; i < array.length; i++) {\r\n                    merged_1[index_1++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged_1, true);\r\n        }\r\n    };\r\n    FbsBlob.prototype.uploadData = function () {\r\n        return this.data_;\r\n    };\r\n    return FbsBlob;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Location = /** @class */ (function () {\r\n    function Location(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    Object.defineProperty(Location.prototype, \"path\", {\r\n        get: function () {\r\n            return this.path_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Location.prototype, \"isRoot\", {\r\n        get: function () {\r\n            return this.path.length === 0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Location.prototype.fullServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    };\r\n    Location.prototype.bucketOnlyServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    };\r\n    Location.makeFromBucketSpec = function (bucketString) {\r\n        var bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    };\r\n    Location.makeFromUrl = function (url) {\r\n        var location = null;\r\n        var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        var gsPath = '(/(.*))?$';\r\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        var gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        var version = 'v[A-Za-z0-9_]+';\r\n        var firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\r\n        var firebaseStoragePath = '(/([^?#]*).*)?$';\r\n        var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\r\n        var firebaseStorageIndices = { bucket: 1, path: 3 };\r\n        var cloudStorageHost = '(?:storage.googleapis.com|storage.cloud.google.com)';\r\n        var cloudStoragePath = '([^?#]*)';\r\n        var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\r\n        var cloudStorageIndices = { bucket: 1, path: 2 };\r\n        var groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            {\r\n                regex: firebaseStorageRegExp,\r\n                indices: firebaseStorageIndices,\r\n                postModify: httpModify\r\n            },\r\n            {\r\n                regex: cloudStorageRegExp,\r\n                indices: cloudStorageIndices,\r\n                postModify: httpModify\r\n            }\r\n        ];\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var group = groups[i];\r\n            var captures = group.regex.exec(url);\r\n            if (captures) {\r\n                var bucketValue = captures[group.indices.bucket];\r\n                var pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    };\r\n    return Location;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    var obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length === 0) {\r\n        return null;\r\n    }\r\n    var index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    var newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    var canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(function (component) { return component.length > 0; })\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    var index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeUrl(urlPart) {\r\n    return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\r\n}\r\nfunction makeQueryString(params) {\r\n    var encode = encodeURIComponent;\r\n    var queryPart = '?';\r\n    for (var key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            var nextPart = encode(key) + '=' + encode(params[key]);\r\n            queryPart = queryPart + nextPart + '&';\r\n        }\r\n    }\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\nvar Mapping = /** @class */ (function () {\r\n    function Mapping(server, local, writable, xform) {\r\n        this.server = server;\r\n        this.local = local || server;\r\n        this.writable = !!writable;\r\n        this.xform = xform || noXform_;\r\n    }\r\n    return Mapping;\r\n}());\r\nvar mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    if (!isString(fullPath) || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    var mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(_metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    var nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(_metadata, size) {\r\n        if (size !== undefined) {\r\n            return Number(size);\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    var sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, service) {\r\n    function generateRef() {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var loc = new Location(bucket, path);\r\n        return service.makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(service, resource, mappings) {\r\n    var metadata = {};\r\n    metadata['type'] = 'file';\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, service);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(service, resourceString, mappings) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromResource(service, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    var tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    var encode = encodeURIComponent;\r\n    var tokensList = tokens.split(',');\r\n    var urls = tokensList.map(function (token) {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        var base = makeUrl(urlPart);\r\n        var queryString = makeQueryString({\r\n            alt: 'media',\r\n            token: token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    var resource = {};\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PREFIXES_KEY = 'prefixes';\r\nvar ITEMS_KEY = 'items';\r\nfunction fromBackendResponse(service, bucket, resource) {\r\n    var listResult = {\r\n        prefixes: [],\r\n        items: [],\r\n        nextPageToken: resource['nextPageToken']\r\n    };\r\n    if (resource[PREFIXES_KEY]) {\r\n        for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\r\n            var reference = service.makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\r\n            listResult.prefixes.push(reference);\r\n        }\r\n    }\r\n    if (resource[ITEMS_KEY]) {\r\n        for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\r\n            var item = _c[_b];\r\n            var reference = service.makeStorageReference(new Location(bucket, item['name']));\r\n            listResult.items.push(reference);\r\n        }\r\n    }\r\n    return listResult;\r\n}\r\nfunction fromResponseString(service, bucket, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromBackendResponse(service, bucket, resource);\r\n}\n\nvar RequestInfo = /** @class */ (function () {\r\n    function RequestInfo(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n    return RequestInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction listHandler(service, bucket) {\r\n    function handler(xhr, text) {\r\n        var listResult = fromResponseString(service, bucket, text);\r\n        handlerCheck(listResult !== null);\r\n        return listResult;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        var newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            newErr = unauthenticated();\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    var shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        var newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata(service, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction list(service, location, delimiter, pageToken, maxResults) {\r\n    var urlParams = {};\r\n    if (location.isRoot) {\r\n        urlParams['prefix'] = '';\r\n    }\r\n    else {\r\n        urlParams['prefix'] = location.path + '/';\r\n    }\r\n    if (delimiter && delimiter.length > 0) {\r\n        urlParams['delimiter'] = delimiter;\r\n    }\r\n    if (pageToken) {\r\n        urlParams['pageToken'] = pageToken;\r\n    }\r\n    if (maxResults) {\r\n        urlParams['maxResults'] = maxResults;\r\n    }\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(service, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata(service, location, metadata, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'PATCH';\r\n    var body = toResourceString(metadata, mappings);\r\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject(service, location) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart);\r\n    var method = 'DELETE';\r\n    var timeout = service.maxOperationRetryTime;\r\n    function handler(_xhr, _text) { }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, metadata) {\r\n    var metadataClone = Object.assign({}, metadata);\r\n    metadataClone['fullPath'] = location.path;\r\n    metadataClone['size'] = blob.size();\r\n    if (!metadataClone['contentType']) {\r\n        metadataClone['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadataClone;\r\n}\r\nfunction multipartUpload(service, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        var str = '';\r\n        for (var i = 0; i < 2; i++) {\r\n            str = str + Math.random().toString().slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    var boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    var metadata_ = metadataForUpload_(location, blob, metadata);\r\n    var metadataString = toResourceString(metadata_, mappings);\r\n    var preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata_['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    var postBlobPart = '\\r\\n--' + boundary + '--';\r\n    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    var urlParams = { name: metadata_['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */\r\nvar ResumableUploadStatus = /** @class */ (function () {\r\n    function ResumableUploadStatus(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n    return ResumableUploadStatus;\r\n}());\r\nfunction checkResumeHeader_(xhr, allowed) {\r\n    var status = null;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    var allowedStatus = allowed || ['active'];\r\n    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\r\n    return status;\r\n}\r\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var metadataForUpload = metadataForUpload_(location, blob, metadata);\r\n    var urlParams = { name: metadataForUpload['fullPath'] };\r\n    var url = makeUrl(urlPart);\r\n    var method = 'POST';\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': blob.size(),\r\n        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    var body = toResourceString(metadataForUpload, mappings);\r\n    var timeout = service.maxUploadRetryTime;\r\n    function handler(xhr) {\r\n        checkResumeHeader_(xhr);\r\n        var url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(service, location, url, blob) {\r\n    var headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr) {\r\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var sizeString = null;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        if (!sizeString) {\r\n            // null or empty string\r\n            handlerCheck(false);\r\n        }\r\n        var size = Number(sizeString);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nvar resumableUploadChunkSize = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    var status_ = new ResumableUploadStatus(0, 0);\r\n    if (status) {\r\n        status_.current = status.current;\r\n        status_.total = status.total;\r\n    }\r\n    else {\r\n        status_.current = 0;\r\n        status_.total = blob.size();\r\n    }\r\n    if (blob.size() !== status_.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    var bytesLeft = status_.total - status_.current;\r\n    var bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    var startByte = status_.current;\r\n    var endByte = startByte + bytesToUpload;\r\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    var headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': status_.current\r\n    };\r\n    var body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var newCurrent = status_.current + bytesToUpload;\r\n        var size = blob.size();\r\n        var metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(service, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Observer = /** @class */ (function () {\r\n    function Observer(nextOrObserver, error, complete) {\r\n        var asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = error;\r\n            this.complete = complete;\r\n        }\r\n        else {\r\n            var observer = nextOrObserver;\r\n            this.next = observer.next;\r\n            this.error = observer.error;\r\n            this.complete = observer.complete;\r\n        }\r\n    }\r\n    return Observer;\r\n}());\n\nvar UploadTaskSnapshot = /** @class */ (function () {\r\n    function UploadTaskSnapshot(bytesTransferred, totalBytes, state, metadata, task, ref) {\r\n        this.bytesTransferred = bytesTransferred;\r\n        this.totalBytes = totalBytes;\r\n        this.state = state;\r\n        this.metadata = metadata;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    return UploadTaskSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(f) {\r\n    return function () {\r\n        var argsToForward = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            argsToForward[_i] = arguments[_i];\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.resolve().then(function () { return f.apply(void 0, argsToForward); });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n */\r\nvar UploadTask = /** @class */ (function () {\r\n    /**\r\n     * @param ref - The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob - The blob to upload.\r\n     */\r\n    function UploadTask(ref, blob, metadata) {\r\n        var _this = this;\r\n        if (metadata === void 0) { metadata = null; }\r\n        /**\r\n         * @internal\r\n         */\r\n        this._transferred = 0;\r\n        this._needToFetchStatus = false;\r\n        this._needToFetchMetadata = false;\r\n        this._observers = [];\r\n        this._error = undefined;\r\n        this._uploadUrl = undefined;\r\n        this._request = undefined;\r\n        this._chunkMultiplier = 1;\r\n        this._resolve = undefined;\r\n        this._reject = undefined;\r\n        this._ref = ref;\r\n        this._blob = blob;\r\n        this._metadata = metadata;\r\n        this._mappings = getMappings();\r\n        this._resumable = this._shouldDoResumable(this._blob);\r\n        this._state = InternalTaskState.RUNNING;\r\n        this._errorHandler = function (error) {\r\n            _this._request = undefined;\r\n            _this._chunkMultiplier = 1;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this._needToFetchStatus = true;\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this._error = error;\r\n                _this._transition(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this._metadataErrorHandler = function (error) {\r\n            _this._request = undefined;\r\n            if (error.codeEquals(Code.CANCELED)) {\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this._error = error;\r\n                _this._transition(InternalTaskState.ERROR);\r\n            }\r\n        };\r\n        this._promise = new Promise(function (resolve, reject) {\r\n            _this._resolve = resolve;\r\n            _this._reject = reject;\r\n            _this._start();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this._promise.then(null, function () { });\r\n    }\r\n    UploadTask.prototype._makeProgressCallback = function () {\r\n        var _this = this;\r\n        var sizeBefore = this._transferred;\r\n        return function (loaded) { return _this._updateProgress(sizeBefore + loaded); };\r\n    };\r\n    UploadTask.prototype._shouldDoResumable = function (blob) {\r\n        return blob.size() > 256 * 1024;\r\n    };\r\n    UploadTask.prototype._start = function () {\r\n        if (this._state !== InternalTaskState.RUNNING) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this._request !== undefined) {\r\n            return;\r\n        }\r\n        if (this._resumable) {\r\n            if (this._uploadUrl === undefined) {\r\n                this._createResumable();\r\n            }\r\n            else {\r\n                if (this._needToFetchStatus) {\r\n                    this._fetchStatus();\r\n                }\r\n                else {\r\n                    if (this._needToFetchMetadata) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this._fetchMetadata();\r\n                    }\r\n                    else {\r\n                        this._continueUpload();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._oneShotUpload();\r\n        }\r\n    };\r\n    UploadTask.prototype._resolveToken = function (callback) {\r\n        var _this = this;\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this._ref.storage.getAuthToken().then(function (authToken) {\r\n            switch (_this._state) {\r\n                case InternalTaskState.RUNNING:\r\n                    callback(authToken);\r\n                    break;\r\n                case InternalTaskState.CANCELING:\r\n                    _this._transition(InternalTaskState.CANCELED);\r\n                    break;\r\n                case InternalTaskState.PAUSING:\r\n                    _this._transition(InternalTaskState.PAUSED);\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    // TODO(andysoto): assert false\r\n    UploadTask.prototype._createResumable = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo = createResumableUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\r\n            var createRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\r\n            _this._request = createRequest;\r\n            createRequest.getPromise().then(function (url) {\r\n                _this._request = undefined;\r\n                _this._uploadUrl = url;\r\n                _this._needToFetchStatus = false;\r\n                _this.completeTransitions_();\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._fetchStatus = function () {\r\n        var _this = this;\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this._uploadUrl;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo = getResumableUploadStatus(_this._ref.storage, _this._ref._location, url, _this._blob);\r\n            var statusRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\r\n            _this._request = statusRequest;\r\n            statusRequest.getPromise().then(function (status) {\r\n                status = status;\r\n                _this._request = undefined;\r\n                _this._updateProgress(status.current);\r\n                _this._needToFetchStatus = false;\r\n                if (status.finalized) {\r\n                    _this._needToFetchMetadata = true;\r\n                }\r\n                _this.completeTransitions_();\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._continueUpload = function () {\r\n        var _this = this;\r\n        var chunkSize = resumableUploadChunkSize * this._chunkMultiplier;\r\n        var status = new ResumableUploadStatus(this._transferred, this._blob.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this._uploadUrl;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(_this._ref._location, _this._ref.storage, url, _this._blob, chunkSize, _this._mappings, status, _this._makeProgressCallback());\r\n            }\r\n            catch (e) {\r\n                _this._error = e;\r\n                _this._transition(InternalTaskState.ERROR);\r\n                return;\r\n            }\r\n            var uploadRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\r\n            _this._request = uploadRequest;\r\n            uploadRequest\r\n                .getPromise()\r\n                .then(function (newStatus) {\r\n                _this._increaseMultiplier();\r\n                _this._request = undefined;\r\n                _this._updateProgress(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    _this._metadata = newStatus.metadata;\r\n                    _this._transition(InternalTaskState.SUCCESS);\r\n                }\r\n                else {\r\n                    _this.completeTransitions_();\r\n                }\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._increaseMultiplier = function () {\r\n        var currentSize = resumableUploadChunkSize * this._chunkMultiplier;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this._chunkMultiplier *= 2;\r\n        }\r\n    };\r\n    UploadTask.prototype._fetchMetadata = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo = getMetadata(_this._ref.storage, _this._ref._location, _this._mappings);\r\n            var metadataRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\r\n            _this._request = metadataRequest;\r\n            metadataRequest.getPromise().then(function (metadata) {\r\n                _this._request = undefined;\r\n                _this._metadata = metadata;\r\n                _this._transition(InternalTaskState.SUCCESS);\r\n            }, _this._metadataErrorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._oneShotUpload = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken) {\r\n            var requestInfo = multipartUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\r\n            var multipartRequest = _this._ref.storage.makeRequest(requestInfo, authToken);\r\n            _this._request = multipartRequest;\r\n            multipartRequest.getPromise().then(function (metadata) {\r\n                _this._request = undefined;\r\n                _this._metadata = metadata;\r\n                _this._updateProgress(_this._blob.size());\r\n                _this._transition(InternalTaskState.SUCCESS);\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._updateProgress = function (transferred) {\r\n        var old = this._transferred;\r\n        this._transferred = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this._transferred !== old) {\r\n            this._notifyObservers();\r\n        }\r\n    };\r\n    UploadTask.prototype._transition = function (state) {\r\n        if (this._state === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case InternalTaskState.CANCELING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                var wasPaused = this._state === InternalTaskState.PAUSED;\r\n                this._state = state;\r\n                if (wasPaused) {\r\n                    this._notifyObservers();\r\n                    this._start();\r\n                }\r\n                break;\r\n            case InternalTaskState.PAUSED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case InternalTaskState.CANCELED:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._error = canceled();\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case InternalTaskState.ERROR:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case InternalTaskState.SUCCESS:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n        }\r\n    };\r\n    UploadTask.prototype.completeTransitions_ = function () {\r\n        switch (this._state) {\r\n            case InternalTaskState.PAUSING:\r\n                this._transition(InternalTaskState.PAUSED);\r\n                break;\r\n            case InternalTaskState.CANCELING:\r\n                this._transition(InternalTaskState.CANCELED);\r\n                break;\r\n            case InternalTaskState.RUNNING:\r\n                this._start();\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\r\n        get: function () {\r\n            var externalState = taskStateFromInternalTaskState(this._state);\r\n            return new UploadTaskSnapshot(this._transferred, this._blob.size(), externalState, this._metadata, this, this._ref);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type - The type of event to listen for.\r\n     */\r\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        var _this = this;\r\n        var observer = new Observer(nextOrObserver, error, completed);\r\n        this._addObserver(observer);\r\n        return function () {\r\n            _this._removeObserver(observer);\r\n        };\r\n    };\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected - The rejection callback.\r\n     */\r\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this._promise.then(onFulfilled, onRejected);\r\n    };\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    UploadTask.prototype.catch = function (onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    UploadTask.prototype._addObserver = function (observer) {\r\n        this._observers.push(observer);\r\n        this._notifyObserver(observer);\r\n    };\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    UploadTask.prototype._removeObserver = function (observer) {\r\n        var i = this._observers.indexOf(observer);\r\n        if (i !== -1) {\r\n            this._observers.splice(i, 1);\r\n        }\r\n    };\r\n    UploadTask.prototype._notifyObservers = function () {\r\n        var _this = this;\r\n        this._finishPromise();\r\n        var observers = this._observers.slice();\r\n        observers.forEach(function (observer) {\r\n            _this._notifyObserver(observer);\r\n        });\r\n    };\r\n    UploadTask.prototype._finishPromise = function () {\r\n        if (this._resolve !== undefined) {\r\n            var triggered = true;\r\n            switch (taskStateFromInternalTaskState(this._state)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this._resolve.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    var toCall = this._reject;\r\n                    async(toCall.bind(null, this._error))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this._resolve = undefined;\r\n                this._reject = undefined;\r\n            }\r\n        }\r\n    };\r\n    UploadTask.prototype._notifyObserver = function (observer) {\r\n        var externalState = taskStateFromInternalTaskState(this._state);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n        }\r\n    };\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.resume = function () {\r\n        var valid = this._state === InternalTaskState.PAUSED ||\r\n            this._state === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this._transition(InternalTaskState.RUNNING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.pause = function () {\r\n        var valid = this._state === InternalTaskState.RUNNING;\r\n        if (valid) {\r\n            this._transition(InternalTaskState.PAUSING);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.cancel = function () {\r\n        var valid = this._state === InternalTaskState.RUNNING ||\r\n            this._state === InternalTaskState.PAUSING;\r\n        if (valid) {\r\n            this._transition(InternalTaskState.CANCELING);\r\n        }\r\n        return valid;\r\n    };\r\n    return UploadTask;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @param location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nvar Reference = /** @class */ (function () {\r\n    function Reference(_service, location) {\r\n        this._service = _service;\r\n        if (location instanceof Location) {\r\n            this._location = location;\r\n        }\r\n        else {\r\n            this._location = Location.makeFromUrl(location);\r\n        }\r\n    }\r\n    /**\r\n     * @returns The URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    Reference.prototype.toString = function () {\r\n        return 'gs://' + this._location.bucket + '/' + this._location.path;\r\n    };\r\n    Reference.prototype.newRef = function (service, location) {\r\n        return new Reference(service, location);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        /**\r\n         * @returns An reference to the root of this\r\n         *     object's bucket.\r\n         */\r\n        get: function () {\r\n            var location = new Location(this._location.bucket, '');\r\n            return this.newRef(this._service, location);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this._location.bucket;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this._location.path;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"name\", {\r\n        get: function () {\r\n            return lastComponent(this._location.path);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"storage\", {\r\n        get: function () {\r\n            return this._service;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            var newPath = parent(this._location.path);\r\n            if (newPath === null) {\r\n                return null;\r\n            }\r\n            var location = new Location(this._location.bucket, newPath);\r\n            return new Reference(this._service, location);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Reference.prototype._throwIfRoot = function (name) {\r\n        if (this._location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return Reference;\r\n}());\r\n/**\r\n * Uploads a blob to this object's location.\r\n * @public\r\n * @param ref - Storage Reference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded string.\r\n * @returns An UploadTask that lets you control and\r\n *     observe the upload.\r\n */\r\nfunction uploadBytesResumable(ref, data, metadata) {\r\n    if (metadata === void 0) { metadata = null; }\r\n    ref._throwIfRoot('uploadBytesResumable');\r\n    return new UploadTask(ref, new FbsBlob(data), metadata);\r\n}\r\n/**\r\n * Uploads a string to this object's location.\r\n * @public\r\n * @param ref - Storage Reference where string should be uploaded.\r\n * @param value - The string to upload.\r\n * @param format - The format of the string to upload.\r\n * @param metadata - Metadata for the newly uploaded object.\r\n * @returns An UploadTask that lets you control and\r\n *     observe the upload.\r\n */\r\nfunction uploadString(ref, value, format, metadata) {\r\n    if (format === void 0) { format = StringFormat.RAW; }\r\n    ref._throwIfRoot('putString');\r\n    var data = dataFromString(format, value);\r\n    var metadataClone = __assign({}, metadata);\r\n    if (metadataClone['contentType'] == null && data.contentType != null) {\r\n        metadataClone['contentType'] = data.contentType;\r\n    }\r\n    return new UploadTask(ref, new FbsBlob(data.data, true), metadataClone);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - Storage Reference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll(ref) {\r\n    var accumulator = {\r\n        prefixes: [],\r\n        items: []\r\n    };\r\n    return listAllHelper(ref, accumulator).then(function () { return accumulator; });\r\n}\r\n/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @internal\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */\r\nfunction listAllHelper(ref, accumulator, pageToken) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var opt, nextPage;\r\n        var _a, _b;\r\n        return __generator(this, function (_c) {\r\n            switch (_c.label) {\r\n                case 0:\r\n                    opt = {\r\n                        // maxResults is 1000 by default.\r\n                        pageToken: pageToken\r\n                    };\r\n                    return [4 /*yield*/, list$1(ref, opt)];\r\n                case 1:\r\n                    nextPage = _c.sent();\r\n                    (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\r\n                    (_b = accumulator.items).push.apply(_b, nextPage.items);\r\n                    if (!(nextPage.nextPageToken != null)) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, listAllHelper(ref, accumulator, nextPage.nextPageToken)];\r\n                case 2:\r\n                    _c.sent();\r\n                    _c.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - Storage Reference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list$1(ref, options) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, op, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (options != null) {\r\n                        if (typeof options.maxResults === 'number') {\r\n                            validateNumber('options.maxResults', \r\n                            /* minValue= */ 1, \r\n                            /* maxValue= */ 1000, options.maxResults);\r\n                        }\r\n                    }\r\n                    return [4 /*yield*/, ref.storage.getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    op = options || {};\r\n                    requestInfo = list(ref.storage, ref._location, \r\n                    /*delimiter= */ '/', op.pageToken, op.maxResults);\r\n                    return [2 /*return*/, ref.storage.makeRequest(requestInfo, authToken).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * A promise that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - Storage Reference to get metadata from.\r\n */\r\nfunction getMetadata$1(ref) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('getMetadata');\r\n                    return [4 /*yield*/, ref.storage.getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    requestInfo = getMetadata(ref.storage, ref._location, getMappings());\r\n                    return [2 /*return*/, ref.storage.makeRequest(requestInfo, authToken).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - Storage Reference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A promise that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */\r\nfunction updateMetadata$1(ref, metadata) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('updateMetadata');\r\n                    return [4 /*yield*/, ref.storage.getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    requestInfo = updateMetadata(ref.storage, ref._location, metadata, getMappings());\r\n                    return [2 /*return*/, ref.storage.makeRequest(requestInfo, authToken).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A promise that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL(ref) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('getDownloadURL');\r\n                    return [4 /*yield*/, ref.storage.getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\r\n                    return [2 /*return*/, ref.storage\r\n                            .makeRequest(requestInfo, authToken)\r\n                            .getPromise()\r\n                            .then(function (url) {\r\n                            if (url === null) {\r\n                                throw noDownloadURL();\r\n                            }\r\n                            return url;\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - Storage Reference for object to delete.\r\n * @returns A promise that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject$1(ref) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var authToken, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('deleteObject');\r\n                    return [4 /*yield*/, ref.storage.getAuthToken()];\r\n                case 1:\r\n                    authToken = _a.sent();\r\n                    requestInfo = deleteObject(ref.storage, ref._location);\r\n                    return [2 /*return*/, ref.storage.makeRequest(requestInfo, authToken).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n * @internal\r\n *\r\n * @param ref - Storage Reference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n */\r\nfunction getChild(ref, childPath) {\r\n    var newPath = child(ref._location.path, childPath);\r\n    var location = new Location(ref._location.bucket, newPath);\r\n    return new Reference(ref.storage, location);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UploadTaskSnapshotCompat = /** @class */ (function () {\r\n    function UploadTaskSnapshotCompat(_delegate, task, ref) {\r\n        this._delegate = _delegate;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"bytesTransferred\", {\r\n        get: function () {\r\n            return this._delegate.bytesTransferred;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"metadata\", {\r\n        get: function () {\r\n            return this._delegate.metadata;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"state\", {\r\n        get: function () {\r\n            return this._delegate.state;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"totalBytes\", {\r\n        get: function () {\r\n            return this._delegate.totalBytes;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return UploadTaskSnapshotCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UploadTaskCompat = /** @class */ (function () {\r\n    function UploadTaskCompat(_delegate, _ref) {\r\n        this._delegate = _delegate;\r\n        this._ref = _ref;\r\n        this.cancel = this._delegate.cancel.bind(this._delegate);\r\n        this.catch = this._delegate.catch.bind(this._delegate);\r\n        this.pause = this._delegate.pause.bind(this._delegate);\r\n        this.resume = this._delegate.resume.bind(this._delegate);\r\n        this._snapshot = new UploadTaskSnapshotCompat(this._delegate.snapshot, this, this._ref);\r\n    }\r\n    Object.defineProperty(UploadTaskCompat.prototype, \"snapshot\", {\r\n        get: function () {\r\n            return this._snapshot;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    UploadTaskCompat.prototype.then = function (onFulfilled, onRejected) {\r\n        var _this = this;\r\n        return this._delegate.then(function (snapshot) {\r\n            if (onFulfilled) {\r\n                return onFulfilled(new UploadTaskSnapshotCompat(snapshot, _this, _this._ref));\r\n            }\r\n        }, onRejected);\r\n    };\r\n    UploadTaskCompat.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        var _this = this;\r\n        var wrappedNextOrObserver = undefined;\r\n        if (!!nextOrObserver) {\r\n            if (typeof nextOrObserver === 'function') {\r\n                wrappedNextOrObserver = function (taskSnapshot) {\r\n                    return nextOrObserver(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\r\n                };\r\n            }\r\n            else {\r\n                wrappedNextOrObserver = {\r\n                    next: !!nextOrObserver.next\r\n                        ? function (taskSnapshot) {\r\n                            return nextOrObserver.next(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\r\n                        }\r\n                        : undefined,\r\n                    complete: nextOrObserver.complete || undefined,\r\n                    error: nextOrObserver.error || undefined\r\n                };\r\n            }\r\n        }\r\n        return this._delegate.on(type, wrappedNextOrObserver, error || undefined, completed || undefined);\r\n    };\r\n    return UploadTaskCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ListResultCompat = /** @class */ (function () {\r\n    function ListResultCompat(_delegate, _service) {\r\n        this._delegate = _delegate;\r\n        this._service = _service;\r\n    }\r\n    Object.defineProperty(ListResultCompat.prototype, \"prefixes\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this._delegate.prefixes.map(function (ref) { return new ReferenceCompat(ref, _this._service); });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ListResultCompat.prototype, \"items\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this._delegate.items.map(function (ref) { return new ReferenceCompat(ref, _this._service); });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ListResultCompat.prototype, \"nextPageToken\", {\r\n        get: function () {\r\n            return this._delegate.nextPageToken || null;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return ListResultCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *  http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ReferenceCompat = /** @class */ (function () {\r\n    function ReferenceCompat(_delegate, storage) {\r\n        this._delegate = _delegate;\r\n        this.storage = storage;\r\n    }\r\n    Object.defineProperty(ReferenceCompat.prototype, \"name\", {\r\n        get: function () {\r\n            return this._delegate.name;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this._delegate.bucket;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this._delegate.fullPath;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ReferenceCompat.prototype.toString = function () {\r\n        return this._delegate.toString();\r\n    };\r\n    /**\r\n     * @returns A reference to the object obtained by\r\n     * appending childPath, removing any duplicate, beginning, or trailing\r\n     * slashes.\r\n     */\r\n    ReferenceCompat.prototype.child = function (childPath) {\r\n        var reference = getChild(this._delegate, childPath);\r\n        return new ReferenceCompat(reference, this.storage);\r\n    };\r\n    Object.defineProperty(ReferenceCompat.prototype, \"root\", {\r\n        get: function () {\r\n            return new ReferenceCompat(this._delegate.root, this.storage);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"parent\", {\r\n        /**\r\n         * @returns A reference to the parent of the\r\n         * current object, or null if the current object is the root.\r\n         */\r\n        get: function () {\r\n            var reference = this._delegate.parent;\r\n            if (reference == null) {\r\n                return null;\r\n            }\r\n            return new ReferenceCompat(reference, this.storage);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data - The blob to upload.\r\n     * @returns An UploadTask that lets you control and\r\n     * observe the upload.\r\n     */\r\n    ReferenceCompat.prototype.put = function (data, metadata) {\r\n        this._throwIfRoot('put');\r\n        return new UploadTaskCompat(uploadBytesResumable(this._delegate, data, metadata), this);\r\n    };\r\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param value - The string to upload.\r\n     * @param format - The format of the string to upload.\r\n     * @returns An UploadTask that lets you control and\r\n     * observe the upload.\r\n     */\r\n    ReferenceCompat.prototype.putString = function (value, format, metadata) {\r\n        if (format === void 0) { format = StringFormat.RAW; }\r\n        this._throwIfRoot('putString');\r\n        return new UploadTaskCompat(uploadString(this._delegate, value, format, metadata), this);\r\n    };\r\n    /**\r\n     * List all items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * This is a helper method for calling list() repeatedly until there are\r\n     * no more results. The default pagination size is 1000.\r\n     *\r\n     * Note: The results may not be consistent if objects are changed while this\r\n     * operation is running.\r\n     *\r\n     * Warning: listAll may potentially consume too many resources if there are\r\n     * too many results.\r\n     *\r\n     * @returns A Promise that resolves with all the items and prefixes under\r\n     *  the current storage reference. `prefixes` contains references to\r\n     *  sub-directories and `items` contains references to objects in this\r\n     *  folder. `nextPageToken` is never returned.\r\n     */\r\n    ReferenceCompat.prototype.listAll = function () {\r\n        var _this = this;\r\n        return listAll(this._delegate).then(function (r) { return new ListResultCompat(r, _this.storage); });\r\n    };\r\n    /**\r\n     * List items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * List API is only available for Firebase Rules Version 2.\r\n     *\r\n     * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n     * delimited folder structure. Refer to GCS's List API if you want to learn more.\r\n     *\r\n     * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n     * support objects whose paths end with \"/\" or contain two consecutive\r\n     * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n     * list() may fail if there are too many unsupported objects in the bucket.\r\n     *\r\n     * @param options - See ListOptions for details.\r\n     * @returns A Promise that resolves with the items and prefixes.\r\n     * `prefixes` contains references to sub-folders and `items`\r\n     * contains references to objects in this folder. `nextPageToken`\r\n     * can be used to get the rest of the results.\r\n     */\r\n    ReferenceCompat.prototype.list = function (options) {\r\n        var _this = this;\r\n        return list$1(this._delegate, options).then(function (r) { return new ListResultCompat(r, _this.storage); });\r\n    };\r\n    /**\r\n     * A promise that resolves with the metadata for this object. If this\r\n     * object doesn't exist or metadata cannot be retreived, the promise is\r\n     * rejected.\r\n     */\r\n    ReferenceCompat.prototype.getMetadata = function () {\r\n        return getMetadata$1(this._delegate);\r\n    };\r\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata - The new metadata for the object.\r\n     * Only values that have been explicitly set will be changed. Explicitly\r\n     * setting a value to null will remove the metadata.\r\n     * @returns A promise that resolves\r\n     * with the new metadata for this object.\r\n     * @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\r\n    ReferenceCompat.prototype.updateMetadata = function (metadata) {\r\n        return updateMetadata$1(this._delegate, metadata);\r\n    };\r\n    /**\r\n     * @returns A promise that resolves with the download\r\n     * URL for this object.\r\n     */\r\n    ReferenceCompat.prototype.getDownloadURL = function () {\r\n        return getDownloadURL(this._delegate);\r\n    };\r\n    /**\r\n     * Deletes the object at this location.\r\n     * @returns A promise that resolves if the deletion succeeds.\r\n     */\r\n    ReferenceCompat.prototype.delete = function () {\r\n        this._throwIfRoot('delete');\r\n        return deleteObject$1(this._delegate);\r\n    };\r\n    ReferenceCompat.prototype._throwIfRoot = function (name) {\r\n        if (this._delegate._location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return ReferenceCompat;\r\n}());\n\n/**\r\n * A request whose promise always fails.\r\n */\r\nvar FailRequest = /** @class */ (function () {\r\n    function FailRequest(error) {\r\n        this.promise_ = Promise.reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.cancel = function (_appDelete) {\r\n    };\r\n    return FailRequest;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ncallback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    var waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    // TODO: find a way to exclude Node type definition for storage because storage only works in browser\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    var timeoutId = null;\r\n    var hitTimeout = false;\r\n    var cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    var triggeredCallback = false;\r\n    function triggerCallback() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, args);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        timeoutId = setTimeout(function () {\r\n            timeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    function handler(success) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (success) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\r\n            return;\r\n        }\r\n        var mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArrays([null, success], args));\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        var waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    var stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (timeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(timeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    setTimeout(function () {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar NetworkRequest = /** @class */ (function () {\r\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\r\n        var _this = this;\r\n        this.pendingXhr_ = null;\r\n        this.backoffId_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.url_ = url;\r\n        this.method_ = method;\r\n        this.headers_ = headers;\r\n        this.body_ = body;\r\n        this.successCodes_ = successCodes.slice();\r\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\r\n        this.callback_ = callback;\r\n        this.errorCallback_ = errorCallback;\r\n        this.progressCallback_ = progressCallback;\r\n        this.timeout_ = timeout;\r\n        this.pool_ = pool;\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    NetworkRequest.prototype.start_ = function () {\r\n        var self = this;\r\n        function doTheRequest(backoffCallback, canceled) {\r\n            if (canceled) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            var xhr = self.pool_.createXhrIo();\r\n            self.pendingXhr_ = xhr;\r\n            function progressListener(progressEvent) {\r\n                var loaded = progressEvent.loaded;\r\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (self.progressCallback_ !== null) {\r\n                    self.progressCallback_(loaded, total);\r\n                }\r\n            }\r\n            if (self.progressCallback_ !== null) {\r\n                xhr.addUploadProgressListener(progressListener);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            xhr\r\n                .send(self.url_, self.method_, self.body_, self.headers_)\r\n                .then(function (xhr) {\r\n                if (self.progressCallback_ !== null) {\r\n                    xhr.removeUploadProgressListener(progressListener);\r\n                }\r\n                self.pendingXhr_ = null;\r\n                xhr = xhr;\r\n                var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\r\n                var status = xhr.getStatus();\r\n                if (!hitServer || self.isRetryStatusCode_(status)) {\r\n                    var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                var successCode = self.successCodes_.indexOf(status) !== -1;\r\n                backoffCallback(true, new RequestEndStatus(successCode, xhr));\r\n            });\r\n        }\r\n        /**\r\n         * @param requestWentThrough - True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        function backoffDone(requestWentThrough, status) {\r\n            var resolve = self.resolve_;\r\n            var reject = self.reject_;\r\n            var xhr = status.xhr;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    var result = self.callback_(xhr, xhr.getResponseText());\r\n                    if (isJustDef(result)) {\r\n                        resolve(result);\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            else {\r\n                if (xhr !== null) {\r\n                    var err = unknown();\r\n                    err.serverResponse = xhr.getResponseText();\r\n                    if (self.errorCallback_) {\r\n                        reject(self.errorCallback_(xhr, err));\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        var err = self.appDelete_ ? appDeleted() : canceled();\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        var err = retryLimitExceeded();\r\n                        reject(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.cancel = function (appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingXhr_ !== null) {\r\n            this.pendingXhr_.abort();\r\n        }\r\n    };\r\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        var isFiveHundredCode = status >= 500 && status < 600;\r\n        var extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\r\n        var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    };\r\n    return NetworkRequest;\r\n}());\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */\r\nvar RequestEndStatus = /** @class */ (function () {\r\n    function RequestEndStatus(wasSuccessCode, xhr, canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.xhr = xhr;\r\n        this.canceled = !!canceled;\r\n    }\r\n    return RequestEndStatus;\r\n}());\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers) {\r\n    var version = typeof firebase !== 'undefined' ? firebase.SDK_VERSION : 'AppManager';\r\n    headers['X-Firebase-Storage-Version'] = 'webjs/' + version;\r\n}\r\nfunction addGmpidHeader_(headers, appId) {\r\n    if (appId) {\r\n        headers['X-Firebase-GMPID'] = appId;\r\n    }\r\n}\r\nfunction makeRequest(requestInfo, appId, authToken, pool) {\r\n    var queryPart = makeQueryString(requestInfo.urlParams);\r\n    var url = requestInfo.url + queryPart;\r\n    var headers = Object.assign({}, requestInfo.headers);\r\n    addGmpidHeader_(headers, appId);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isUrl(path) {\r\n    return /^[A-Za-z]+:\\/\\//.test(path);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */\r\nfunction refFromURL(service, url) {\r\n    return new Reference(service, url);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */\r\nfunction refFromPath(ref, path) {\r\n    if (ref instanceof StorageService) {\r\n        var service = ref;\r\n        if (service._bucket == null) {\r\n            throw noDefaultBucket();\r\n        }\r\n        var reference = new Reference(service, service._bucket);\r\n        if (path != null) {\r\n            return refFromPath(reference, path);\r\n        }\r\n        else {\r\n            return reference;\r\n        }\r\n    }\r\n    else {\r\n        // ref is a Reference\r\n        if (path !== undefined) {\r\n            if (path.includes('..')) {\r\n                throw invalidArgument('`path` param cannot contain \"..\"');\r\n            }\r\n            return getChild(ref, path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    }\r\n}\r\nfunction ref(serviceOrRef, pathOrUrl) {\r\n    if (pathOrUrl && isUrl(pathOrUrl)) {\r\n        if (serviceOrRef instanceof StorageService) {\r\n            return refFromURL(serviceOrRef, pathOrUrl);\r\n        }\r\n        else {\r\n            throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\r\n        }\r\n    }\r\n    else {\r\n        return refFromPath(serviceOrRef, pathOrUrl);\r\n    }\r\n}\r\nfunction extractBucket(config) {\r\n    var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\r\n    if (bucketString == null) {\r\n        return null;\r\n    }\r\n    return Location.makeFromBucketSpec(bucketString);\r\n}\r\n/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n */\r\nvar StorageService = /** @class */ (function () {\r\n    function StorageService(app, \r\n    /**\r\n     * @internal\r\n     */\r\n    _authProvider, \r\n    /**\r\n     * @internal\r\n     */\r\n    _pool, \r\n    /**\r\n     * @internal\r\n     */\r\n    _url) {\r\n        this.app = app;\r\n        this._authProvider = _authProvider;\r\n        this._pool = _pool;\r\n        this._url = _url;\r\n        /**\r\n         * @internal\r\n         */\r\n        this._bucket = null;\r\n        this._appId = null;\r\n        this._deleted = false;\r\n        this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\r\n        this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\r\n        this._requests = new Set();\r\n        if (_url != null) {\r\n            this._bucket = Location.makeFromBucketSpec(_url);\r\n        }\r\n        else {\r\n            this._bucket = extractBucket(this.app.options);\r\n        }\r\n    }\r\n    Object.defineProperty(StorageService.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this._maxUploadRetryTime;\r\n        },\r\n        set: function (time) {\r\n            validateNumber('time', \r\n            /* minValue=*/ 0, \r\n            /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n            this._maxUploadRetryTime = time;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StorageService.prototype, \"maxOperationRetryTime\", {\r\n        get: function () {\r\n            return this._maxOperationRetryTime;\r\n        },\r\n        set: function (time) {\r\n            validateNumber('time', \r\n            /* minValue=*/ 0, \r\n            /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n            this._maxOperationRetryTime = time;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    StorageService.prototype.getAuthToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var auth, tokenData;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        auth = this._authProvider.getImmediate({ optional: true });\r\n                        if (!auth) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, auth.getToken()];\r\n                    case 1:\r\n                        tokenData = _a.sent();\r\n                        if (tokenData !== null) {\r\n                            return [2 /*return*/, tokenData.accessToken];\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     * @internal\r\n     */\r\n    StorageService.prototype._delete = function () {\r\n        this._deleted = true;\r\n        this._requests.forEach(function (request) { return request.cancel(); });\r\n        this._requests.clear();\r\n        return Promise.resolve();\r\n    };\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n     * at the given Location.\r\n     */\r\n    StorageService.prototype.makeStorageReference = function (loc) {\r\n        return new Reference(this, loc);\r\n    };\r\n    /**\r\n     * @internal\r\n     * @param requestInfo - HTTP RequestInfo object\r\n     * @param authToken - Firebase auth token\r\n     */\r\n    StorageService.prototype.makeRequest = function (requestInfo, authToken) {\r\n        var _this = this;\r\n        if (!this._deleted) {\r\n            var request_1 = makeRequest(requestInfo, this._appId, authToken, this._pool);\r\n            this._requests.add(request_1);\r\n            // Request removes itself from set when complete.\r\n            request_1.getPromise().then(function () { return _this._requests.delete(request_1); }, function () { return _this._requests.delete(request_1); });\r\n            return request_1;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    };\r\n    return StorageService;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n */\r\nvar StorageServiceCompat = /** @class */ (function () {\r\n    function StorageServiceCompat(app, _delegate) {\r\n        var _this = this;\r\n        this.app = app;\r\n        this._delegate = _delegate;\r\n        this.INTERNAL = {\r\n            /**\r\n             * Called when the associated app is deleted.\r\n             */\r\n            delete: function () {\r\n                return _this._delegate._delete();\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(StorageServiceCompat.prototype, \"maxOperationRetryTime\", {\r\n        get: function () {\r\n            return this._delegate.maxOperationRetryTime;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StorageServiceCompat.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this._delegate.maxUploadRetryTime;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\r\n    StorageServiceCompat.prototype.ref = function (path) {\r\n        if (isUrl(path)) {\r\n            throw invalidArgument('ref() expected a child path but got a URL, use refFromURL instead.');\r\n        }\r\n        return new ReferenceCompat(ref(this._delegate, path), this);\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\r\n    StorageServiceCompat.prototype.refFromURL = function (url) {\r\n        if (!isUrl(url)) {\r\n            throw invalidArgument('refFromURL() expected a full URL but got a child path, use ref() instead.');\r\n        }\r\n        try {\r\n            Location.makeFromUrl(url);\r\n        }\r\n        catch (e) {\r\n            throw invalidArgument('refFromUrl() expected a valid full URL but got an invalid one.');\r\n        }\r\n        return new ReferenceCompat(ref(this._delegate, url), this);\r\n    };\r\n    StorageServiceCompat.prototype.setMaxUploadRetryTime = function (time) {\r\n        this._delegate.maxUploadRetryTime = time;\r\n    };\r\n    StorageServiceCompat.prototype.setMaxOperationRetryTime = function (time) {\r\n        this._delegate.maxOperationRetryTime = time;\r\n    };\r\n    return StorageServiceCompat;\r\n}());\n\nvar name = \"@firebase/storage\";\nvar version = \"0.4.2\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nvar STORAGE_TYPE = 'storage';\r\nfunction factory(container, url) {\r\n    // Dependencies\r\n    // TODO: This should eventually be 'app-compat'\r\n    var app = container.getProvider('app').getImmediate();\r\n    var authProvider = container.getProvider('auth-internal');\r\n    // TODO: get StorageService instance from component framework instead\r\n    // of creating a new one.\r\n    var storageServiceCompat = new StorageServiceCompat(app, new StorageService(app, authProvider, new XhrIoPool(), url));\r\n    return storageServiceCompat;\r\n}\r\nfunction registerStorage(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        TaskState: TaskState,\r\n        TaskEvent: TaskEvent,\r\n        StringFormat: StringFormat,\r\n        Storage: StorageService,\r\n        Reference: ReferenceCompat\r\n    };\r\n    instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterStorage(firebase);\n\nexport { registerStorage };\n//# sourceMappingURL=index.esm.js.map\n","import '@firebase/storage';\n//# sourceMappingURL=index.esm.js.map\n"]}}