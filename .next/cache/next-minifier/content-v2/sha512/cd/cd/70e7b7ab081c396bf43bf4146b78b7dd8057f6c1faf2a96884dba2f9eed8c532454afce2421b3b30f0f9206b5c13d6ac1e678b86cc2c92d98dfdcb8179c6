{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[13],{iTTW:function(e,t,n){\"use strict\";n.r(t);var r=n(\"zIRd\"),i=n(\"mrSG\"),o=n(\"/6Yf\"),s={OK:\"ok\",CANCELLED:\"cancelled\",UNKNOWN:\"unknown\",INVALID_ARGUMENT:\"invalid-argument\",DEADLINE_EXCEEDED:\"deadline-exceeded\",NOT_FOUND:\"not-found\",ALREADY_EXISTS:\"already-exists\",PERMISSION_DENIED:\"permission-denied\",UNAUTHENTICATED:\"unauthenticated\",RESOURCE_EXHAUSTED:\"resource-exhausted\",FAILED_PRECONDITION:\"failed-precondition\",ABORTED:\"aborted\",OUT_OF_RANGE:\"out-of-range\",UNIMPLEMENTED:\"unimplemented\",INTERNAL:\"internal\",UNAVAILABLE:\"unavailable\",DATA_LOSS:\"data-loss\"},a=function(e){function t(n,r,i){var o=e.call(this,r)||this;return Object.setPrototypeOf(o,t.prototype),o.code=n,o.details=i,o}return Object(i.c)(t,e),t}(Error);var u=function(){function e(e,t){var n=this;this.auth=null,this.messaging=null,this.auth=e.getImmediate({optional:!0}),this.messaging=t.getImmediate({optional:!0}),this.auth||e.get().then((function(e){return n.auth=e}),(function(){})),this.messaging||t.get().then((function(e){return n.messaging=e}),(function(){}))}return e.prototype.getAuthToken=function(){return Object(i.b)(this,void 0,void 0,(function(){var e;return Object(i.d)(this,(function(t){switch(t.label){case 0:if(!this.auth)return[2,void 0];t.label=1;case 1:return t.trys.push([1,3,,4]),[4,this.auth.getToken()];case 2:return(e=t.sent())?[2,e.accessToken]:[2,void 0];case 3:return t.sent(),[2,void 0];case 4:return[2]}}))}))},e.prototype.getInstanceIdToken=function(){return Object(i.b)(this,void 0,void 0,(function(){return Object(i.d)(this,(function(e){if(!this.messaging||!(\"Notification\"in self)||\"granted\"!==Notification.permission)return[2,void 0];try{return[2,this.messaging.getToken()]}catch(t){return[2,void 0]}return[2]}))}))},e.prototype.getContext=function(){return Object(i.b)(this,void 0,void 0,(function(){var e,t;return Object(i.d)(this,(function(n){switch(n.label){case 0:return[4,this.getAuthToken()];case 1:return e=n.sent(),[4,this.getInstanceIdToken()];case 2:return t=n.sent(),[2,{authToken:e,instanceIdToken:t}]}}))}))},e}();function c(e,t){var n={};for(var r in e)e.hasOwnProperty(r)&&(n[r]=t(e[r]));return n}var l=function(){function e(){}return e.prototype.encode=function(e){var t=this;if(null==e)return null;if(e instanceof Number&&(e=e.valueOf()),\"number\"===typeof e&&isFinite(e))return e;if(!0===e||!1===e)return e;if(\"[object String]\"===Object.prototype.toString.call(e))return e;if(Array.isArray(e))return e.map((function(e){return t.encode(e)}));if(\"function\"===typeof e||\"object\"===typeof e)return c(e,(function(e){return t.encode(e)}));throw new Error(\"Data cannot be encoded in JSON: \"+e)},e.prototype.decode=function(e){var t=this;if(null==e)return e;if(e[\"@type\"])switch(e[\"@type\"]){case\"type.googleapis.com/google.protobuf.Int64Value\":case\"type.googleapis.com/google.protobuf.UInt64Value\":var n=Number(e.value);if(isNaN(n))throw new Error(\"Data cannot be decoded from JSON: \"+e);return n;default:throw new Error(\"Data cannot be decoded from JSON: \"+e)}return Array.isArray(e)?e.map((function(e){return t.decode(e)})):\"function\"===typeof e||\"object\"===typeof e?c(e,(function(e){return t.decode(e)})):e},e}();var d=function(){function e(e,t,n,r,i){var o=this;void 0===r&&(r=\"us-central1\"),this.app_=e,this.fetchImpl=i,this.serializer=new l,this.emulatorOrigin=null,this.INTERNAL={delete:function(){return Promise.resolve(o.deleteService())}},this.contextProvider=new u(t,n),this.cancelAllRequests=new Promise((function(e){o.deleteService=function(){return e()}}));try{var s=new URL(r);this.customDomain=s.origin,this.region=\"us-central1\"}catch(a){this.customDomain=null,this.region=r}}return Object.defineProperty(e.prototype,\"app\",{get:function(){return this.app_},enumerable:!1,configurable:!0}),e.prototype._url=function(e){var t=this.app_.options.projectId;return null!==this.emulatorOrigin?this.emulatorOrigin+\"/\"+t+\"/\"+this.region+\"/\"+e:null!==this.customDomain?this.customDomain+\"/\"+e:\"https://\"+this.region+\"-\"+t+\".cloudfunctions.net/\"+e},e.prototype.useEmulator=function(e,t){this.emulatorOrigin=\"http://\"+e+\":\"+t},e.prototype.useFunctionsEmulator=function(e){this.emulatorOrigin=e},e.prototype.httpsCallable=function(e,t){var n=this;return function(r){return n.call(e,r,t||{})}},e.prototype.postJSON=function(e,t,n){return Object(i.b)(this,void 0,void 0,(function(){var r,o;return Object(i.d)(this,(function(i){switch(i.label){case 0:n[\"Content-Type\"]=\"application/json\",i.label=1;case 1:return i.trys.push([1,3,,4]),[4,this.fetchImpl(e,{method:\"POST\",body:JSON.stringify(t),headers:n})];case 2:return r=i.sent(),[3,4];case 3:return i.sent(),[2,{status:0,json:null}];case 4:o=null,i.label=5;case 5:return i.trys.push([5,7,,8]),[4,r.json()];case 6:return o=i.sent(),[3,8];case 7:return i.sent(),[3,8];case 8:return[2,{status:r.status,json:o}]}}))}))},e.prototype.call=function(e,t,n){return Object(i.b)(this,void 0,void 0,(function(){var r,o,u,c,l,d,h,p,m,g,v;return Object(i.d)(this,(function(i){switch(i.label){case 0:return r=this._url(e),t=this.serializer.encode(t),o={data:t},u={},[4,this.contextProvider.getContext()];case 1:return(c=i.sent()).authToken&&(u.Authorization=\"Bearer \"+c.authToken),c.instanceIdToken&&(u[\"Firebase-Instance-ID-Token\"]=c.instanceIdToken),l=n.timeout||7e4,d=function(e){var t,n=new Promise((function(n,r){t=setTimeout((function(){r(new a(\"deadline-exceeded\",\"deadline-exceeded\"))}),e)}));return{timer:t,promise:n}}(l),h=d.timer,p=d.promise,[4,Promise.race([f(h,this.postJSON(r,o,u)),p,f(h,this.cancelAllRequests)])];case 2:if(!(m=i.sent()))throw new a(\"cancelled\",\"Firebase Functions instance was deleted.\");if(g=function(e,t,n){var r=function(e){if(e>=200&&e<300)return\"ok\";switch(e){case 0:return\"internal\";case 400:return\"invalid-argument\";case 401:return\"unauthenticated\";case 403:return\"permission-denied\";case 404:return\"not-found\";case 409:return\"aborted\";case 429:return\"resource-exhausted\";case 499:return\"cancelled\";case 500:return\"internal\";case 501:return\"unimplemented\";case 503:return\"unavailable\";case 504:return\"deadline-exceeded\"}return\"unknown\"}(e),i=r,o=void 0;try{var u=t&&t.error;if(u){var c=u.status;if(\"string\"===typeof c){if(!s[c])return new a(\"internal\",\"internal\");r=s[c],i=c}var l=u.message;\"string\"===typeof l&&(i=l),void 0!==(o=u.details)&&(o=n.decode(o))}}catch(d){}return\"ok\"===r?null:new a(r,i,o)}(m.status,m.json,this.serializer))throw g;if(!m.json)throw new a(\"internal\",\"Response is not valid JSON object.\");if(\"undefined\"===typeof(v=m.json.data)&&(v=m.json.result),\"undefined\"===typeof v)throw new a(\"internal\",\"Response is missing data field.\");return[2,{data:this.serializer.decode(v)}]}}))}))},e}();function f(e,t){return Object(i.b)(this,void 0,void 0,(function(){var n;return Object(i.d)(this,(function(r){switch(r.label){case 0:return[4,t];case 1:return n=r.sent(),clearTimeout(e),[2,n]}}))}))}!function(e,t){var n={Functions:d};e.INTERNAL.registerComponent(new o.a(\"functions\",(function(e,n){var r=e.getProvider(\"app\").getImmediate(),i=e.getProvider(\"auth-internal\"),o=e.getProvider(\"messaging\");return new d(r,i,o,n,t)}),\"PUBLIC\").setServiceProps(n).setMultipleInstances(!0))}(r.a,fetch.bind(self)),r.a.registerVersion(\"@firebase/functions\",\"0.6.1\")}}]);","map":{"version":3,"sources":["static/chunks/functions.7263313db610f12662e1.js"],"names":["window","push","iTTW","module","__webpack_exports__","__webpack_require__","r","index_esm","tslib_es6","dist_index_esm","errorCodeMap","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","UNAUTHENTICATED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","index_esm_HttpsErrorImpl","_super","HttpsErrorImpl","code","message","details","_this","call","this","Object","setPrototypeOf","prototype","Error","index_esm_ContextProvider","ContextProvider","authProvider","messagingProvider","auth","messaging","getImmediate","optional","get","then","getAuthToken","token","_a","label","undefined","trys","getToken","sent","accessToken","getInstanceIdToken","self","Notification","permission","e","getContext","authToken","instanceIdToken","mapValues","o","f","result","key","hasOwnProperty","Serializer","encode","data","Number","valueOf","isFinite","toString","Array","isArray","map","x","decode","json","value","isNaN","index_esm_Service","Service","app_","regionOrCustomDomain_","fetchImpl","serializer","emulatorOrigin","delete","Promise","resolve","deleteService","contextProvider","cancelAllRequests","url","URL","customDomain","origin","region","defineProperty","enumerable","configurable","_url","name","projectId","options","useEmulator","host","port","useFunctionsEmulator","httpsCallable","postJSON","body","headers","response","method","JSON","stringify","status","context","timeout","timer","failAfterPromise","error","responseData","_b","millis","promise","_","reject","setTimeout","failAfter","race","clearTimeoutWrapper","bodyJSON","codeForHTTPStatus","description","errorJSON","status_1","_errorForResponse","clearTimeout","instance","namespaceExports","Functions","registerComponent","container","regionOrCustomDomain","app","getProvider","setServiceProps","setMultipleInstances","registerFunctions","fetch","bind","registerVersion"],"mappings":"CAACA,OAAyB,iBAAIA,OAAyB,kBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAErEC,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,aAEAA,EAAoBC,EAAEF,GAGtB,IAAIG,EAAYF,EAAoB,QAGhCG,EAAYH,EAAoB,QAGhCI,EAAiBJ,EAAoB,QA8BrCK,EAAe,CACfC,GAAI,KACJC,UAAW,YACXC,QAAS,UACTC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,UAAW,YACXC,eAAgB,iBAChBC,kBAAmB,oBACnBC,gBAAiB,kBACjBC,mBAAoB,qBACpBC,oBAAqB,sBACrBC,QAAS,UACTC,aAAc,eACdC,cAAe,gBACfC,SAAU,WACVC,YAAa,cACbC,UAAW,aAMXC,EAA0C,SAAUC,GAEpD,SAASC,EAAeC,EAAMC,EAASC,GACnC,IAAIC,EAAQL,EAAOM,KAAKC,KAAMJ,IAAYI,KAO1C,OAHAC,OAAOC,eAAeJ,EAAOJ,EAAeS,WAC5CL,EAAMH,KAAOA,EACbG,EAAMD,QAAUA,EACTC,EAEX,OAXAG,OAAO7B,EAA6B,EAApC6B,CAAuCP,EAAgBD,GAWhDC,EAZkC,CAa3CU,OA2FF,IAAIC,EAA2C,WAC3C,SAASC,EAAgBC,EAAcC,GACnC,IAAIV,EAAQE,KACZA,KAAKS,KAAO,KACZT,KAAKU,UAAY,KACjBV,KAAKS,KAAOF,EAAaI,aAAa,CAAEC,UAAU,IAClDZ,KAAKU,UAAYF,EAAkBG,aAAa,CAC5CC,UAAU,IAETZ,KAAKS,MACNF,EAAaM,MAAMC,MAAK,SAAUL,GAAQ,OAAQX,EAAMW,KAAOA,KAAU,eAIxET,KAAKU,WACNF,EAAkBK,MAAMC,MAAK,SAAUJ,GAAa,OAAQZ,EAAMY,UAAYA,KAAe,eAsErG,OAjEAJ,EAAgBH,UAAUY,aAAe,WACrC,OAAOd,OAAO7B,EAA6B,EAApC6B,CAAuCD,UAAM,OAAQ,GAAQ,WAChE,IAAIgB,EACJ,OAAOf,OAAO7B,EAA+B,EAAtC6B,CAAyCD,MAAM,SAAUiB,GAC5D,OAAQA,EAAGC,OACP,KAAK,EACD,IAAKlB,KAAKS,KACN,MAAO,CAAC,OAAcU,GAE1BF,EAAGC,MAAQ,EACf,KAAK,EAED,OADAD,EAAGG,KAAKvD,KAAK,CAAC,EAAG,EAAG,CAAE,IACf,CAAC,EAAamC,KAAKS,KAAKY,YACnC,KAAK,EAED,OADAL,EAAQC,EAAGK,QAIJ,CAAC,EAAcN,EAAMO,aAFjB,CAAC,OAAcJ,GAG9B,KAAK,EAGD,OAFMF,EAAGK,OAEF,CAAC,OAAcH,GAC1B,KAAK,EAAG,MAAO,CAAC,WAKhCb,EAAgBH,UAAUqB,mBAAqB,WAC3C,OAAOvB,OAAO7B,EAA6B,EAApC6B,CAAuCD,UAAM,OAAQ,GAAQ,WAChE,OAAOC,OAAO7B,EAA+B,EAAtC6B,CAAyCD,MAAM,SAAUiB,GAC5D,IAAKjB,KAAKU,aACJ,iBAAkBe,OACQ,YAA5BC,aAAaC,WACb,MAAO,CAAC,OAAcR,GAE1B,IACI,MAAO,CAAC,EAAcnB,KAAKU,UAAUW,YAEzC,MAAOO,GAIH,MAAO,CAAC,OAAcT,GAE1B,MAAO,CAAC,UAIpBb,EAAgBH,UAAU0B,WAAa,WACnC,OAAO5B,OAAO7B,EAA6B,EAApC6B,CAAuCD,UAAM,OAAQ,GAAQ,WAChE,IAAI8B,EAAWC,EACf,OAAO9B,OAAO7B,EAA+B,EAAtC6B,CAAyCD,MAAM,SAAUiB,GAC5D,OAAQA,EAAGC,OACP,KAAK,EAAG,MAAO,CAAC,EAAalB,KAAKe,gBAClC,KAAK,EAED,OADAe,EAAYb,EAAGK,OACR,CAAC,EAAatB,KAAKwB,sBAC9B,KAAK,EAED,OADAO,EAAkBd,EAAGK,OACd,CAAC,EAAc,CAAEQ,UAAWA,EAAWC,gBAAiBA,YAK5EzB,EArFmC,GA0G9C,SAAS0B,EAGTC,EAAGC,GACC,IAAIC,EAAS,GACb,IAAK,IAAIC,KAAOH,EACRA,EAAEI,eAAeD,KACjBD,EAAOC,GAAOF,EAAED,EAAEG,KAG1B,OAAOD,EAEX,IAAIG,EAA4B,WAC5B,SAASA,KAmET,OA/DAA,EAAWnC,UAAUoC,OAAS,SAAUC,GACpC,IAAI1C,EAAQE,KACZ,GAAY,MAARwC,EACA,OAAO,KAKX,GAHIA,aAAgBC,SAChBD,EAAOA,EAAKE,WAEI,kBAATF,GAAqBG,SAASH,GAGrC,OAAOA,EAEX,IAAa,IAATA,IAA0B,IAATA,EACjB,OAAOA,EAEX,GAA6C,oBAAzCvC,OAAOE,UAAUyC,SAAS7C,KAAKyC,GAC/B,OAAOA,EAEX,GAAIK,MAAMC,QAAQN,GACd,OAAOA,EAAKO,KAAI,SAAUC,GAAK,OAAOlD,EAAMyC,OAAOS,MAEvD,GAAoB,oBAATR,GAAuC,kBAATA,EACrC,OAAOR,EAAUQ,GAAM,SAAUQ,GAAK,OAAOlD,EAAMyC,OAAOS,MAG9D,MAAM,IAAI5C,MAAM,mCAAqCoC,IAIzDF,EAAWnC,UAAU8C,OAAS,SAAUC,GACpC,IAAIpD,EAAQE,KACZ,GAAY,MAARkD,EACA,OAAOA,EAEX,GAAIA,EAAK,SACL,OAAQA,EAAK,UACT,IAxDA,iDA0DA,IAzDS,kDA6DL,IAAIC,EAAQV,OAAOS,EAAY,OAC/B,GAAIE,MAAMD,GACN,MAAM,IAAI/C,MAAM,qCAAuC8C,GAE3D,OAAOC,EAEX,QACI,MAAM,IAAI/C,MAAM,qCAAuC8C,GAInE,OAAIL,MAAMC,QAAQI,GACPA,EAAKH,KAAI,SAAUC,GAAK,OAAOlD,EAAMmD,OAAOD,MAEnC,oBAATE,GAAuC,kBAATA,EAC9BlB,EAAUkB,GAAM,SAAUF,GAAK,OAAOlD,EAAMmD,OAAOD,MAGvDE,GAEJZ,EApEoB,GA4G/B,IAAIe,EAAmC,WAQnC,SAASC,EAAQC,EAAMhD,EAAcC,EAAmBgD,EAAuBC,GAC3E,IAAI3D,EAAQE,UACkB,IAA1BwD,IAAoCA,EAAwB,eAChExD,KAAKuD,KAAOA,EACZvD,KAAKyD,UAAYA,EACjBzD,KAAK0D,WAAa,IAAIpB,EACtBtC,KAAK2D,eAAiB,KACtB3D,KAAKX,SAAW,CACZuE,OAAQ,WACJ,OAAOC,QAAQC,QAAQhE,EAAMiE,mBAGrC/D,KAAKgE,gBAAkB,IAAI3D,EAA0BE,EAAcC,GAEnER,KAAKiE,kBAAoB,IAAIJ,SAAQ,SAAUC,GAC3ChE,EAAMiE,cAAgB,WAClB,OAAOD,QAIf,IACI,IAAII,EAAM,IAAIC,IAAIX,GAClBxD,KAAKoE,aAAeF,EAAIG,OACxBrE,KAAKsE,OAAS,cAElB,MAAO1C,GACH5B,KAAKoE,aAAe,KACpBpE,KAAKsE,OAASd,GA6KtB,OA1KAvD,OAAOsE,eAAejB,EAAQnD,UAAW,MAAO,CAC5CU,IAAK,WACD,OAAOb,KAAKuD,MAEhBiB,YAAY,EACZC,cAAc,IAMlBnB,EAAQnD,UAAUuE,KAAO,SAAUC,GAC/B,IAAIC,EAAY5E,KAAKuD,KAAKsB,QAAQD,UAClC,OAA4B,OAAxB5E,KAAK2D,eACU3D,KAAK2D,eACF,IAAMiB,EAAY,IAAM5E,KAAKsE,OAAS,IAAMK,EAExC,OAAtB3E,KAAKoE,aACEpE,KAAKoE,aAAe,IAAMO,EAE9B,WAAa3E,KAAKsE,OAAS,IAAMM,EAAY,uBAAyBD,GAUjFrB,EAAQnD,UAAU2E,YAAc,SAAUC,EAAMC,GAC5ChF,KAAK2D,eAAiB,UAAYoB,EAAO,IAAMC,GAUnD1B,EAAQnD,UAAU8E,qBAAuB,SAAUZ,GAC/CrE,KAAK2D,eAAiBU,GAM1Bf,EAAQnD,UAAU+E,cAAgB,SAAUP,EAAME,GAC9C,IAAI/E,EAAQE,KACZ,OAAO,SAAUwC,GACb,OAAO1C,EAAMC,KAAK4E,EAAMnC,EAAMqC,GAAW,MAUjDvB,EAAQnD,UAAUgF,SAAW,SAAUjB,EAAKkB,EAAMC,GAC9C,OAAOpF,OAAO7B,EAA6B,EAApC6B,CAAuCD,UAAM,OAAQ,GAAQ,WAChE,IAAIsF,EAAepC,EACnB,OAAOjD,OAAO7B,EAA+B,EAAtC6B,CAAyCD,MAAM,SAAUiB,GAC5D,OAAQA,EAAGC,OACP,KAAK,EACDmE,EAAQ,gBAAkB,mBAC1BpE,EAAGC,MAAQ,EACf,KAAK,EAED,OADAD,EAAGG,KAAKvD,KAAK,CAAC,EAAG,EAAG,CAAE,IACf,CAAC,EAAamC,KAAKyD,UAAUS,EAAK,CACjCqB,OAAQ,OACRH,KAAMI,KAAKC,UAAUL,GACrBC,QAASA,KAErB,KAAK,EAED,OADAC,EAAWrE,EAAGK,OACP,CAAC,EAAa,GACzB,KAAK,EAMD,OALML,EAAGK,OAKF,CAAC,EAAc,CACdoE,OAAQ,EACRxC,KAAM,OAElB,KAAK,EACDA,EAAO,KACPjC,EAAGC,MAAQ,EACf,KAAK,EAED,OADAD,EAAGG,KAAKvD,KAAK,CAAC,EAAG,EAAG,CAAE,IACf,CAAC,EAAayH,EAASpC,QAClC,KAAK,EAED,OADAA,EAAOjC,EAAGK,OACH,CAAC,EAAa,GACzB,KAAK,EAED,OADML,EAAGK,OACF,CAAC,EAAa,GACzB,KAAK,EAAG,MAAO,CAAC,EAAc,CACtBoE,OAAQJ,EAASI,OACjBxC,KAAMA,YAW9BI,EAAQnD,UAAUJ,KAAO,SAAU4E,EAAMnC,EAAMqC,GAC3C,OAAO5E,OAAO7B,EAA6B,EAApC6B,CAAuCD,UAAM,OAAQ,GAAQ,WAChE,IAAIkE,EAAKkB,EAAMC,EAASM,EAASC,EAAS3E,EAAI4E,EAAOC,EAAkBR,EAAUS,EAAOC,EACxF,OAAO/F,OAAO7B,EAA+B,EAAtC6B,CAAyCD,MAAM,SAAUiG,GAC5D,OAAQA,EAAG/E,OACP,KAAK,EAMD,OALAgD,EAAMlE,KAAK0E,KAAKC,GAEhBnC,EAAOxC,KAAK0D,WAAWnB,OAAOC,GAC9B4C,EAAO,CAAE5C,KAAMA,GACf6C,EAAU,GACH,CAAC,EAAarF,KAAKgE,gBAAgBnC,cAC9C,KAAK,EAUD,OATA8D,EAAUM,EAAG3E,QACDQ,YACRuD,EAAuB,cAAI,UAAYM,EAAQ7D,WAE/C6D,EAAQ5D,kBACRsD,EAAQ,8BAAgCM,EAAQ5D,iBAEpD6D,EAAUf,EAAQe,SAAW,IAC7B3E,EA5LxB,SAAmBiF,GACf,IAAIL,EACAM,EAAU,IAAItC,SAAQ,SAAUuC,EAAGC,GACnCR,EAAQS,YAAW,WACfD,EAAO,IAAI7G,EAAyB,oBAAqB,wBAC1D0G,MAEP,MAAO,CACHL,MAAOA,EACPM,QAASA,GAmLYI,CAAUX,GAAUC,EAAQ5E,EAAG4E,MAAOC,EAAmB7E,EAAGkF,QAC1D,CAAC,EAAatC,QAAQ2C,KAAK,CAC1BC,EAAoBZ,EAAO7F,KAAKmF,SAASjB,EAAKkB,EAAMC,IACpDS,EACAW,EAAoBZ,EAAO7F,KAAKiE,sBAE5C,KAAK,EAGD,KAFAqB,EAAWW,EAAG3E,QAGV,MAAM,IAAI9B,EAAyB,YAAa,4CAGpD,GADAuG,EAxcxB,SAA2BL,EAAQgB,EAAUhD,GACzC,IAAI/D,EAtCR,SAA2B+F,GAEvB,GAAIA,GAAU,KAAOA,EAAS,IAC1B,MAAO,KAEX,OAAQA,GACJ,KAAK,EAED,MAAO,WACX,KAAK,IACD,MAAO,mBACX,KAAK,IACD,MAAO,kBACX,KAAK,IACD,MAAO,oBACX,KAAK,IACD,MAAO,YACX,KAAK,IACD,MAAO,UACX,KAAK,IACD,MAAO,qBACX,KAAK,IACD,MAAO,YACX,KAAK,IACD,MAAO,WACX,KAAK,IACD,MAAO,gBACX,KAAK,IACD,MAAO,cACX,KAAK,IACD,MAAO,oBAEf,MAAO,UAMIiB,CAAkBjB,GAEzBkB,EAAcjH,EACdE,OAAUsB,EAEd,IACI,IAAI0F,EAAYH,GAAYA,EAASX,MACrC,GAAIc,EAAW,CACX,IAAIC,EAAWD,EAAUnB,OACzB,GAAwB,kBAAboB,EAAuB,CAC9B,IAAKxI,EAAawI,GAEd,OAAO,IAAItH,EAAyB,WAAY,YAEpDG,EAAOrB,EAAawI,GAGpBF,EAAcE,EAElB,IAAIlH,EAAUiH,EAAUjH,QACD,kBAAZA,IACPgH,EAAchH,QAGFuB,KADhBtB,EAAUgH,EAAUhH,WAEhBA,EAAU6D,EAAWT,OAAOpD,KAIxC,MAAO+B,IAGP,MAAa,OAATjC,EAIO,KAEJ,IAAIH,EAAyBG,EAAMiH,EAAa/G,GAia3BkH,CAAkBzB,EAASI,OAAQJ,EAASpC,KAAMlD,KAAK0D,YAE3D,MAAMqC,EAEV,IAAKT,EAASpC,KACV,MAAM,IAAI1D,EAAyB,WAAY,sCAQnD,GAH4B,qBAH5BwG,EAAeV,EAASpC,KAAKV,QAIzBwD,EAAeV,EAASpC,KAAKf,QAEL,qBAAjB6D,EAEP,MAAM,IAAIxG,EAAyB,WAAY,mCAGnD,MAAO,CAAC,EAAc,CAAEgD,KADVxC,KAAK0D,WAAWT,OAAO+C,aAMlD1C,EAhN2B,GAkNtC,SAASmD,EAAoBZ,EAAOM,GAChC,OAAOlG,OAAO7B,EAA6B,EAApC6B,CAAuCD,UAAM,OAAQ,GAAQ,WAChE,IAAImC,EACJ,OAAOlC,OAAO7B,EAA+B,EAAtC6B,CAAyCD,MAAM,SAAUiB,GAC5D,OAAQA,EAAGC,OACP,KAAK,EAAG,MAAO,CAAC,EAAaiF,GAC7B,KAAK,EAID,OAHAhE,EAASlB,EAAGK,OAEZ0F,aAAanB,GACN,CAAC,EAAc1D,WA0B1C,SAA2B8E,EAAUxD,GACjC,IAAIyD,EAAmB,CAEnBC,UAAW9D,GAUf4D,EAAS5H,SAAS+H,kBAAkB,IAAI/I,EAAkC,EAdzD,aAMjB,SAAiBgJ,EAAWC,GAExB,IAAIC,EAAMF,EAAUG,YAAY,OAAO7G,eACnCJ,EAAe8G,EAAUG,YAAY,iBACrChH,EAAoB6G,EAAUG,YAAY,aAE9C,OAAO,IAAInE,EAAkBkE,EAAKhH,EAAcC,EAAmB8G,EAAsB7D,KAEQ,UAChGgE,gBAAgBP,GAChBQ,sBAAqB,IAsB9BC,CAAkBxJ,EAA2B,EAAGyJ,MAAMC,KAAKpG,OAC3DtD,EAA2B,EAAE2J,gBApBR,sBACP"},"name":"static/chunks/functions.7263313db610f12662e1.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[13],{\n\n/***/ \"iTTW\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/@firebase/app/dist/index.esm.js\nvar index_esm = __webpack_require__(\"zIRd\");\n\n// EXTERNAL MODULE: ./node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(\"mrSG\");\n\n// EXTERNAL MODULE: ./node_modules/@firebase/component/dist/index.esm.js\nvar dist_index_esm = __webpack_require__(\"/6Yf\");\n\n// CONCATENATED MODULE: ./node_modules/@firebase/functions/dist/index.esm.js\n\n\n\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Standard error codes for different ways a request can fail, as defined by:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * This map is used primarily to convert from a backend error code string to\r\n * a client SDK error code string, and make sure it's in the supported set.\r\n */\r\nvar errorCodeMap = {\r\n    OK: 'ok',\r\n    CANCELLED: 'cancelled',\r\n    UNKNOWN: 'unknown',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    DEADLINE_EXCEEDED: 'deadline-exceeded',\r\n    NOT_FOUND: 'not-found',\r\n    ALREADY_EXISTS: 'already-exists',\r\n    PERMISSION_DENIED: 'permission-denied',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    RESOURCE_EXHAUSTED: 'resource-exhausted',\r\n    FAILED_PRECONDITION: 'failed-precondition',\r\n    ABORTED: 'aborted',\r\n    OUT_OF_RANGE: 'out-of-range',\r\n    UNIMPLEMENTED: 'unimplemented',\r\n    INTERNAL: 'internal',\r\n    UNAVAILABLE: 'unavailable',\r\n    DATA_LOSS: 'data-loss'\r\n};\r\n/**\r\n * An explicit error that can be thrown from a handler to send an error to the\r\n * client that called the function.\r\n */\r\nvar index_esm_HttpsErrorImpl = /** @class */ (function (_super) {\r\n    Object(tslib_es6[\"c\" /* __extends */])(HttpsErrorImpl, _super);\r\n    function HttpsErrorImpl(code, message, details) {\r\n        var _this = _super.call(this, message) || this;\r\n        // This is a workaround for a bug in TypeScript when extending Error:\r\n        // tslint:disable-next-line\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(_this, HttpsErrorImpl.prototype);\r\n        _this.code = code;\r\n        _this.details = details;\r\n        return _this;\r\n    }\r\n    return HttpsErrorImpl;\r\n}(Error));\r\n/**\r\n * Takes an HTTP status code and returns the corresponding ErrorCode.\r\n * This is the standard HTTP status code -> error mapping defined in:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * @param status An HTTP status code.\r\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\r\n */\r\nfunction codeForHTTPStatus(status) {\r\n    // Make sure any successful status is OK.\r\n    if (status >= 200 && status < 300) {\r\n        return 'ok';\r\n    }\r\n    switch (status) {\r\n        case 0:\r\n            // This can happen if the server returns 500.\r\n            return 'internal';\r\n        case 400:\r\n            return 'invalid-argument';\r\n        case 401:\r\n            return 'unauthenticated';\r\n        case 403:\r\n            return 'permission-denied';\r\n        case 404:\r\n            return 'not-found';\r\n        case 409:\r\n            return 'aborted';\r\n        case 429:\r\n            return 'resource-exhausted';\r\n        case 499:\r\n            return 'cancelled';\r\n        case 500:\r\n            return 'internal';\r\n        case 501:\r\n            return 'unimplemented';\r\n        case 503:\r\n            return 'unavailable';\r\n        case 504:\r\n            return 'deadline-exceeded';\r\n    }\r\n    return 'unknown';\r\n}\r\n/**\r\n * Takes an HTTP response and returns the corresponding Error, if any.\r\n */\r\nfunction _errorForResponse(status, bodyJSON, serializer) {\r\n    var code = codeForHTTPStatus(status);\r\n    // Start with reasonable defaults from the status code.\r\n    var description = code;\r\n    var details = undefined;\r\n    // Then look through the body for explicit details.\r\n    try {\r\n        var errorJSON = bodyJSON && bodyJSON.error;\r\n        if (errorJSON) {\r\n            var status_1 = errorJSON.status;\r\n            if (typeof status_1 === 'string') {\r\n                if (!errorCodeMap[status_1]) {\r\n                    // They must've included an unknown error code in the body.\r\n                    return new index_esm_HttpsErrorImpl('internal', 'internal');\r\n                }\r\n                code = errorCodeMap[status_1];\r\n                // TODO(klimt): Add better default descriptions for error enums.\r\n                // The default description needs to be updated for the new code.\r\n                description = status_1;\r\n            }\r\n            var message = errorJSON.message;\r\n            if (typeof message === 'string') {\r\n                description = message;\r\n            }\r\n            details = errorJSON.details;\r\n            if (details !== undefined) {\r\n                details = serializer.decode(details);\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // If we couldn't parse explicit error data, that's fine.\r\n    }\r\n    if (code === 'ok') {\r\n        // Technically, there's an edge case where a developer could explicitly\r\n        // return an error code of OK, and we will treat it as success, but that\r\n        // seems reasonable.\r\n        return null;\r\n    }\r\n    return new index_esm_HttpsErrorImpl(code, description, details);\r\n}\n\n/**\r\n * Helper class to get metadata that should be included with a function call.\r\n */\r\nvar index_esm_ContextProvider = /** @class */ (function () {\r\n    function ContextProvider(authProvider, messagingProvider) {\r\n        var _this = this;\r\n        this.auth = null;\r\n        this.messaging = null;\r\n        this.auth = authProvider.getImmediate({ optional: true });\r\n        this.messaging = messagingProvider.getImmediate({\r\n            optional: true\r\n        });\r\n        if (!this.auth) {\r\n            authProvider.get().then(function (auth) { return (_this.auth = auth); }, function () {\r\n                /* get() never rejects */\r\n            });\r\n        }\r\n        if (!this.messaging) {\r\n            messagingProvider.get().then(function (messaging) { return (_this.messaging = messaging); }, function () {\r\n                /* get() never rejects */\r\n            });\r\n        }\r\n    }\r\n    ContextProvider.prototype.getAuthToken = function () {\r\n        return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var token, e_1;\r\n            return Object(tslib_es6[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.auth) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.auth.getToken()];\r\n                    case 2:\r\n                        token = _a.sent();\r\n                        if (!token) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        return [2 /*return*/, token.accessToken];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        // If there's any error when trying to get the auth token, leave it off.\r\n                        return [2 /*return*/, undefined];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ContextProvider.prototype.getInstanceIdToken = function () {\r\n        return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            return Object(tslib_es6[\"d\" /* __generator */])(this, function (_a) {\r\n                if (!this.messaging ||\r\n                    !('Notification' in self) ||\r\n                    Notification.permission !== 'granted') {\r\n                    return [2 /*return*/, undefined];\r\n                }\r\n                try {\r\n                    return [2 /*return*/, this.messaging.getToken()];\r\n                }\r\n                catch (e) {\r\n                    // We don't warn on this, because it usually means messaging isn't set up.\r\n                    // console.warn('Failed to retrieve instance id token.', e);\r\n                    // If there's any error when trying to get the token, leave it off.\r\n                    return [2 /*return*/, undefined];\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    ContextProvider.prototype.getContext = function () {\r\n        return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var authToken, instanceIdToken;\r\n            return Object(tslib_es6[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getAuthToken()];\r\n                    case 1:\r\n                        authToken = _a.sent();\r\n                        return [4 /*yield*/, this.getInstanceIdToken()];\r\n                    case 2:\r\n                        instanceIdToken = _a.sent();\r\n                        return [2 /*return*/, { authToken: authToken, instanceIdToken: instanceIdToken }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return ContextProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\r\nvar UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\r\nfunction mapValues(\r\n// { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\no, f) {\r\n    var result = {};\r\n    for (var key in o) {\r\n        if (o.hasOwnProperty(key)) {\r\n            result[key] = f(o[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer() {\r\n    }\r\n    // Takes data and encodes it in a JSON-friendly way, such that types such as\r\n    // Date are preserved.\r\n    Serializer.prototype.encode = function (data) {\r\n        var _this = this;\r\n        if (data == null) {\r\n            return null;\r\n        }\r\n        if (data instanceof Number) {\r\n            data = data.valueOf();\r\n        }\r\n        if (typeof data === 'number' && isFinite(data)) {\r\n            // Any number in JS is safe to put directly in JSON and parse as a double\r\n            // without any loss of precision.\r\n            return data;\r\n        }\r\n        if (data === true || data === false) {\r\n            return data;\r\n        }\r\n        if (Object.prototype.toString.call(data) === '[object String]') {\r\n            return data;\r\n        }\r\n        if (Array.isArray(data)) {\r\n            return data.map(function (x) { return _this.encode(x); });\r\n        }\r\n        if (typeof data === 'function' || typeof data === 'object') {\r\n            return mapValues(data, function (x) { return _this.encode(x); });\r\n        }\r\n        // If we got this far, the data is not encodable.\r\n        throw new Error('Data cannot be encoded in JSON: ' + data);\r\n    };\r\n    // Takes data that's been encoded in a JSON-friendly form and returns a form\r\n    // with richer datatypes, such as Dates, etc.\r\n    Serializer.prototype.decode = function (json) {\r\n        var _this = this;\r\n        if (json == null) {\r\n            return json;\r\n        }\r\n        if (json['@type']) {\r\n            switch (json['@type']) {\r\n                case LONG_TYPE:\r\n                // Fall through and handle this the same as unsigned.\r\n                case UNSIGNED_LONG_TYPE: {\r\n                    // Technically, this could work return a valid number for malformed\r\n                    // data if there was a number followed by garbage. But it's just not\r\n                    // worth all the extra code to detect that case.\r\n                    var value = Number(json['value']);\r\n                    if (isNaN(value)) {\r\n                        throw new Error('Data cannot be decoded from JSON: ' + json);\r\n                    }\r\n                    return value;\r\n                }\r\n                default: {\r\n                    throw new Error('Data cannot be decoded from JSON: ' + json);\r\n                }\r\n            }\r\n        }\r\n        if (Array.isArray(json)) {\r\n            return json.map(function (x) { return _this.decode(x); });\r\n        }\r\n        if (typeof json === 'function' || typeof json === 'object') {\r\n            return mapValues(json, function (x) { return _this.decode(x); });\r\n        }\r\n        // Anything else is safe to return.\r\n        return json;\r\n    };\r\n    return Serializer;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a Promise that will be rejected after the given duration.\r\n * The error will be of type HttpsErrorImpl.\r\n *\r\n * @param millis Number of milliseconds to wait before rejecting.\r\n */\r\nfunction failAfter(millis) {\r\n    var timer;\r\n    var promise = new Promise(function (_, reject) {\r\n        timer = setTimeout(function () {\r\n            reject(new index_esm_HttpsErrorImpl('deadline-exceeded', 'deadline-exceeded'));\r\n        }, millis);\r\n    });\r\n    return {\r\n        timer: timer,\r\n        promise: promise\r\n    };\r\n}\r\n/**\r\n * The main class for the Firebase Functions SDK.\r\n */\r\nvar index_esm_Service = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Functions service for the given app and (optional) region or custom domain.\r\n     * @param app_ The FirebaseApp to use.\r\n     * @param regionOrCustomDomain_ one of:\r\n     *   a) A region to call functions from, such as us-central1\r\n     *   b) A custom domain to use as a functions prefix, such as https://mydomain.com\r\n     */\r\n    function Service(app_, authProvider, messagingProvider, regionOrCustomDomain_, fetchImpl) {\r\n        var _this = this;\r\n        if (regionOrCustomDomain_ === void 0) { regionOrCustomDomain_ = 'us-central1'; }\r\n        this.app_ = app_;\r\n        this.fetchImpl = fetchImpl;\r\n        this.serializer = new Serializer();\r\n        this.emulatorOrigin = null;\r\n        this.INTERNAL = {\r\n            delete: function () {\r\n                return Promise.resolve(_this.deleteService());\r\n            }\r\n        };\r\n        this.contextProvider = new index_esm_ContextProvider(authProvider, messagingProvider);\r\n        // Cancels all ongoing requests when resolved.\r\n        this.cancelAllRequests = new Promise(function (resolve) {\r\n            _this.deleteService = function () {\r\n                return resolve();\r\n            };\r\n        });\r\n        // Resolve the region or custom domain overload by attempting to parse it.\r\n        try {\r\n            var url = new URL(regionOrCustomDomain_);\r\n            this.customDomain = url.origin;\r\n            this.region = 'us-central1';\r\n        }\r\n        catch (e) {\r\n            this.customDomain = null;\r\n            this.region = regionOrCustomDomain_;\r\n        }\r\n    }\r\n    Object.defineProperty(Service.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the URL for a callable with the given name.\r\n     * @param name The name of the callable.\r\n     */\r\n    Service.prototype._url = function (name) {\r\n        var projectId = this.app_.options.projectId;\r\n        if (this.emulatorOrigin !== null) {\r\n            var origin_1 = this.emulatorOrigin;\r\n            return origin_1 + \"/\" + projectId + \"/\" + this.region + \"/\" + name;\r\n        }\r\n        if (this.customDomain !== null) {\r\n            return this.customDomain + \"/\" + name;\r\n        }\r\n        return \"https://\" + this.region + \"-\" + projectId + \".cloudfunctions.net/\" + name;\r\n    };\r\n    /**\r\n     * Modify this instance to communicate with the Cloud Functions emulator.\r\n     *\r\n     * Note: this must be called before this instance has been used to do any operations.\r\n     *\r\n     * @param host The emulator host (ex: localhost)\r\n     * @param port The emulator port (ex: 5001)\r\n     */\r\n    Service.prototype.useEmulator = function (host, port) {\r\n        this.emulatorOrigin = \"http://\" + host + \":\" + port;\r\n    };\r\n    /**\r\n     * Changes this instance to point to a Cloud Functions emulator running\r\n     * locally. See https://firebase.google.com/docs/functions/local-emulator\r\n     *\r\n     * @deprecated Prefer the useEmulator(host, port) method.\r\n     * @param origin The origin of the local emulator, such as\r\n     * \"http://localhost:5005\".\r\n     */\r\n    Service.prototype.useFunctionsEmulator = function (origin) {\r\n        this.emulatorOrigin = origin;\r\n    };\r\n    /**\r\n     * Returns a reference to the callable https trigger with the given name.\r\n     * @param name The name of the trigger.\r\n     */\r\n    Service.prototype.httpsCallable = function (name, options) {\r\n        var _this = this;\r\n        return function (data) {\r\n            return _this.call(name, data, options || {});\r\n        };\r\n    };\r\n    /**\r\n     * Does an HTTP POST and returns the completed response.\r\n     * @param url The url to post to.\r\n     * @param body The JSON body of the post.\r\n     * @param headers The HTTP headers to include in the request.\r\n     * @return A Promise that will succeed when the request finishes.\r\n     */\r\n    Service.prototype.postJSON = function (url, body, headers) {\r\n        return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var response, e_1, json, e_2;\r\n            return Object(tslib_es6[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        headers['Content-Type'] = 'application/json';\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.fetchImpl(url, {\r\n                                method: 'POST',\r\n                                body: JSON.stringify(body),\r\n                                headers: headers\r\n                            })];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        // This could be an unhandled error on the backend, or it could be a\r\n                        // network error. There's no way to know, since an unhandled error on the\r\n                        // backend will fail to set the proper CORS header, and thus will be\r\n                        // treated as a network error by fetch.\r\n                        return [2 /*return*/, {\r\n                                status: 0,\r\n                                json: null\r\n                            }];\r\n                    case 4:\r\n                        json = null;\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        _a.trys.push([5, 7, , 8]);\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 6:\r\n                        json = _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 7:\r\n                        e_2 = _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 8: return [2 /*return*/, {\r\n                            status: response.status,\r\n                            json: json\r\n                        }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Calls a callable function asynchronously and returns the result.\r\n     * @param name The name of the callable trigger.\r\n     * @param data The data to pass as params to the function.s\r\n     */\r\n    Service.prototype.call = function (name, data, options) {\r\n        return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var url, body, headers, context, timeout, _a, timer, failAfterPromise, response, error, responseData, decodedData;\r\n            return Object(tslib_es6[\"d\" /* __generator */])(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        url = this._url(name);\r\n                        // Encode any special types, such as dates, in the input data.\r\n                        data = this.serializer.encode(data);\r\n                        body = { data: data };\r\n                        headers = {};\r\n                        return [4 /*yield*/, this.contextProvider.getContext()];\r\n                    case 1:\r\n                        context = _b.sent();\r\n                        if (context.authToken) {\r\n                            headers['Authorization'] = 'Bearer ' + context.authToken;\r\n                        }\r\n                        if (context.instanceIdToken) {\r\n                            headers['Firebase-Instance-ID-Token'] = context.instanceIdToken;\r\n                        }\r\n                        timeout = options.timeout || 70000;\r\n                        _a = failAfter(timeout), timer = _a.timer, failAfterPromise = _a.promise;\r\n                        return [4 /*yield*/, Promise.race([\r\n                                clearTimeoutWrapper(timer, this.postJSON(url, body, headers)),\r\n                                failAfterPromise,\r\n                                clearTimeoutWrapper(timer, this.cancelAllRequests)\r\n                            ])];\r\n                    case 2:\r\n                        response = _b.sent();\r\n                        // If service was deleted, interrupted response throws an error.\r\n                        if (!response) {\r\n                            throw new index_esm_HttpsErrorImpl('cancelled', 'Firebase Functions instance was deleted.');\r\n                        }\r\n                        error = _errorForResponse(response.status, response.json, this.serializer);\r\n                        if (error) {\r\n                            throw error;\r\n                        }\r\n                        if (!response.json) {\r\n                            throw new index_esm_HttpsErrorImpl('internal', 'Response is not valid JSON object.');\r\n                        }\r\n                        responseData = response.json.data;\r\n                        // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\r\n                        // backwards compatibility.\r\n                        if (typeof responseData === 'undefined') {\r\n                            responseData = response.json.result;\r\n                        }\r\n                        if (typeof responseData === 'undefined') {\r\n                            // Consider the response malformed.\r\n                            throw new index_esm_HttpsErrorImpl('internal', 'Response is missing data field.');\r\n                        }\r\n                        decodedData = this.serializer.decode(responseData);\r\n                        return [2 /*return*/, { data: decodedData }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Service;\r\n}());\r\nfunction clearTimeoutWrapper(timer, promise) {\r\n    return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n        var result;\r\n        return Object(tslib_es6[\"d\" /* __generator */])(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, promise];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    clearTimeout(timer);\r\n                    return [2 /*return*/, result];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Functions.\r\n */\r\nvar FUNCTIONS_TYPE = 'functions';\r\nfunction registerFunctions(instance, fetchImpl) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        Functions: index_esm_Service\r\n    };\r\n    function factory(container, regionOrCustomDomain) {\r\n        // Dependencies\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        var messagingProvider = container.getProvider('messaging');\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return new index_esm_Service(app, authProvider, messagingProvider, regionOrCustomDomain, fetchImpl);\r\n    }\r\n    instance.INTERNAL.registerComponent(new dist_index_esm[\"a\" /* Component */](FUNCTIONS_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n}\n\nvar index_esm_name = \"@firebase/functions\";\nvar version = \"0.6.1\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterFunctions(index_esm[\"a\" /* default */], fetch.bind(self));\r\nindex_esm[\"a\" /* default */].registerVersion(index_esm_name, version);\n//# sourceMappingURL=index.esm.js.map\n\n// CONCATENATED MODULE: ./node_modules/firebase/functions/dist/index.esm.js\n\n//# sourceMappingURL=index.esm.js.map\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/home/raul/Documentos/Proyectos/Flexxo/flexxo-web/node_modules/@firebase/functions/dist/index.esm.js","/home/raul/Documentos/Proyectos/Flexxo/flexxo-web/node_modules/firebase/functions/dist/index.esm.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAqC;AACqB;AACV;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wBAAc;AAClB,IAAI,sCAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,wBAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wBAAc;AAC7B;;AAEA;AACA;AACA;AACA,IAAI,yBAAe;AACnB;AACA;AACA;AACA;AACA,+CAA+C,iBAAiB;AAChE;AACA;AACA,SAAS;AACT;AACA,qDAAqD,4BAA4B,EAAE;AACnF;AACA,aAAa;AACb;AACA;AACA,+DAA+D,sCAAsC,EAAE;AACvG;AACA,aAAa;AACb;AACA;AACA;AACA,eAAe,sCAAS;AACxB;AACA,mBAAmB,wCAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,sCAAS;AACxB,mBAAmB,wCAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,sCAAS;AACxB;AACA,mBAAmB,wCAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,yDAAyD;AACxG;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uBAAuB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,wBAAwB,EAAE;AACpE;AACA;AACA,iDAAiD,wBAAwB,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,wBAAwB,EAAE;AACpE;AACA;AACA,iDAAiD,wBAAwB,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAc;AACrC,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAO;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,uCAAuC;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,yBAAe;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sCAAS;AACxB;AACA,mBAAmB,wCAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sCAAS;AACxB;AACA,mBAAmB,wCAAW;AAC9B;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wBAAc;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wBAAc;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wBAAc;AACpD;AACA;AACA,+CAA+C,oBAAoB;AACnE;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA,WAAW,sCAAS;AACpB;AACA,eAAe,wCAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAO;AAC1B;AACA,4CAA4C,mCAAS;AACrD;AACA;AACA;;AAEA,IAAI,cAAI;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4BAAQ;AAC1B,4BAAQ,iBAAiB,cAAI;AAC7B;;;ACzpB6B;AAC7B","file":"x","sourcesContent":["import firebase from '@firebase/app';\nimport { __extends, __awaiter, __generator } from 'tslib';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Standard error codes for different ways a request can fail, as defined by:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * This map is used primarily to convert from a backend error code string to\r\n * a client SDK error code string, and make sure it's in the supported set.\r\n */\r\nvar errorCodeMap = {\r\n    OK: 'ok',\r\n    CANCELLED: 'cancelled',\r\n    UNKNOWN: 'unknown',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    DEADLINE_EXCEEDED: 'deadline-exceeded',\r\n    NOT_FOUND: 'not-found',\r\n    ALREADY_EXISTS: 'already-exists',\r\n    PERMISSION_DENIED: 'permission-denied',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    RESOURCE_EXHAUSTED: 'resource-exhausted',\r\n    FAILED_PRECONDITION: 'failed-precondition',\r\n    ABORTED: 'aborted',\r\n    OUT_OF_RANGE: 'out-of-range',\r\n    UNIMPLEMENTED: 'unimplemented',\r\n    INTERNAL: 'internal',\r\n    UNAVAILABLE: 'unavailable',\r\n    DATA_LOSS: 'data-loss'\r\n};\r\n/**\r\n * An explicit error that can be thrown from a handler to send an error to the\r\n * client that called the function.\r\n */\r\nvar HttpsErrorImpl = /** @class */ (function (_super) {\r\n    __extends(HttpsErrorImpl, _super);\r\n    function HttpsErrorImpl(code, message, details) {\r\n        var _this = _super.call(this, message) || this;\r\n        // This is a workaround for a bug in TypeScript when extending Error:\r\n        // tslint:disable-next-line\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(_this, HttpsErrorImpl.prototype);\r\n        _this.code = code;\r\n        _this.details = details;\r\n        return _this;\r\n    }\r\n    return HttpsErrorImpl;\r\n}(Error));\r\n/**\r\n * Takes an HTTP status code and returns the corresponding ErrorCode.\r\n * This is the standard HTTP status code -> error mapping defined in:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * @param status An HTTP status code.\r\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\r\n */\r\nfunction codeForHTTPStatus(status) {\r\n    // Make sure any successful status is OK.\r\n    if (status >= 200 && status < 300) {\r\n        return 'ok';\r\n    }\r\n    switch (status) {\r\n        case 0:\r\n            // This can happen if the server returns 500.\r\n            return 'internal';\r\n        case 400:\r\n            return 'invalid-argument';\r\n        case 401:\r\n            return 'unauthenticated';\r\n        case 403:\r\n            return 'permission-denied';\r\n        case 404:\r\n            return 'not-found';\r\n        case 409:\r\n            return 'aborted';\r\n        case 429:\r\n            return 'resource-exhausted';\r\n        case 499:\r\n            return 'cancelled';\r\n        case 500:\r\n            return 'internal';\r\n        case 501:\r\n            return 'unimplemented';\r\n        case 503:\r\n            return 'unavailable';\r\n        case 504:\r\n            return 'deadline-exceeded';\r\n    }\r\n    return 'unknown';\r\n}\r\n/**\r\n * Takes an HTTP response and returns the corresponding Error, if any.\r\n */\r\nfunction _errorForResponse(status, bodyJSON, serializer) {\r\n    var code = codeForHTTPStatus(status);\r\n    // Start with reasonable defaults from the status code.\r\n    var description = code;\r\n    var details = undefined;\r\n    // Then look through the body for explicit details.\r\n    try {\r\n        var errorJSON = bodyJSON && bodyJSON.error;\r\n        if (errorJSON) {\r\n            var status_1 = errorJSON.status;\r\n            if (typeof status_1 === 'string') {\r\n                if (!errorCodeMap[status_1]) {\r\n                    // They must've included an unknown error code in the body.\r\n                    return new HttpsErrorImpl('internal', 'internal');\r\n                }\r\n                code = errorCodeMap[status_1];\r\n                // TODO(klimt): Add better default descriptions for error enums.\r\n                // The default description needs to be updated for the new code.\r\n                description = status_1;\r\n            }\r\n            var message = errorJSON.message;\r\n            if (typeof message === 'string') {\r\n                description = message;\r\n            }\r\n            details = errorJSON.details;\r\n            if (details !== undefined) {\r\n                details = serializer.decode(details);\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // If we couldn't parse explicit error data, that's fine.\r\n    }\r\n    if (code === 'ok') {\r\n        // Technically, there's an edge case where a developer could explicitly\r\n        // return an error code of OK, and we will treat it as success, but that\r\n        // seems reasonable.\r\n        return null;\r\n    }\r\n    return new HttpsErrorImpl(code, description, details);\r\n}\n\n/**\r\n * Helper class to get metadata that should be included with a function call.\r\n */\r\nvar ContextProvider = /** @class */ (function () {\r\n    function ContextProvider(authProvider, messagingProvider) {\r\n        var _this = this;\r\n        this.auth = null;\r\n        this.messaging = null;\r\n        this.auth = authProvider.getImmediate({ optional: true });\r\n        this.messaging = messagingProvider.getImmediate({\r\n            optional: true\r\n        });\r\n        if (!this.auth) {\r\n            authProvider.get().then(function (auth) { return (_this.auth = auth); }, function () {\r\n                /* get() never rejects */\r\n            });\r\n        }\r\n        if (!this.messaging) {\r\n            messagingProvider.get().then(function (messaging) { return (_this.messaging = messaging); }, function () {\r\n                /* get() never rejects */\r\n            });\r\n        }\r\n    }\r\n    ContextProvider.prototype.getAuthToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.auth) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.auth.getToken()];\r\n                    case 2:\r\n                        token = _a.sent();\r\n                        if (!token) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        return [2 /*return*/, token.accessToken];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        // If there's any error when trying to get the auth token, leave it off.\r\n                        return [2 /*return*/, undefined];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ContextProvider.prototype.getInstanceIdToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (!this.messaging ||\r\n                    !('Notification' in self) ||\r\n                    Notification.permission !== 'granted') {\r\n                    return [2 /*return*/, undefined];\r\n                }\r\n                try {\r\n                    return [2 /*return*/, this.messaging.getToken()];\r\n                }\r\n                catch (e) {\r\n                    // We don't warn on this, because it usually means messaging isn't set up.\r\n                    // console.warn('Failed to retrieve instance id token.', e);\r\n                    // If there's any error when trying to get the token, leave it off.\r\n                    return [2 /*return*/, undefined];\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    ContextProvider.prototype.getContext = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authToken, instanceIdToken;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getAuthToken()];\r\n                    case 1:\r\n                        authToken = _a.sent();\r\n                        return [4 /*yield*/, this.getInstanceIdToken()];\r\n                    case 2:\r\n                        instanceIdToken = _a.sent();\r\n                        return [2 /*return*/, { authToken: authToken, instanceIdToken: instanceIdToken }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return ContextProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\r\nvar UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\r\nfunction mapValues(\r\n// { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\no, f) {\r\n    var result = {};\r\n    for (var key in o) {\r\n        if (o.hasOwnProperty(key)) {\r\n            result[key] = f(o[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer() {\r\n    }\r\n    // Takes data and encodes it in a JSON-friendly way, such that types such as\r\n    // Date are preserved.\r\n    Serializer.prototype.encode = function (data) {\r\n        var _this = this;\r\n        if (data == null) {\r\n            return null;\r\n        }\r\n        if (data instanceof Number) {\r\n            data = data.valueOf();\r\n        }\r\n        if (typeof data === 'number' && isFinite(data)) {\r\n            // Any number in JS is safe to put directly in JSON and parse as a double\r\n            // without any loss of precision.\r\n            return data;\r\n        }\r\n        if (data === true || data === false) {\r\n            return data;\r\n        }\r\n        if (Object.prototype.toString.call(data) === '[object String]') {\r\n            return data;\r\n        }\r\n        if (Array.isArray(data)) {\r\n            return data.map(function (x) { return _this.encode(x); });\r\n        }\r\n        if (typeof data === 'function' || typeof data === 'object') {\r\n            return mapValues(data, function (x) { return _this.encode(x); });\r\n        }\r\n        // If we got this far, the data is not encodable.\r\n        throw new Error('Data cannot be encoded in JSON: ' + data);\r\n    };\r\n    // Takes data that's been encoded in a JSON-friendly form and returns a form\r\n    // with richer datatypes, such as Dates, etc.\r\n    Serializer.prototype.decode = function (json) {\r\n        var _this = this;\r\n        if (json == null) {\r\n            return json;\r\n        }\r\n        if (json['@type']) {\r\n            switch (json['@type']) {\r\n                case LONG_TYPE:\r\n                // Fall through and handle this the same as unsigned.\r\n                case UNSIGNED_LONG_TYPE: {\r\n                    // Technically, this could work return a valid number for malformed\r\n                    // data if there was a number followed by garbage. But it's just not\r\n                    // worth all the extra code to detect that case.\r\n                    var value = Number(json['value']);\r\n                    if (isNaN(value)) {\r\n                        throw new Error('Data cannot be decoded from JSON: ' + json);\r\n                    }\r\n                    return value;\r\n                }\r\n                default: {\r\n                    throw new Error('Data cannot be decoded from JSON: ' + json);\r\n                }\r\n            }\r\n        }\r\n        if (Array.isArray(json)) {\r\n            return json.map(function (x) { return _this.decode(x); });\r\n        }\r\n        if (typeof json === 'function' || typeof json === 'object') {\r\n            return mapValues(json, function (x) { return _this.decode(x); });\r\n        }\r\n        // Anything else is safe to return.\r\n        return json;\r\n    };\r\n    return Serializer;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a Promise that will be rejected after the given duration.\r\n * The error will be of type HttpsErrorImpl.\r\n *\r\n * @param millis Number of milliseconds to wait before rejecting.\r\n */\r\nfunction failAfter(millis) {\r\n    var timer;\r\n    var promise = new Promise(function (_, reject) {\r\n        timer = setTimeout(function () {\r\n            reject(new HttpsErrorImpl('deadline-exceeded', 'deadline-exceeded'));\r\n        }, millis);\r\n    });\r\n    return {\r\n        timer: timer,\r\n        promise: promise\r\n    };\r\n}\r\n/**\r\n * The main class for the Firebase Functions SDK.\r\n */\r\nvar Service = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Functions service for the given app and (optional) region or custom domain.\r\n     * @param app_ The FirebaseApp to use.\r\n     * @param regionOrCustomDomain_ one of:\r\n     *   a) A region to call functions from, such as us-central1\r\n     *   b) A custom domain to use as a functions prefix, such as https://mydomain.com\r\n     */\r\n    function Service(app_, authProvider, messagingProvider, regionOrCustomDomain_, fetchImpl) {\r\n        var _this = this;\r\n        if (regionOrCustomDomain_ === void 0) { regionOrCustomDomain_ = 'us-central1'; }\r\n        this.app_ = app_;\r\n        this.fetchImpl = fetchImpl;\r\n        this.serializer = new Serializer();\r\n        this.emulatorOrigin = null;\r\n        this.INTERNAL = {\r\n            delete: function () {\r\n                return Promise.resolve(_this.deleteService());\r\n            }\r\n        };\r\n        this.contextProvider = new ContextProvider(authProvider, messagingProvider);\r\n        // Cancels all ongoing requests when resolved.\r\n        this.cancelAllRequests = new Promise(function (resolve) {\r\n            _this.deleteService = function () {\r\n                return resolve();\r\n            };\r\n        });\r\n        // Resolve the region or custom domain overload by attempting to parse it.\r\n        try {\r\n            var url = new URL(regionOrCustomDomain_);\r\n            this.customDomain = url.origin;\r\n            this.region = 'us-central1';\r\n        }\r\n        catch (e) {\r\n            this.customDomain = null;\r\n            this.region = regionOrCustomDomain_;\r\n        }\r\n    }\r\n    Object.defineProperty(Service.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the URL for a callable with the given name.\r\n     * @param name The name of the callable.\r\n     */\r\n    Service.prototype._url = function (name) {\r\n        var projectId = this.app_.options.projectId;\r\n        if (this.emulatorOrigin !== null) {\r\n            var origin_1 = this.emulatorOrigin;\r\n            return origin_1 + \"/\" + projectId + \"/\" + this.region + \"/\" + name;\r\n        }\r\n        if (this.customDomain !== null) {\r\n            return this.customDomain + \"/\" + name;\r\n        }\r\n        return \"https://\" + this.region + \"-\" + projectId + \".cloudfunctions.net/\" + name;\r\n    };\r\n    /**\r\n     * Modify this instance to communicate with the Cloud Functions emulator.\r\n     *\r\n     * Note: this must be called before this instance has been used to do any operations.\r\n     *\r\n     * @param host The emulator host (ex: localhost)\r\n     * @param port The emulator port (ex: 5001)\r\n     */\r\n    Service.prototype.useEmulator = function (host, port) {\r\n        this.emulatorOrigin = \"http://\" + host + \":\" + port;\r\n    };\r\n    /**\r\n     * Changes this instance to point to a Cloud Functions emulator running\r\n     * locally. See https://firebase.google.com/docs/functions/local-emulator\r\n     *\r\n     * @deprecated Prefer the useEmulator(host, port) method.\r\n     * @param origin The origin of the local emulator, such as\r\n     * \"http://localhost:5005\".\r\n     */\r\n    Service.prototype.useFunctionsEmulator = function (origin) {\r\n        this.emulatorOrigin = origin;\r\n    };\r\n    /**\r\n     * Returns a reference to the callable https trigger with the given name.\r\n     * @param name The name of the trigger.\r\n     */\r\n    Service.prototype.httpsCallable = function (name, options) {\r\n        var _this = this;\r\n        return function (data) {\r\n            return _this.call(name, data, options || {});\r\n        };\r\n    };\r\n    /**\r\n     * Does an HTTP POST and returns the completed response.\r\n     * @param url The url to post to.\r\n     * @param body The JSON body of the post.\r\n     * @param headers The HTTP headers to include in the request.\r\n     * @return A Promise that will succeed when the request finishes.\r\n     */\r\n    Service.prototype.postJSON = function (url, body, headers) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, e_1, json, e_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        headers['Content-Type'] = 'application/json';\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.fetchImpl(url, {\r\n                                method: 'POST',\r\n                                body: JSON.stringify(body),\r\n                                headers: headers\r\n                            })];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        // This could be an unhandled error on the backend, or it could be a\r\n                        // network error. There's no way to know, since an unhandled error on the\r\n                        // backend will fail to set the proper CORS header, and thus will be\r\n                        // treated as a network error by fetch.\r\n                        return [2 /*return*/, {\r\n                                status: 0,\r\n                                json: null\r\n                            }];\r\n                    case 4:\r\n                        json = null;\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        _a.trys.push([5, 7, , 8]);\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 6:\r\n                        json = _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 7:\r\n                        e_2 = _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 8: return [2 /*return*/, {\r\n                            status: response.status,\r\n                            json: json\r\n                        }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Calls a callable function asynchronously and returns the result.\r\n     * @param name The name of the callable trigger.\r\n     * @param data The data to pass as params to the function.s\r\n     */\r\n    Service.prototype.call = function (name, data, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, body, headers, context, timeout, _a, timer, failAfterPromise, response, error, responseData, decodedData;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        url = this._url(name);\r\n                        // Encode any special types, such as dates, in the input data.\r\n                        data = this.serializer.encode(data);\r\n                        body = { data: data };\r\n                        headers = {};\r\n                        return [4 /*yield*/, this.contextProvider.getContext()];\r\n                    case 1:\r\n                        context = _b.sent();\r\n                        if (context.authToken) {\r\n                            headers['Authorization'] = 'Bearer ' + context.authToken;\r\n                        }\r\n                        if (context.instanceIdToken) {\r\n                            headers['Firebase-Instance-ID-Token'] = context.instanceIdToken;\r\n                        }\r\n                        timeout = options.timeout || 70000;\r\n                        _a = failAfter(timeout), timer = _a.timer, failAfterPromise = _a.promise;\r\n                        return [4 /*yield*/, Promise.race([\r\n                                clearTimeoutWrapper(timer, this.postJSON(url, body, headers)),\r\n                                failAfterPromise,\r\n                                clearTimeoutWrapper(timer, this.cancelAllRequests)\r\n                            ])];\r\n                    case 2:\r\n                        response = _b.sent();\r\n                        // If service was deleted, interrupted response throws an error.\r\n                        if (!response) {\r\n                            throw new HttpsErrorImpl('cancelled', 'Firebase Functions instance was deleted.');\r\n                        }\r\n                        error = _errorForResponse(response.status, response.json, this.serializer);\r\n                        if (error) {\r\n                            throw error;\r\n                        }\r\n                        if (!response.json) {\r\n                            throw new HttpsErrorImpl('internal', 'Response is not valid JSON object.');\r\n                        }\r\n                        responseData = response.json.data;\r\n                        // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\r\n                        // backwards compatibility.\r\n                        if (typeof responseData === 'undefined') {\r\n                            responseData = response.json.result;\r\n                        }\r\n                        if (typeof responseData === 'undefined') {\r\n                            // Consider the response malformed.\r\n                            throw new HttpsErrorImpl('internal', 'Response is missing data field.');\r\n                        }\r\n                        decodedData = this.serializer.decode(responseData);\r\n                        return [2 /*return*/, { data: decodedData }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Service;\r\n}());\r\nfunction clearTimeoutWrapper(timer, promise) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var result;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, promise];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    clearTimeout(timer);\r\n                    return [2 /*return*/, result];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Functions.\r\n */\r\nvar FUNCTIONS_TYPE = 'functions';\r\nfunction registerFunctions(instance, fetchImpl) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        Functions: Service\r\n    };\r\n    function factory(container, regionOrCustomDomain) {\r\n        // Dependencies\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        var messagingProvider = container.getProvider('messaging');\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return new Service(app, authProvider, messagingProvider, regionOrCustomDomain, fetchImpl);\r\n    }\r\n    instance.INTERNAL.registerComponent(new Component(FUNCTIONS_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n}\n\nvar name = \"@firebase/functions\";\nvar version = \"0.6.1\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterFunctions(firebase, fetch.bind(self));\r\nfirebase.registerVersion(name, version);\n//# sourceMappingURL=index.esm.js.map\n","import '@firebase/functions';\n//# sourceMappingURL=index.esm.js.map\n"]}}