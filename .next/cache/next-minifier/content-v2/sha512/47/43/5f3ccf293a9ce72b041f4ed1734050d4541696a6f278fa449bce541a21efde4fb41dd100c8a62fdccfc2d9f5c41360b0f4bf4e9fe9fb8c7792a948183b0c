{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[26],{\"yoq/\":function(t,e,n){\"use strict\";n.r(e);var r,i,o,a=n(\"zIRd\"),s=(n(\"fSjL\"),n(\"mrSG\")),c=n(\"qOnz\"),u=n(\"q/0M\"),p=n(\"/6Yf\"),f=\"0.4.5\",l=f,g=\"FB-PERF-TRACE-MEASURE\",m=\"_wt_\",h=\"_fcp\",d=\"_fid\",v=\"@firebase/performance/config\",b=\"@firebase/performance/configexpire\",_=\"Performance\",y=((r={})[\"trace started\"]=\"Trace {$traceName} was started before.\",r[\"trace stopped\"]=\"Trace {$traceName} is not running.\",r[\"nonpositive trace startTime\"]=\"Trace {$traceName} startTime should be positive.\",r[\"nonpositive trace duration\"]=\"Trace {$traceName} duration should be positive.\",r[\"no window\"]=\"Window is not available.\",r[\"no app id\"]=\"App id is not available.\",r[\"no project id\"]=\"Project id is not available.\",r[\"no api key\"]=\"Api key is not available.\",r[\"invalid cc log\"]=\"Attempted to queue invalid cc event\",r[\"FB not default\"]=\"Performance can only start when Firebase app instance is the default one.\",r[\"RC response not ok\"]=\"RC response is not ok\",r[\"invalid attribute name\"]=\"Attribute name {$attributeName} is invalid.\",r[\"invalid attribute value\"]=\"Attribute value {$attributeValue} is invalid.\",r[\"invalid custom metric name\"]=\"Custom metric name {$customMetricName} is invalid\",r[\"invalid String merger input\"]=\"Input for String merger is invalid, contact support team to resolve.\",r),I=new c.b(\"performance\",_,y),T=new u.b(_);T.logLevel=u.a.INFO;var w,E=function(){function t(t){if(this.window=t,!t)throw I.create(\"no window\");this.performance=t.performance,this.PerformanceObserver=t.PerformanceObserver,this.windowLocation=t.location,this.navigator=t.navigator,this.document=t.document,this.navigator&&this.navigator.cookieEnabled&&(this.localStorage=t.localStorage),t.perfMetrics&&t.perfMetrics.onFirstInputDelay&&(this.onFirstInputDelay=t.perfMetrics.onFirstInputDelay)}return t.prototype.getUrl=function(){return this.windowLocation.href.split(\"?\")[0]},t.prototype.mark=function(t){this.performance&&this.performance.mark&&this.performance.mark(t)},t.prototype.measure=function(t,e,n){this.performance&&this.performance.measure&&this.performance.measure(t,e,n)},t.prototype.getEntriesByType=function(t){return this.performance&&this.performance.getEntriesByType?this.performance.getEntriesByType(t):[]},t.prototype.getEntriesByName=function(t){return this.performance&&this.performance.getEntriesByName?this.performance.getEntriesByName(t):[]},t.prototype.getTimeOrigin=function(){return this.performance&&(this.performance.timeOrigin||this.performance.timing.navigationStart)},t.prototype.requiredApisAvailable=function(){return fetch&&Promise&&this.navigator&&this.navigator.cookieEnabled?!!Object(c.w)()||(T.info(\"IndexedDB is not supported by current browswer\"),!1):(T.info(\"Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.\"),!1)},t.prototype.setupObserver=function(t,e){this.PerformanceObserver&&new this.PerformanceObserver((function(t){for(var n=0,r=t.getEntries();n<r.length;n++){var i=r[n];e(i)}})).observe({entryTypes:[t]})},t.getInstance=function(){return void 0===i&&(i=new t(o)),i},t}();function A(t,e){var n=t.length-e.length;if(n<0||n>1)throw I.create(\"invalid String merger input\");for(var r=[],i=0;i<t.length;i++)r.push(t.charAt(i)),e.length>i&&r.push(e.charAt(i));return r.join(\"\")}var S,M,N=function(){function t(){this.instrumentationEnabled=!0,this.dataCollectionEnabled=!0,this.loggingEnabled=!1,this.tracesSamplingRate=1,this.networkRequestsSamplingRate=1,this.logEndPointUrl=\"https://firebaselogging.googleapis.com/v0cc/log?format=json_proto\",this.flTransportEndpointUrl=A(\"hts/frbslgigp.ogepscmv/ieo/eaylg\",\"tp:/ieaeogn-agolai.o/1frlglgc/o\"),this.transportKey=A(\"AzSC8r6ReiGqFMyfvgow\",\"Iayx0u-XT3vksVM-pIV\"),this.logSource=462,this.logTraceAfterSampling=!1,this.logNetworkAfterSampling=!1,this.configTimeToLive=12}return t.prototype.getAppId=function(){var t=this.firebaseAppInstance&&this.firebaseAppInstance.options&&this.firebaseAppInstance.options.appId;if(!t)throw I.create(\"no app id\");return t},t.prototype.getProjectId=function(){var t=this.firebaseAppInstance&&this.firebaseAppInstance.options&&this.firebaseAppInstance.options.projectId;if(!t)throw I.create(\"no project id\");return t},t.prototype.getApiKey=function(){var t=this.firebaseAppInstance&&this.firebaseAppInstance.options&&this.firebaseAppInstance.options.apiKey;if(!t)throw I.create(\"no api key\");return t},t.prototype.getFlTransportFullUrl=function(){return this.flTransportEndpointUrl.concat(\"?key=\",this.transportKey)},t.getInstance=function(){return void 0===w&&(w=new t),w},t}();function k(){return S}!function(t){t[t.UNKNOWN=0]=\"UNKNOWN\",t[t.VISIBLE=1]=\"VISIBLE\",t[t.HIDDEN=2]=\"HIDDEN\"}(M||(M={}));var O=[\"firebase_\",\"google_\",\"ga_\"],R=new RegExp(\"^[a-zA-Z]\\\\w*$\");function U(){var t=E.getInstance().navigator;return\"serviceWorker\"in t?t.serviceWorker.controller?2:3:1}function P(){switch(E.getInstance().document.visibilityState){case\"visible\":return M.VISIBLE;case\"hidden\":return M.HIDDEN;default:return M.UNKNOWN}}function B(){var t=E.getInstance().navigator.connection;switch(t&&t.effectiveType){case\"slow-2g\":return 1;case\"2g\":return 2;case\"3g\":return 3;case\"4g\":return 4;default:return 0}}var j=\"0.0.1\",F=!0,C=\"FIREBASE_INSTALLATIONS_AUTH\";function D(t){var e=function(){var t=E.getInstance().localStorage;if(!t)return;var e=t.getItem(b);if(!e||(n=e,!(Number(n)>Date.now())))return;var n;var r=t.getItem(v);if(!r)return;try{return JSON.parse(r)}catch(i){return}}();return e?(q(e),Promise.resolve()):function(t){return function(){var t=N.getInstance().installationsService.getToken();return t.then((function(t){})),t}().then((function(e){var n=\"https://firebaseremoteconfig.googleapis.com/v1/projects/\"+N.getInstance().getProjectId()+\"/namespaces/fireperf:fetch?key=\"+N.getInstance().getApiKey(),r=new Request(n,{method:\"POST\",headers:{Authorization:C+\" \"+e},body:JSON.stringify({app_instance_id:t,app_instance_id_token:e,app_id:N.getInstance().getAppId(),app_version:l,sdk_version:j})});return fetch(r).then((function(t){if(t.ok)return t.json();throw I.create(\"RC response not ok\")}))})).catch((function(){T.info(L)}))}(t).then(q).then((function(t){return function(t){var e=E.getInstance().localStorage;if(!t||!e)return;e.setItem(v,JSON.stringify(t)),e.setItem(b,String(Date.now()+60*N.getInstance().configTimeToLive*60*1e3))}(t)}),(function(){}))}var L=\"Could not fetch config, will use default configs\";function q(t){if(!t)return t;var e=N.getInstance(),n=t.entries||{};return void 0!==n.fpr_enabled?e.loggingEnabled=\"true\"===String(n.fpr_enabled):e.loggingEnabled=F,n.fpr_log_source&&(e.logSource=Number(n.fpr_log_source)),n.fpr_log_endpoint_url&&(e.logEndPointUrl=n.fpr_log_endpoint_url),n.fpr_log_transport_key&&(e.transportKey=n.fpr_log_transport_key),void 0!==n.fpr_vc_network_request_sampling_rate&&(e.networkRequestsSamplingRate=Number(n.fpr_vc_network_request_sampling_rate)),void 0!==n.fpr_vc_trace_sampling_rate&&(e.tracesSamplingRate=Number(n.fpr_vc_trace_sampling_rate)),e.logTraceAfterSampling=W(e.tracesSamplingRate),e.logNetworkAfterSampling=W(e.networkRequestsSamplingRate),t}function W(t){return Math.random()<=t}var x,K=1;function V(){return K=2,x=x||function(){var t=E.getInstance().document;return new Promise((function(e){if(t&&\"complete\"!==t.readyState){var n=function(){\"complete\"===t.readyState&&(t.removeEventListener(\"readystatechange\",n),e())};t.addEventListener(\"readystatechange\",n)}else e()}))}().then((function(){return function(){var t=N.getInstance().installationsService.getId();return t.then((function(t){S=t})),t}()})).then((function(t){return D(t)})).then((function(){return J()}),(function(){return J()}))}function J(){K=3}var $,z=1e4,H=3,G=[],Y=!1;function Q(t){setTimeout((function(){if(0!==H)return G.length?void function(){var t=G.splice(0,1e3),e=t.map((function(t){return{source_extension_json_proto3:t.message,event_time_ms:String(t.eventTime)}}));(function(t,e){return function(t){var e=N.getInstance().getFlTransportFullUrl();return fetch(e,{method:\"POST\",body:JSON.stringify(t)})}(t).then((function(t){return t.ok||T.info(\"Call to Firebase backend failed.\"),t.json()})).then((function(t){var n=Number(t.nextRequestWaitMillis),r=z;isNaN(n)||(r=Math.max(n,r));var i=t.logResponseDetails;Array.isArray(i)&&i.length>0&&\"RETRY_REQUEST_LATER\"===i[0].responseAction&&(G=Object(s.g)(e,G),T.info(\"Retry transport request later.\")),H=3,Q(r)}))})({request_time_ms:String(Date.now()),client_info:{client_type:1,js_client_info:{}},log_source:N.getInstance().logSource,log_event:e},t).catch((function(){G=Object(s.g)(t,G),H--,T.info(\"Tries left: \"+H+\".\"),Q(z)}))}():Q(z)}),t)}function X(t){if(!t.eventTime||!t.message)throw I.create(\"invalid cc log\");G=Object(s.g)(G,[t])}function Z(t,e){$||($=function(t){return function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];X({message:t.apply(void 0,e),eventTime:Date.now()})}}(nt)),$(t,e)}function tt(t){var e=N.getInstance();!e.instrumentationEnabled&&t.isAuto||(e.dataCollectionEnabled||t.isAuto)&&E.getInstance().requiredApisAvailable()&&(t.isAuto&&P()!==M.VISIBLE||(3===K?et(t):V().then((function(){return et(t)}),(function(){return et(t)}))))}function et(t){if(k()){var e=N.getInstance();e.loggingEnabled&&e.logTraceAfterSampling&&setTimeout((function(){return Z(t,1)}),0)}}function nt(t,e){return 0===e?function(t){var e={url:t.url,http_method:t.httpMethod||0,http_response_code:200,response_payload_bytes:t.responsePayloadBytes,client_start_time_us:t.startTimeUs,time_to_response_initiated_us:t.timeToResponseInitiatedUs,time_to_response_completed_us:t.timeToResponseCompletedUs},n={application_info:rt(),network_request_metric:e};return JSON.stringify(n)}(t):function(t){var e={name:t.name,is_auto:t.isAuto,client_start_time_us:t.startTimeUs,duration_us:t.durationUs};0!==Object.keys(t.counters).length&&(e.counters=t.counters);var n=t.getAttributes();0!==Object.keys(n).length&&(e.custom_attributes=n);var r={application_info:rt(),trace_metric:e};return JSON.stringify(r)}(t)}function rt(){return{google_app_id:N.getInstance().getAppId(),app_instance_id:k(),web_app_info:{sdk_version:l,page_url:E.getInstance().getUrl(),service_worker_status:U(),visibility_state:P(),effective_connection_type:B()},application_process_state:0}}var it=[\"_fp\",h,d];var ot=function(){function t(t,e,n){void 0===e&&(e=!1),this.name=t,this.isAuto=e,this.state=1,this.customAttributes={},this.counters={},this.api=E.getInstance(),this.randomId=Math.floor(1e6*Math.random()),this.isAuto||(this.traceStartMark=\"FB-PERF-TRACE-START-\"+this.randomId+\"-\"+this.name,this.traceStopMark=\"FB-PERF-TRACE-STOP-\"+this.randomId+\"-\"+this.name,this.traceMeasure=n||\"FB-PERF-TRACE-MEASURE-\"+this.randomId+\"-\"+this.name,n&&this.calculateTraceMetrics())}return t.prototype.start=function(){if(1!==this.state)throw I.create(\"trace started\",{traceName:this.name});this.api.mark(this.traceStartMark),this.state=2},t.prototype.stop=function(){if(2!==this.state)throw I.create(\"trace stopped\",{traceName:this.name});this.state=3,this.api.mark(this.traceStopMark),this.api.measure(this.traceMeasure,this.traceStartMark,this.traceStopMark),this.calculateTraceMetrics(),tt(this)},t.prototype.record=function(t,e,n){if(t<=0)throw I.create(\"nonpositive trace startTime\",{traceName:this.name});if(e<=0)throw I.create(\"nonpositive trace duration\",{traceName:this.name});if(this.durationUs=Math.floor(1e3*e),this.startTimeUs=Math.floor(1e3*t),n&&n.attributes&&(this.customAttributes=Object(s.a)({},n.attributes)),n&&n.metrics)for(var r=0,i=Object.keys(n.metrics);r<i.length;r++){var o=i[r];isNaN(Number(n.metrics[o]))||(this.counters[o]=Number(Math.floor(n.metrics[o])))}tt(this)},t.prototype.incrementMetric=function(t,e){void 0===e&&(e=1),void 0===this.counters[t]?this.putMetric(t,e):this.putMetric(t,this.counters[t]+e)},t.prototype.putMetric=function(t,e){if(n=t,r=this.name,0===n.length||n.length>100||!(r&&r.startsWith(m)&&it.indexOf(n)>-1)&&n.startsWith(\"_\"))throw I.create(\"invalid custom metric name\",{customMetricName:t});var n,r;this.counters[t]=function(t){var e=Math.floor(t);return e<t&&T.info(\"Metric value should be an Integer, setting the value as : \"+e+\".\"),e}(e)},t.prototype.getMetric=function(t){return this.counters[t]||0},t.prototype.putAttribute=function(t,e){var n,r=!(0===(n=t).length||n.length>40)&&!O.some((function(t){return n.startsWith(t)}))&&!!n.match(R),i=function(t){return 0!==t.length&&t.length<=100}(e);if(r&&i)this.customAttributes[t]=e;else{if(!r)throw I.create(\"invalid attribute name\",{attributeName:t});if(!i)throw I.create(\"invalid attribute value\",{attributeValue:e})}},t.prototype.getAttribute=function(t){return this.customAttributes[t]},t.prototype.removeAttribute=function(t){void 0!==this.customAttributes[t]&&delete this.customAttributes[t]},t.prototype.getAttributes=function(){return Object(s.a)({},this.customAttributes)},t.prototype.setStartTime=function(t){this.startTimeUs=t},t.prototype.setDuration=function(t){this.durationUs=t},t.prototype.calculateTraceMetrics=function(){var t=this.api.getEntriesByName(this.traceMeasure),e=t&&t[0];e&&(this.durationUs=Math.floor(1e3*e.duration),this.startTimeUs=Math.floor(1e3*(e.startTime+this.api.getTimeOrigin())))},t.createOobTrace=function(e,n,r){var i=E.getInstance().getUrl();if(i){var o=new t(m+i,!0),a=Math.floor(1e3*E.getInstance().getTimeOrigin());o.setStartTime(a),e&&e[0]&&(o.setDuration(Math.floor(1e3*e[0].duration)),o.putMetric(\"domInteractive\",Math.floor(1e3*e[0].domInteractive)),o.putMetric(\"domContentLoadedEventEnd\",Math.floor(1e3*e[0].domContentLoadedEventEnd)),o.putMetric(\"loadEventEnd\",Math.floor(1e3*e[0].loadEventEnd)));if(n){var s=n.find((function(t){return\"first-paint\"===t.name}));s&&s.startTime&&o.putMetric(\"_fp\",Math.floor(1e3*s.startTime));var c=n.find((function(t){return\"first-contentful-paint\"===t.name}));c&&c.startTime&&o.putMetric(h,Math.floor(1e3*c.startTime)),r&&o.putMetric(d,Math.floor(1e3*r))}tt(o)}},t.createUserTimingTrace=function(e){tt(new t(e,!1,e))},t}();function at(t){var e=t;if(e&&void 0!==e.responseStart){var n=E.getInstance().getTimeOrigin(),r=Math.floor(1e3*(e.startTime+n)),i=e.responseStart?Math.floor(1e3*(e.responseStart-e.startTime)):void 0,o=Math.floor(1e3*(e.responseEnd-e.startTime));!function(t){var e=N.getInstance();if(e.instrumentationEnabled){var n=t.url,r=e.logEndPointUrl.split(\"?\")[0],i=e.flTransportEndpointUrl.split(\"?\")[0];n!==r&&n!==i&&e.loggingEnabled&&e.logNetworkAfterSampling&&setTimeout((function(){return Z(t,0)}),0)}}({url:e.name&&e.name.split(\"?\")[0],responsePayloadBytes:e.transferSize,startTimeUs:r,timeToResponseInitiatedUs:i,timeToResponseCompletedUs:o})}}function st(){k()&&(setTimeout((function(){return function(){var t=E.getInstance(),e=t.getEntriesByType(\"navigation\"),n=t.getEntriesByType(\"paint\");if(t.onFirstInputDelay){var r=setTimeout((function(){ot.createOobTrace(e,n),r=void 0}),5e3);t.onFirstInputDelay((function(t){r&&(clearTimeout(r),ot.createOobTrace(e,n,t))}))}else ot.createOobTrace(e,n)}()}),0),setTimeout((function(){return function(){for(var t=E.getInstance(),e=t.getEntriesByType(\"resource\"),n=0,r=e;n<r.length;n++){at(r[n])}t.setupObserver(\"resource\",at)}()}),0),setTimeout((function(){return function(){for(var t=E.getInstance(),e=t.getEntriesByType(\"measure\"),n=0,r=e;n<r.length;n++){ct(r[n])}t.setupObserver(\"measure\",ct)}()}),0))}function ct(t){var e=t.name;e.substring(0,g.length)!==g&&ot.createUserTimingTrace(e)}var ut=function(){function t(t){this.app=t,E.getInstance().requiredApisAvailable()&&Object(c.N)().then((function(t){t&&(Y||(Q(5500),Y=!0),V().then(st,st))})).catch((function(t){T.info(\"Environment doesn't support IndexedDB: \"+t)}))}return t.prototype.trace=function(t){return new ot(t)},Object.defineProperty(t.prototype,\"instrumentationEnabled\",{get:function(){return N.getInstance().instrumentationEnabled},set:function(t){N.getInstance().instrumentationEnabled=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"dataCollectionEnabled\",{get:function(){return N.getInstance().dataCollectionEnabled},set:function(t){N.getInstance().dataCollectionEnabled=t},enumerable:!1,configurable:!0}),t}();!function(t){var e=function(t,e){if(\"[DEFAULT]\"!==t.name)throw I.create(\"FB not default\");if(\"undefined\"===typeof window)throw I.create(\"no window\");return function(t){o=t}(window),N.getInstance().firebaseAppInstance=t,N.getInstance().installationsService=e,new ut(t)};t.INTERNAL.registerComponent(new p.a(\"performance\",(function(t){var n=t.getProvider(\"app\").getImmediate(),r=t.getProvider(\"installations\").getImmediate();return e(n,r)}),\"PUBLIC\")),t.registerVersion(\"@firebase/performance\",f)}(a.a)}}]);","map":{"version":3,"sources":["static/chunks/performance.9b12ed730dc5e9139e1a.js"],"names":["window","push","yoq/","module","__webpack_exports__","__webpack_require__","r","index_esm_a","apiInstance","windowInstance","index_esm","tslib_es6","util_dist_index_esm","logger_dist_index_esm","component_dist_index_esm","version","SDK_VERSION","TRACE_MEASURE_PREFIX","OOB_TRACE_PAGE_LOAD_PREFIX","FIRST_CONTENTFUL_PAINT_COUNTER_NAME","FIRST_INPUT_DELAY_COUNTER_NAME","CONFIG_LOCAL_STORAGE_KEY","CONFIG_EXPIRY_LOCAL_STORAGE_KEY","SERVICE_NAME","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","consoleLogger","logLevel","INFO","settingsServiceInstance","index_esm_Api","Api","this","create","performance","PerformanceObserver","windowLocation","location","navigator","document","cookieEnabled","localStorage","perfMetrics","onFirstInputDelay","prototype","getUrl","href","split","mark","name","measure","measureName","mark1","mark2","getEntriesByType","type","getEntriesByName","getTimeOrigin","timeOrigin","timing","navigationStart","requiredApisAvailable","fetch","Promise","Object","info","setupObserver","entryType","callback","list","_i","_a","getEntries","length","entry","observe","entryTypes","getInstance","undefined","mergeStrings","part1","part2","sizeDiff","resultArray","i","charAt","join","iid","VisibilityState","SettingsService","instrumentationEnabled","dataCollectionEnabled","loggingEnabled","tracesSamplingRate","networkRequestsSamplingRate","logEndPointUrl","flTransportEndpointUrl","transportKey","logSource","logTraceAfterSampling","logNetworkAfterSampling","configTimeToLive","getAppId","appId","firebaseAppInstance","options","getProjectId","projectId","getApiKey","apiKey","getFlTransportFullUrl","concat","getIid","RESERVED_ATTRIBUTE_PREFIXES","ATTRIBUTE_FORMAT_REGEX","RegExp","getServiceWorkerStatus","serviceWorker","controller","getVisibilityState","visibilityState","VISIBLE","HIDDEN","UNKNOWN","getEffectiveConnectionType","navigatorConnection","connection","effectiveType","REMOTE_CONFIG_SDK_VERSION","DEFAULT_CONFIGS","FIS_AUTH_PREFIX","getConfig","config","expiryString","getItem","expiry","Number","Date","now","configStringified","JSON","parse","getStoredConfig","processConfig","resolve","authTokenPromise","installationsService","getToken","then","authTokenVal","getAuthTokenPromise","authToken","configEndPoint","request","Request","method","headers","Authorization","body","stringify","app_instance_id","app_instance_id_token","app_id","app_version","sdk_version","response","ok","json","catch","COULD_NOT_GET_CONFIG_MSG","getRemoteConfig","setItem","String","storeConfig","entries","fpr_enabled","fpr_log_source","fpr_log_endpoint_url","fpr_log_transport_key","fpr_vc_network_request_sampling_rate","fpr_vc_trace_sampling_rate","shouldLogAfterSampling","samplingRate","Math","random","initializationPromise","initializationStatus","getInitializationPromise","readyState","handler_1","removeEventListener","addEventListener","getDocumentReadyComplete","iidPromise","getId","iidVal","getIidPromise","changeInitializationStatus","logger","DEFAULT_SEND_INTERVAL_MS","remainingTries","queue","isTransportSetup","processQueue","timeOffset","setTimeout","staged","splice","log_event","map","evt","source_extension_json_proto3","message","event_time_ms","eventTime","data","flTransportFullUrl","postToFlEndpoint","res","transportWait","nextRequestWaitMillis","requestOffset","isNaN","max","logResponseDetails","Array","isArray","responseAction","sendEventsToFl","request_time_ms","client_info","client_type","js_client_info","log_source","dispatchQueueEvents","addToQueue","sendLog","resource","resourceType","serializer","args","arguments","apply","transportHandler","logTrace","trace","settingsService","isAuto","sendTraceLog","networkRequest","networkRequestMetric","url","http_method","httpMethod","http_response_code","response_payload_bytes","responsePayloadBytes","client_start_time_us","startTimeUs","time_to_response_initiated_us","timeToResponseInitiatedUs","time_to_response_completed_us","timeToResponseCompletedUs","perfMetric","application_info","getApplicationInfo","network_request_metric","serializeNetworkRequest","traceMetric","is_auto","duration_us","durationUs","keys","counters","customAttributes","getAttributes","custom_attributes","trace_metric","serializeTrace","google_app_id","web_app_info","page_url","service_worker_status","visibility_state","effective_connection_type","application_process_state","oobMetrics","index_esm_Trace","Trace","traceMeasureName","state","api","randomId","floor","traceStartMark","TRACE_START_MARK_PREFIX","traceStopMark","TRACE_STOP_MARK_PREFIX","traceMeasure","calculateTraceMetrics","start","traceName","stop","record","startTime","duration","attributes","metrics","metric","incrementMetric","counter","numAsInteger","putMetric","startsWith","indexOf","customMetricName","providedValue","valueAsInteger","convertMetricValueToInteger","getMetric","putAttribute","attr","value","isValidName","some","prefix","match","isValidValue","isValidCustomAttributeValue","attributeName","attributeValue","getAttribute","removeAttribute","setStartTime","setDuration","perfMeasureEntries","perfMeasureEntry","createOobTrace","navigationTimings","paintTimings","firstInputDelay","route","timeOriginUs","domInteractive","domContentLoadedEventEnd","loadEventEnd","firstPaint","find","paintObject","firstContentfulPaint","createUserTimingTrace","createNetworkRequestEntry","performanceEntry","responseStart","responseEnd","networkRequestUrl","logEndpointUrl","flEndpointUrl","logNetworkRequest","transferSize","setupOobResources","timeoutId_1","fid","clearTimeout","setupOobTraces","resources","resources_1","setupNetworkRequests","measures","measures_1","setupUserTimingTraces","substring","index_esm_PerformanceController","PerformanceController","app","isAvailable","error","defineProperty","get","set","val","enumerable","configurable","instance","factoryMethod","installations","setupApi","INTERNAL","registerComponent","container","getProvider","getImmediate","registerVersion","registerPerformance"],"mappings":"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"},"name":"static/chunks/performance.9b12ed730dc5e9139e1a.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[26],{\n\n/***/ \"yoq/\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/@firebase/app/dist/index.esm.js\nvar index_esm = __webpack_require__(\"zIRd\");\n\n// EXTERNAL MODULE: ./node_modules/@firebase/installations/dist/index.esm.js\nvar dist_index_esm = __webpack_require__(\"fSjL\");\n\n// EXTERNAL MODULE: ./node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(\"mrSG\");\n\n// EXTERNAL MODULE: ./node_modules/@firebase/util/dist/index.esm.js\nvar util_dist_index_esm = __webpack_require__(\"qOnz\");\n\n// EXTERNAL MODULE: ./node_modules/@firebase/logger/dist/index.esm.js\nvar logger_dist_index_esm = __webpack_require__(\"q/0M\");\n\n// EXTERNAL MODULE: ./node_modules/@firebase/component/dist/index.esm.js\nvar component_dist_index_esm = __webpack_require__(\"/6Yf\");\n\n// CONCATENATED MODULE: ./node_modules/@firebase/performance/dist/index.esm.js\n\n\n\n\n\n\n\nvar index_esm_name = \"@firebase/performance\";\nvar version = \"0.4.5\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SDK_VERSION = version;\r\n/** The prefix for start User Timing marks used for creating Traces. */\r\nvar TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\r\n/** The prefix for stop User Timing marks used for creating Traces. */\r\nvar TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\r\n/** The prefix for User Timing measure used for creating Traces. */\r\nvar TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\r\n/** The prefix for out of the box page load Trace name. */\r\nvar OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\r\nvar FIRST_PAINT_COUNTER_NAME = '_fp';\r\nvar FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\r\nvar FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\r\nvar CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\r\nvar CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\r\nvar SERVICE = 'performance';\r\nvar SERVICE_NAME = 'Performance';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar index_esm_a;\r\nvar ERROR_DESCRIPTION_MAP = (index_esm_a = {},\r\n    index_esm_a[\"trace started\" /* TRACE_STARTED_BEFORE */] = 'Trace {$traceName} was started before.',\r\n    index_esm_a[\"trace stopped\" /* TRACE_STOPPED_BEFORE */] = 'Trace {$traceName} is not running.',\r\n    index_esm_a[\"nonpositive trace startTime\" /* NONPOSITIVE_TRACE_START_TIME */] = 'Trace {$traceName} startTime should be positive.',\r\n    index_esm_a[\"nonpositive trace duration\" /* NONPOSITIVE_TRACE_DURATION */] = 'Trace {$traceName} duration should be positive.',\r\n    index_esm_a[\"no window\" /* NO_WINDOW */] = 'Window is not available.',\r\n    index_esm_a[\"no app id\" /* NO_APP_ID */] = 'App id is not available.',\r\n    index_esm_a[\"no project id\" /* NO_PROJECT_ID */] = 'Project id is not available.',\r\n    index_esm_a[\"no api key\" /* NO_API_KEY */] = 'Api key is not available.',\r\n    index_esm_a[\"invalid cc log\" /* INVALID_CC_LOG */] = 'Attempted to queue invalid cc event',\r\n    index_esm_a[\"FB not default\" /* FB_NOT_DEFAULT */] = 'Performance can only start when Firebase app instance is the default one.',\r\n    index_esm_a[\"RC response not ok\" /* RC_NOT_OK */] = 'RC response is not ok',\r\n    index_esm_a[\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */] = 'Attribute name {$attributeName} is invalid.',\r\n    index_esm_a[\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */] = 'Attribute value {$attributeValue} is invalid.',\r\n    index_esm_a[\"invalid custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */] = 'Custom metric name {$customMetricName} is invalid',\r\n    index_esm_a[\"invalid String merger input\" /* INVALID_STRING_MERGER_PARAMETER */] = 'Input for String merger is invalid, contact support team to resolve.',\r\n    index_esm_a);\r\nvar ERROR_FACTORY = new util_dist_index_esm[\"b\" /* ErrorFactory */](SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar consoleLogger = new logger_dist_index_esm[\"b\" /* Logger */](SERVICE_NAME);\r\nconsoleLogger.logLevel = logger_dist_index_esm[\"a\" /* LogLevel */].INFO;\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar apiInstance;\r\nvar windowInstance;\r\n/**\r\n * This class holds a reference to various browser related objects injected by\r\n * set methods.\r\n */\r\nvar index_esm_Api = /** @class */ (function () {\r\n    function Api(window) {\r\n        this.window = window;\r\n        if (!window) {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        this.performance = window.performance;\r\n        this.PerformanceObserver = window.PerformanceObserver;\r\n        this.windowLocation = window.location;\r\n        this.navigator = window.navigator;\r\n        this.document = window.document;\r\n        if (this.navigator && this.navigator.cookieEnabled) {\r\n            // If user blocks cookies on the browser, accessing localStorage will\r\n            // throw an exception.\r\n            this.localStorage = window.localStorage;\r\n        }\r\n        if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\r\n            this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\r\n        }\r\n    }\r\n    Api.prototype.getUrl = function () {\r\n        // Do not capture the string query part of url.\r\n        return this.windowLocation.href.split('?')[0];\r\n    };\r\n    Api.prototype.mark = function (name) {\r\n        if (!this.performance || !this.performance.mark) {\r\n            return;\r\n        }\r\n        this.performance.mark(name);\r\n    };\r\n    Api.prototype.measure = function (measureName, mark1, mark2) {\r\n        if (!this.performance || !this.performance.measure) {\r\n            return;\r\n        }\r\n        this.performance.measure(measureName, mark1, mark2);\r\n    };\r\n    Api.prototype.getEntriesByType = function (type) {\r\n        if (!this.performance || !this.performance.getEntriesByType) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByType(type);\r\n    };\r\n    Api.prototype.getEntriesByName = function (name) {\r\n        if (!this.performance || !this.performance.getEntriesByName) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByName(name);\r\n    };\r\n    Api.prototype.getTimeOrigin = function () {\r\n        // Polyfill the time origin with performance.timing.navigationStart.\r\n        return (this.performance &&\r\n            (this.performance.timeOrigin || this.performance.timing.navigationStart));\r\n    };\r\n    Api.prototype.requiredApisAvailable = function () {\r\n        if (!fetch ||\r\n            !Promise ||\r\n            !this.navigator ||\r\n            !this.navigator.cookieEnabled) {\r\n            consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\r\n            return false;\r\n        }\r\n        if (!Object(util_dist_index_esm[\"w\" /* isIndexedDBAvailable */])()) {\r\n            consoleLogger.info('IndexedDB is not supported by current browswer');\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    Api.prototype.setupObserver = function (entryType, callback) {\r\n        if (!this.PerformanceObserver) {\r\n            return;\r\n        }\r\n        var observer = new this.PerformanceObserver(function (list) {\r\n            for (var _i = 0, _a = list.getEntries(); _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                // `entry` is a PerformanceEntry instance.\r\n                callback(entry);\r\n            }\r\n        });\r\n        // Start observing the entry types you care about.\r\n        observer.observe({ entryTypes: [entryType] });\r\n    };\r\n    Api.getInstance = function () {\r\n        if (apiInstance === undefined) {\r\n            apiInstance = new Api(windowInstance);\r\n        }\r\n        return apiInstance;\r\n    };\r\n    return Api;\r\n}());\r\nfunction setupApi(window) {\r\n    windowInstance = window;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction mergeStrings(part1, part2) {\r\n    var sizeDiff = part1.length - part2.length;\r\n    if (sizeDiff < 0 || sizeDiff > 1) {\r\n        throw ERROR_FACTORY.create(\"invalid String merger input\" /* INVALID_STRING_MERGER_PARAMETER */);\r\n    }\r\n    var resultArray = [];\r\n    for (var i = 0; i < part1.length; i++) {\r\n        resultArray.push(part1.charAt(i));\r\n        if (part2.length > i) {\r\n            resultArray.push(part2.charAt(i));\r\n        }\r\n    }\r\n    return resultArray.join('');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar settingsServiceInstance;\r\nvar SettingsService = /** @class */ (function () {\r\n    function SettingsService() {\r\n        // The variable which controls logging of automatic traces and HTTP/S network monitoring.\r\n        this.instrumentationEnabled = true;\r\n        // The variable which controls logging of custom traces.\r\n        this.dataCollectionEnabled = true;\r\n        // Configuration flags set through remote config.\r\n        this.loggingEnabled = false;\r\n        // Sampling rate between 0 and 1.\r\n        this.tracesSamplingRate = 1;\r\n        this.networkRequestsSamplingRate = 1;\r\n        // Address of logging service.\r\n        this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\r\n        // Performance event transport endpoint URL which should be compatible with proto3.\r\n        // New Address for transport service, not configurable via Remote Config.\r\n        this.flTransportEndpointUrl = mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\r\n        this.transportKey = mergeStrings('AzSC8r6ReiGqFMyfvgow', 'Iayx0u-XT3vksVM-pIV');\r\n        // Source type for performance event logs.\r\n        this.logSource = 462;\r\n        // Flags which control per session logging of traces and network requests.\r\n        this.logTraceAfterSampling = false;\r\n        this.logNetworkAfterSampling = false;\r\n        // TTL of config retrieved from remote config in hours.\r\n        this.configTimeToLive = 12;\r\n    }\r\n    SettingsService.prototype.getAppId = function () {\r\n        var appId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.appId;\r\n        if (!appId) {\r\n            throw ERROR_FACTORY.create(\"no app id\" /* NO_APP_ID */);\r\n        }\r\n        return appId;\r\n    };\r\n    SettingsService.prototype.getProjectId = function () {\r\n        var projectId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.projectId;\r\n        if (!projectId) {\r\n            throw ERROR_FACTORY.create(\"no project id\" /* NO_PROJECT_ID */);\r\n        }\r\n        return projectId;\r\n    };\r\n    SettingsService.prototype.getApiKey = function () {\r\n        var apiKey = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.apiKey;\r\n        if (!apiKey) {\r\n            throw ERROR_FACTORY.create(\"no api key\" /* NO_API_KEY */);\r\n        }\r\n        return apiKey;\r\n    };\r\n    SettingsService.prototype.getFlTransportFullUrl = function () {\r\n        return this.flTransportEndpointUrl.concat('?key=', this.transportKey);\r\n    };\r\n    SettingsService.getInstance = function () {\r\n        if (settingsServiceInstance === undefined) {\r\n            settingsServiceInstance = new SettingsService();\r\n        }\r\n        return settingsServiceInstance;\r\n    };\r\n    return SettingsService;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar iid;\r\nfunction getIidPromise() {\r\n    var iidPromise = SettingsService.getInstance().installationsService.getId();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    iidPromise.then(function (iidVal) {\r\n        iid = iidVal;\r\n    });\r\n    return iidPromise;\r\n}\r\n// This method should be used after the iid is retrieved by getIidPromise method.\r\nfunction getIid() {\r\n    return iid;\r\n}\r\nfunction getAuthTokenPromise() {\r\n    var authTokenPromise = SettingsService.getInstance().installationsService.getToken();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    authTokenPromise.then(function (authTokenVal) {\r\n    });\r\n    return authTokenPromise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityState;\r\n(function (VisibilityState) {\r\n    VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\r\n    VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\r\n})(VisibilityState || (VisibilityState = {}));\r\nvar RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\r\nvar ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\r\nvar MAX_ATTRIBUTE_NAME_LENGTH = 40;\r\nvar MAX_ATTRIBUTE_VALUE_LENGTH = 100;\r\nfunction getServiceWorkerStatus() {\r\n    var navigator = index_esm_Api.getInstance().navigator;\r\n    if ('serviceWorker' in navigator) {\r\n        if (navigator.serviceWorker.controller) {\r\n            return 2 /* CONTROLLED */;\r\n        }\r\n        else {\r\n            return 3 /* UNCONTROLLED */;\r\n        }\r\n    }\r\n    else {\r\n        return 1 /* UNSUPPORTED */;\r\n    }\r\n}\r\nfunction getVisibilityState() {\r\n    var document = index_esm_Api.getInstance().document;\r\n    var visibilityState = document.visibilityState;\r\n    switch (visibilityState) {\r\n        case 'visible':\r\n            return VisibilityState.VISIBLE;\r\n        case 'hidden':\r\n            return VisibilityState.HIDDEN;\r\n        default:\r\n            return VisibilityState.UNKNOWN;\r\n    }\r\n}\r\nfunction getEffectiveConnectionType() {\r\n    var navigator = index_esm_Api.getInstance().navigator;\r\n    var navigatorConnection = navigator.connection;\r\n    var effectiveType = navigatorConnection && navigatorConnection.effectiveType;\r\n    switch (effectiveType) {\r\n        case 'slow-2g':\r\n            return 1 /* CONNECTION_SLOW_2G */;\r\n        case '2g':\r\n            return 2 /* CONNECTION_2G */;\r\n        case '3g':\r\n            return 3 /* CONNECTION_3G */;\r\n        case '4g':\r\n            return 4 /* CONNECTION_4G */;\r\n        default:\r\n            return 0 /* UNKNOWN */;\r\n    }\r\n}\r\nfunction isValidCustomAttributeName(name) {\r\n    if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\r\n        return false;\r\n    }\r\n    var matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(function (prefix) {\r\n        return name.startsWith(prefix);\r\n    });\r\n    return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\r\n}\r\nfunction isValidCustomAttributeValue(value) {\r\n    return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar REMOTE_CONFIG_SDK_VERSION = '0.0.1';\r\n// These values will be used if the remote config object is successfully\r\n// retrieved, but the template does not have these fields.\r\nvar DEFAULT_CONFIGS = {\r\n    loggingEnabled: true\r\n};\r\nvar FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\r\nfunction getConfig(iid) {\r\n    var config = getStoredConfig();\r\n    if (config) {\r\n        processConfig(config);\r\n        return Promise.resolve();\r\n    }\r\n    return getRemoteConfig(iid)\r\n        .then(processConfig)\r\n        .then(function (config) { return storeConfig(config); }, \r\n    /** Do nothing for error, use defaults set in settings service. */\r\n    function () { });\r\n}\r\nfunction getStoredConfig() {\r\n    var localStorage = index_esm_Api.getInstance().localStorage;\r\n    if (!localStorage) {\r\n        return;\r\n    }\r\n    var expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\r\n    if (!expiryString || !configValid(expiryString)) {\r\n        return;\r\n    }\r\n    var configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\r\n    if (!configStringified) {\r\n        return;\r\n    }\r\n    try {\r\n        var configResponse = JSON.parse(configStringified);\r\n        return configResponse;\r\n    }\r\n    catch (_a) {\r\n        return;\r\n    }\r\n}\r\nfunction storeConfig(config) {\r\n    var localStorage = index_esm_Api.getInstance().localStorage;\r\n    if (!config || !localStorage) {\r\n        return;\r\n    }\r\n    localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\r\n    localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() +\r\n        SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\r\n}\r\nvar COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\r\nfunction getRemoteConfig(iid) {\r\n    // Perf needs auth token only to retrieve remote config.\r\n    return getAuthTokenPromise()\r\n        .then(function (authToken) {\r\n        var projectId = SettingsService.getInstance().getProjectId();\r\n        var configEndPoint = \"https://firebaseremoteconfig.googleapis.com/v1/projects/\" + projectId + \"/namespaces/fireperf:fetch?key=\" + SettingsService.getInstance().getApiKey();\r\n        var request = new Request(configEndPoint, {\r\n            method: 'POST',\r\n            headers: { Authorization: FIS_AUTH_PREFIX + \" \" + authToken },\r\n            /* eslint-disable camelcase */\r\n            body: JSON.stringify({\r\n                app_instance_id: iid,\r\n                app_instance_id_token: authToken,\r\n                app_id: SettingsService.getInstance().getAppId(),\r\n                app_version: SDK_VERSION,\r\n                sdk_version: REMOTE_CONFIG_SDK_VERSION\r\n            })\r\n            /* eslint-enable camelcase */\r\n        });\r\n        return fetch(request).then(function (response) {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            // In case response is not ok. This will be caught by catch.\r\n            throw ERROR_FACTORY.create(\"RC response not ok\" /* RC_NOT_OK */);\r\n        });\r\n    })\r\n        .catch(function () {\r\n        consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\r\n        return undefined;\r\n    });\r\n}\r\n/**\r\n * Processes config coming either from calling RC or from local storage.\r\n * This method only runs if call is successful or config in storage\r\n * is valid.\r\n */\r\nfunction processConfig(config) {\r\n    if (!config) {\r\n        return config;\r\n    }\r\n    var settingsServiceInstance = SettingsService.getInstance();\r\n    var entries = config.entries || {};\r\n    if (entries.fpr_enabled !== undefined) {\r\n        // TODO: Change the assignment of loggingEnabled once the received type is\r\n        // known.\r\n        settingsServiceInstance.loggingEnabled =\r\n            String(entries.fpr_enabled) === 'true';\r\n    }\r\n    else {\r\n        // Config retrieved successfully, but there is no fpr_enabled in template.\r\n        // Use secondary configs value.\r\n        settingsServiceInstance.loggingEnabled = DEFAULT_CONFIGS.loggingEnabled;\r\n    }\r\n    if (entries.fpr_log_source) {\r\n        settingsServiceInstance.logSource = Number(entries.fpr_log_source);\r\n    }\r\n    if (entries.fpr_log_endpoint_url) {\r\n        settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\r\n    }\r\n    // Key from Remote Config has to be non-empty string, otherwsie use local value.\r\n    if (entries.fpr_log_transport_key) {\r\n        settingsServiceInstance.transportKey = entries.fpr_log_transport_key;\r\n    }\r\n    if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\r\n        settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\r\n    }\r\n    if (entries.fpr_vc_trace_sampling_rate !== undefined) {\r\n        settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\r\n    }\r\n    // Set the per session trace and network logging flags.\r\n    settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\r\n    settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\r\n    return config;\r\n}\r\nfunction configValid(expiry) {\r\n    return Number(expiry) > Date.now();\r\n}\r\nfunction shouldLogAfterSampling(samplingRate) {\r\n    return Math.random() <= samplingRate;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar initializationStatus = 1 /* notInitialized */;\r\nvar initializationPromise;\r\nfunction getInitializationPromise() {\r\n    initializationStatus = 2 /* initializationPending */;\r\n    initializationPromise = initializationPromise || initializePerf();\r\n    return initializationPromise;\r\n}\r\nfunction isPerfInitialized() {\r\n    return initializationStatus === 3 /* initialized */;\r\n}\r\nfunction initializePerf() {\r\n    return getDocumentReadyComplete()\r\n        .then(function () { return getIidPromise(); })\r\n        .then(function (iid) { return getConfig(iid); })\r\n        .then(function () { return changeInitializationStatus(); }, function () { return changeInitializationStatus(); });\r\n}\r\n/**\r\n * Returns a promise which resolves whenever the document readystate is complete or\r\n * immediately if it is called after page load complete.\r\n */\r\nfunction getDocumentReadyComplete() {\r\n    var document = index_esm_Api.getInstance().document;\r\n    return new Promise(function (resolve) {\r\n        if (document && document.readyState !== 'complete') {\r\n            var handler_1 = function () {\r\n                if (document.readyState === 'complete') {\r\n                    document.removeEventListener('readystatechange', handler_1);\r\n                    resolve();\r\n                }\r\n            };\r\n            document.addEventListener('readystatechange', handler_1);\r\n        }\r\n        else {\r\n            resolve();\r\n        }\r\n    });\r\n}\r\nfunction changeInitializationStatus() {\r\n    initializationStatus = 3 /* initialized */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\r\nvar INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\r\n// If end point does not work, the call will be tried for these many times.\r\nvar DEFAULT_REMAINING_TRIES = 3;\r\nvar MAX_EVENT_COUNT_PER_REQUEST = 1000;\r\nvar remainingTries = DEFAULT_REMAINING_TRIES;\r\n/* eslint-enable camelcase */\r\nvar queue = [];\r\nvar isTransportSetup = false;\r\nfunction setupTransportService() {\r\n    if (!isTransportSetup) {\r\n        processQueue(INITIAL_SEND_TIME_DELAY_MS);\r\n        isTransportSetup = true;\r\n    }\r\n}\r\nfunction processQueue(timeOffset) {\r\n    setTimeout(function () {\r\n        // If there is no remainingTries left, stop retrying.\r\n        if (remainingTries === 0) {\r\n            return;\r\n        }\r\n        // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\r\n        if (!queue.length) {\r\n            return processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n        }\r\n        dispatchQueueEvents();\r\n    }, timeOffset);\r\n}\r\nfunction dispatchQueueEvents() {\r\n    // Extract events up to the maximum cap of single logRequest from top of \"official queue\".\r\n    // The staged events will be used for current logRequest attempt, remaining events will be kept\r\n    // for next attempt.\r\n    var staged = queue.splice(0, MAX_EVENT_COUNT_PER_REQUEST);\r\n    /* eslint-disable camelcase */\r\n    // We will pass the JSON serialized event to the backend.\r\n    var log_event = staged.map(function (evt) { return ({\r\n        source_extension_json_proto3: evt.message,\r\n        event_time_ms: String(evt.eventTime)\r\n    }); });\r\n    var data = {\r\n        request_time_ms: String(Date.now()),\r\n        client_info: {\r\n            client_type: 1,\r\n            js_client_info: {}\r\n        },\r\n        log_source: SettingsService.getInstance().logSource,\r\n        log_event: log_event\r\n    };\r\n    /* eslint-enable camelcase */\r\n    sendEventsToFl(data, staged).catch(function () {\r\n        // If the request fails for some reason, add the events that were attempted\r\n        // back to the primary queue to retry later.\r\n        queue = Object(tslib_es6[\"g\" /* __spreadArrays */])(staged, queue);\r\n        remainingTries--;\r\n        consoleLogger.info(\"Tries left: \" + remainingTries + \".\");\r\n        processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n    });\r\n}\r\nfunction sendEventsToFl(data, staged) {\r\n    return postToFlEndpoint(data)\r\n        .then(function (res) {\r\n        if (!res.ok) {\r\n            consoleLogger.info('Call to Firebase backend failed.');\r\n        }\r\n        return res.json();\r\n    })\r\n        .then(function (res) {\r\n        // Find the next call wait time from the response.\r\n        var transportWait = Number(res.nextRequestWaitMillis);\r\n        var requestOffset = DEFAULT_SEND_INTERVAL_MS;\r\n        if (!isNaN(transportWait)) {\r\n            requestOffset = Math.max(transportWait, requestOffset);\r\n        }\r\n        // Delete request if response include RESPONSE_ACTION_UNKNOWN or DELETE_REQUEST action.\r\n        // Otherwise, retry request using normal scheduling if response include RETRY_REQUEST_LATER.\r\n        var logResponseDetails = res.logResponseDetails;\r\n        if (Array.isArray(logResponseDetails) &&\r\n            logResponseDetails.length > 0 &&\r\n            logResponseDetails[0].responseAction === 'RETRY_REQUEST_LATER') {\r\n            queue = Object(tslib_es6[\"g\" /* __spreadArrays */])(staged, queue);\r\n            consoleLogger.info(\"Retry transport request later.\");\r\n        }\r\n        remainingTries = DEFAULT_REMAINING_TRIES;\r\n        // Schedule the next process.\r\n        processQueue(requestOffset);\r\n    });\r\n}\r\nfunction postToFlEndpoint(data) {\r\n    var flTransportFullUrl = SettingsService.getInstance().getFlTransportFullUrl();\r\n    return fetch(flTransportFullUrl, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data)\r\n    });\r\n}\r\nfunction addToQueue(evt) {\r\n    if (!evt.eventTime || !evt.message) {\r\n        throw ERROR_FACTORY.create(\"invalid cc log\" /* INVALID_CC_LOG */);\r\n    }\r\n    // Add the new event to the queue.\r\n    queue = Object(tslib_es6[\"g\" /* __spreadArrays */])(queue, [evt]);\r\n}\r\n/** Log handler for cc service to send the performance logs to the server. */\r\nfunction transportHandler(\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nserializer) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        var message = serializer.apply(void 0, args);\r\n        addToQueue({\r\n            message: message,\r\n            eventTime: Date.now()\r\n        });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-enble camelcase */\r\nvar logger;\r\n// This method is not called before initialization.\r\nfunction sendLog(resource, resourceType) {\r\n    if (!logger) {\r\n        logger = transportHandler(serializer);\r\n    }\r\n    logger(resource, resourceType);\r\n}\r\nfunction logTrace(trace) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log if trace is auto generated and instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled && trace.isAuto) {\r\n        return;\r\n    }\r\n    // Do not log if trace is custom and data collection is disabled.\r\n    if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\r\n        return;\r\n    }\r\n    // Do not log if required apis are not available.\r\n    if (!index_esm_Api.getInstance().requiredApisAvailable()) {\r\n        return;\r\n    }\r\n    // Only log the page load auto traces if page is visible.\r\n    if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\r\n        return;\r\n    }\r\n    if (isPerfInitialized()) {\r\n        sendTraceLog(trace);\r\n    }\r\n    else {\r\n        // Custom traces can be used before the initialization but logging\r\n        // should wait until after.\r\n        getInitializationPromise().then(function () { return sendTraceLog(trace); }, function () { return sendTraceLog(trace); });\r\n    }\r\n}\r\nfunction sendTraceLog(trace) {\r\n    if (!getIid()) {\r\n        return;\r\n    }\r\n    var settingsService = SettingsService.getInstance();\r\n    if (!settingsService.loggingEnabled ||\r\n        !settingsService.logTraceAfterSampling) {\r\n        return;\r\n    }\r\n    setTimeout(function () { return sendLog(trace, 1 /* Trace */); }, 0);\r\n}\r\nfunction logNetworkRequest(networkRequest) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log network requests if instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled) {\r\n        return;\r\n    }\r\n    // Do not log the js sdk's call to transport service domain to avoid unnecessary cycle.\r\n    // Need to blacklist both old and new endpoints to avoid migration gap.\r\n    var networkRequestUrl = networkRequest.url;\r\n    // Blacklist old log endpoint and new transport endpoint.\r\n    // Because Performance SDK doesn't instrument requests sent from SDK itself.\r\n    var logEndpointUrl = settingsService.logEndPointUrl.split('?')[0];\r\n    var flEndpointUrl = settingsService.flTransportEndpointUrl.split('?')[0];\r\n    if (networkRequestUrl === logEndpointUrl ||\r\n        networkRequestUrl === flEndpointUrl) {\r\n        return;\r\n    }\r\n    if (!settingsService.loggingEnabled ||\r\n        !settingsService.logNetworkAfterSampling) {\r\n        return;\r\n    }\r\n    setTimeout(function () { return sendLog(networkRequest, 0 /* NetworkRequest */); }, 0);\r\n}\r\nfunction serializer(resource, resourceType) {\r\n    if (resourceType === 0 /* NetworkRequest */) {\r\n        return serializeNetworkRequest(resource);\r\n    }\r\n    return serializeTrace(resource);\r\n}\r\nfunction serializeNetworkRequest(networkRequest) {\r\n    var networkRequestMetric = {\r\n        url: networkRequest.url,\r\n        http_method: networkRequest.httpMethod || 0,\r\n        http_response_code: 200,\r\n        response_payload_bytes: networkRequest.responsePayloadBytes,\r\n        client_start_time_us: networkRequest.startTimeUs,\r\n        time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\r\n        time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\r\n    };\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        network_request_metric: networkRequestMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction serializeTrace(trace) {\r\n    var traceMetric = {\r\n        name: trace.name,\r\n        is_auto: trace.isAuto,\r\n        client_start_time_us: trace.startTimeUs,\r\n        duration_us: trace.durationUs\r\n    };\r\n    if (Object.keys(trace.counters).length !== 0) {\r\n        traceMetric.counters = trace.counters;\r\n    }\r\n    var customAttributes = trace.getAttributes();\r\n    if (Object.keys(customAttributes).length !== 0) {\r\n        traceMetric.custom_attributes = customAttributes;\r\n    }\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        trace_metric: traceMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction getApplicationInfo() {\r\n    return {\r\n        google_app_id: SettingsService.getInstance().getAppId(),\r\n        app_instance_id: getIid(),\r\n        web_app_info: {\r\n            sdk_version: SDK_VERSION,\r\n            page_url: index_esm_Api.getInstance().getUrl(),\r\n            service_worker_status: getServiceWorkerStatus(),\r\n            visibility_state: getVisibilityState(),\r\n            effective_connection_type: getEffectiveConnectionType()\r\n        },\r\n        application_process_state: 0\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_METRIC_NAME_LENGTH = 100;\r\nvar RESERVED_AUTO_PREFIX = '_';\r\nvar oobMetrics = [\r\n    FIRST_PAINT_COUNTER_NAME,\r\n    FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\r\n    FIRST_INPUT_DELAY_COUNTER_NAME\r\n];\r\n/**\r\n * Returns true if the metric is custom and does not start with reserved prefix, or if\r\n * the metric is one of out of the box page load trace metrics.\r\n */\r\nfunction isValidMetricName(name, traceName) {\r\n    if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\r\n        return false;\r\n    }\r\n    return ((traceName &&\r\n        traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) &&\r\n        oobMetrics.indexOf(name) > -1) ||\r\n        !name.startsWith(RESERVED_AUTO_PREFIX));\r\n}\r\n/**\r\n * Converts the provided value to an integer value to be used in case of a metric.\r\n * @param providedValue Provided number value of the metric that needs to be converted to an integer.\r\n *\r\n * @returns Converted integer number to be set for the metric.\r\n */\r\nfunction convertMetricValueToInteger(providedValue) {\r\n    var valueAsInteger = Math.floor(providedValue);\r\n    if (valueAsInteger < providedValue) {\r\n        consoleLogger.info(\"Metric value should be an Integer, setting the value as : \" + valueAsInteger + \".\");\r\n    }\r\n    return valueAsInteger;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar index_esm_Trace = /** @class */ (function () {\r\n    /**\r\n     * @param name The name of the trace.\r\n     * @param isAuto If the trace is auto-instrumented.\r\n     * @param traceMeasureName The name of the measure marker in user timing specification. This field\r\n     * is only set when the trace is built for logging when the user directly uses the user timing\r\n     * api (performance.mark and performance.measure).\r\n     */\r\n    function Trace(name, isAuto, traceMeasureName) {\r\n        if (isAuto === void 0) { isAuto = false; }\r\n        this.name = name;\r\n        this.isAuto = isAuto;\r\n        this.state = 1 /* UNINITIALIZED */;\r\n        this.customAttributes = {};\r\n        this.counters = {};\r\n        this.api = index_esm_Api.getInstance();\r\n        this.randomId = Math.floor(Math.random() * 1000000);\r\n        if (!this.isAuto) {\r\n            this.traceStartMark = TRACE_START_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceStopMark = TRACE_STOP_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceMeasure =\r\n                traceMeasureName ||\r\n                    TRACE_MEASURE_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            if (traceMeasureName) {\r\n                // For the case of direct user timing traces, no start stop will happen. The measure object\r\n                // is already available.\r\n                this.calculateTraceMetrics();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Starts a trace. The measurement of the duration starts at this point.\r\n     */\r\n    Trace.prototype.start = function () {\r\n        if (this.state !== 1 /* UNINITIALIZED */) {\r\n            throw ERROR_FACTORY.create(\"trace started\" /* TRACE_STARTED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.api.mark(this.traceStartMark);\r\n        this.state = 2 /* RUNNING */;\r\n    };\r\n    /**\r\n     * Stops the trace. The measurement of the duration of the trace stops at this point and trace\r\n     * is logged.\r\n     */\r\n    Trace.prototype.stop = function () {\r\n        if (this.state !== 2 /* RUNNING */) {\r\n            throw ERROR_FACTORY.create(\"trace stopped\" /* TRACE_STOPPED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.state = 3 /* TERMINATED */;\r\n        this.api.mark(this.traceStopMark);\r\n        this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\r\n        this.calculateTraceMetrics();\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Records a trace with predetermined values. If this method is used a trace is created and logged\r\n     * directly. No need to use start and stop methods.\r\n     * @param startTime Trace start time since epoch in millisec\r\n     * @param duration The duraction of the trace in millisec\r\n     * @param options An object which can optionally hold maps of custom metrics and custom attributes\r\n     */\r\n    Trace.prototype.record = function (startTime, duration, options) {\r\n        if (startTime <= 0) {\r\n            throw ERROR_FACTORY.create(\"nonpositive trace startTime\" /* NONPOSITIVE_TRACE_START_TIME */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        if (duration <= 0) {\r\n            throw ERROR_FACTORY.create(\"nonpositive trace duration\" /* NONPOSITIVE_TRACE_DURATION */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.durationUs = Math.floor(duration * 1000);\r\n        this.startTimeUs = Math.floor(startTime * 1000);\r\n        if (options && options.attributes) {\r\n            this.customAttributes = Object(tslib_es6[\"a\" /* __assign */])({}, options.attributes);\r\n        }\r\n        if (options && options.metrics) {\r\n            for (var _i = 0, _a = Object.keys(options.metrics); _i < _a.length; _i++) {\r\n                var metric = _a[_i];\r\n                if (!isNaN(Number(options.metrics[metric]))) {\r\n                    this.counters[metric] = Number(Math.floor(options.metrics[metric]));\r\n                }\r\n            }\r\n        }\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\r\n     * custom metric if one with the given name does not exist. The value will be floored down to an\r\n     * integer.\r\n     * @param counter Name of the custom metric\r\n     * @param numAsInteger Increment by value\r\n     */\r\n    Trace.prototype.incrementMetric = function (counter, numAsInteger) {\r\n        if (numAsInteger === void 0) { numAsInteger = 1; }\r\n        if (this.counters[counter] === undefined) {\r\n            this.putMetric(counter, numAsInteger);\r\n        }\r\n        else {\r\n            this.putMetric(counter, this.counters[counter] + numAsInteger);\r\n        }\r\n    };\r\n    /**\r\n     * Sets a custom metric to a specified value. Will create a new custom metric if one with the\r\n     * given name does not exist. The value will be floored down to an integer.\r\n     * @param counter Name of the custom metric\r\n     * @param numAsInteger Set custom metric to this value\r\n     */\r\n    Trace.prototype.putMetric = function (counter, numAsInteger) {\r\n        if (isValidMetricName(counter, this.name)) {\r\n            this.counters[counter] = convertMetricValueToInteger(numAsInteger);\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"invalid custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */, {\r\n                customMetricName: counter\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Returns the value of the custom metric by that name. If a custom metric with that name does\r\n     * not exist will return zero.\r\n     * @param counter\r\n     */\r\n    Trace.prototype.getMetric = function (counter) {\r\n        return this.counters[counter] || 0;\r\n    };\r\n    /**\r\n     * Sets a custom attribute of a trace to a certain value.\r\n     * @param attr\r\n     * @param value\r\n     */\r\n    Trace.prototype.putAttribute = function (attr, value) {\r\n        var isValidName = isValidCustomAttributeName(attr);\r\n        var isValidValue = isValidCustomAttributeValue(value);\r\n        if (isValidName && isValidValue) {\r\n            this.customAttributes[attr] = value;\r\n            return;\r\n        }\r\n        // Throw appropriate error when the attribute name or value is invalid.\r\n        if (!isValidName) {\r\n            throw ERROR_FACTORY.create(\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */, {\r\n                attributeName: attr\r\n            });\r\n        }\r\n        if (!isValidValue) {\r\n            throw ERROR_FACTORY.create(\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */, {\r\n                attributeValue: value\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Retrieves the value a custom attribute of a trace is set to.\r\n     * @param attr\r\n     */\r\n    Trace.prototype.getAttribute = function (attr) {\r\n        return this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.removeAttribute = function (attr) {\r\n        if (this.customAttributes[attr] === undefined) {\r\n            return;\r\n        }\r\n        delete this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.getAttributes = function () {\r\n        return Object(tslib_es6[\"a\" /* __assign */])({}, this.customAttributes);\r\n    };\r\n    Trace.prototype.setStartTime = function (startTime) {\r\n        this.startTimeUs = startTime;\r\n    };\r\n    Trace.prototype.setDuration = function (duration) {\r\n        this.durationUs = duration;\r\n    };\r\n    /**\r\n     * Calculates and assigns the duration and start time of the trace using the measure performance\r\n     * entry.\r\n     */\r\n    Trace.prototype.calculateTraceMetrics = function () {\r\n        var perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\r\n        var perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\r\n        if (perfMeasureEntry) {\r\n            this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\r\n            this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\r\n        }\r\n    };\r\n    /**\r\n     * @param navigationTimings A single element array which contains the navigationTIming object of\r\n     * the page load\r\n     * @param paintTimings A array which contains paintTiming object of the page load\r\n     * @param firstInputDelay First input delay in millisec\r\n     */\r\n    Trace.createOobTrace = function (navigationTimings, paintTimings, firstInputDelay) {\r\n        var route = index_esm_Api.getInstance().getUrl();\r\n        if (!route) {\r\n            return;\r\n        }\r\n        var trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\r\n        var timeOriginUs = Math.floor(index_esm_Api.getInstance().getTimeOrigin() * 1000);\r\n        trace.setStartTime(timeOriginUs);\r\n        // navigationTimings includes only one element.\r\n        if (navigationTimings && navigationTimings[0]) {\r\n            trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\r\n            trace.putMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\r\n            trace.putMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\r\n            trace.putMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\r\n        }\r\n        var FIRST_PAINT = 'first-paint';\r\n        var FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\r\n        if (paintTimings) {\r\n            var firstPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_PAINT; });\r\n            if (firstPaint && firstPaint.startTime) {\r\n                trace.putMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\r\n            }\r\n            var firstContentfulPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_CONTENTFUL_PAINT; });\r\n            if (firstContentfulPaint && firstContentfulPaint.startTime) {\r\n                trace.putMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\r\n            }\r\n            if (firstInputDelay) {\r\n                trace.putMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\r\n            }\r\n        }\r\n        logTrace(trace);\r\n    };\r\n    Trace.createUserTimingTrace = function (measureName) {\r\n        var trace = new Trace(measureName, false, measureName);\r\n        logTrace(trace);\r\n    };\r\n    return Trace;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createNetworkRequestEntry(entry) {\r\n    var performanceEntry = entry;\r\n    if (!performanceEntry || performanceEntry.responseStart === undefined) {\r\n        return;\r\n    }\r\n    var timeOrigin = index_esm_Api.getInstance().getTimeOrigin();\r\n    var startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\r\n    var timeToResponseInitiatedUs = performanceEntry.responseStart\r\n        ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000)\r\n        : undefined;\r\n    var timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000);\r\n    // Remove the query params from logged network request url.\r\n    var url = performanceEntry.name && performanceEntry.name.split('?')[0];\r\n    var networkRequest = {\r\n        url: url,\r\n        responsePayloadBytes: performanceEntry.transferSize,\r\n        startTimeUs: startTimeUs,\r\n        timeToResponseInitiatedUs: timeToResponseInitiatedUs,\r\n        timeToResponseCompletedUs: timeToResponseCompletedUs\r\n    };\r\n    logNetworkRequest(networkRequest);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FID_WAIT_TIME_MS = 5000;\r\nfunction setupOobResources() {\r\n    // Do not initialize unless iid is available.\r\n    if (!getIid()) {\r\n        return;\r\n    }\r\n    // The load event might not have fired yet, and that means performance navigation timing\r\n    // object has a duration of 0. The setup should run after all current tasks in js queue.\r\n    setTimeout(function () { return setupOobTraces(); }, 0);\r\n    setTimeout(function () { return setupNetworkRequests(); }, 0);\r\n    setTimeout(function () { return setupUserTimingTraces(); }, 0);\r\n}\r\nfunction setupNetworkRequests() {\r\n    var api = index_esm_Api.getInstance();\r\n    var resources = api.getEntriesByType('resource');\r\n    for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\r\n        var resource = resources_1[_i];\r\n        createNetworkRequestEntry(resource);\r\n    }\r\n    api.setupObserver('resource', createNetworkRequestEntry);\r\n}\r\nfunction setupOobTraces() {\r\n    var api = index_esm_Api.getInstance();\r\n    var navigationTimings = api.getEntriesByType('navigation');\r\n    var paintTimings = api.getEntriesByType('paint');\r\n    // If First Input Desly polyfill is added to the page, report the fid value.\r\n    // https://github.com/GoogleChromeLabs/first-input-delay\r\n    if (api.onFirstInputDelay) {\r\n        // If the fid call back is not called for certain time, continue without it.\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        var timeoutId_1 = setTimeout(function () {\r\n            index_esm_Trace.createOobTrace(navigationTimings, paintTimings);\r\n            timeoutId_1 = undefined;\r\n        }, FID_WAIT_TIME_MS);\r\n        api.onFirstInputDelay(function (fid) {\r\n            if (timeoutId_1) {\r\n                clearTimeout(timeoutId_1);\r\n                index_esm_Trace.createOobTrace(navigationTimings, paintTimings, fid);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        index_esm_Trace.createOobTrace(navigationTimings, paintTimings);\r\n    }\r\n}\r\nfunction setupUserTimingTraces() {\r\n    var api = index_esm_Api.getInstance();\r\n    // Run through the measure performance entries collected up to this point.\r\n    var measures = api.getEntriesByType('measure');\r\n    for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\r\n        var measure = measures_1[_i];\r\n        createUserTimingTrace(measure);\r\n    }\r\n    // Setup an observer to capture the measures from this point on.\r\n    api.setupObserver('measure', createUserTimingTrace);\r\n}\r\nfunction createUserTimingTrace(measure) {\r\n    var measureName = measure.name;\r\n    // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\r\n    if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) ===\r\n        TRACE_MEASURE_PREFIX) {\r\n        return;\r\n    }\r\n    index_esm_Trace.createUserTimingTrace(measureName);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar index_esm_PerformanceController = /** @class */ (function () {\r\n    function PerformanceController(app) {\r\n        this.app = app;\r\n        if (index_esm_Api.getInstance().requiredApisAvailable()) {\r\n            Object(util_dist_index_esm[\"N\" /* validateIndexedDBOpenable */])()\r\n                .then(function (isAvailable) {\r\n                if (isAvailable) {\r\n                    setupTransportService();\r\n                    getInitializationPromise().then(setupOobResources, setupOobResources);\r\n                }\r\n            })\r\n                .catch(function (error) {\r\n                consoleLogger.info(\"Environment doesn't support IndexedDB: \" + error);\r\n            });\r\n        }\r\n    }\r\n    PerformanceController.prototype.trace = function (name) {\r\n        return new index_esm_Trace(name);\r\n    };\r\n    Object.defineProperty(PerformanceController.prototype, \"instrumentationEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().instrumentationEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().instrumentationEnabled = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PerformanceController.prototype, \"dataCollectionEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().dataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().dataCollectionEnabled = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return PerformanceController;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nfunction registerPerformance(instance) {\r\n    var factoryMethod = function (app, installations) {\r\n        if (app.name !== DEFAULT_ENTRY_NAME) {\r\n            throw ERROR_FACTORY.create(\"FB not default\" /* FB_NOT_DEFAULT */);\r\n        }\r\n        if (typeof window === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        setupApi(window);\r\n        SettingsService.getInstance().firebaseAppInstance = app;\r\n        SettingsService.getInstance().installationsService = installations;\r\n        return new index_esm_PerformanceController(app);\r\n    };\r\n    // Register performance with firebase-app.\r\n    instance.INTERNAL.registerComponent(new component_dist_index_esm[\"a\" /* Component */]('performance', function (container) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        // The following call will always succeed because perf has `import '@firebase/installations'`\r\n        var installations = container\r\n            .getProvider('installations')\r\n            .getImmediate();\r\n        return factoryMethod(app, installations);\r\n    }, \"PUBLIC\" /* PUBLIC */));\r\n    instance.registerVersion(index_esm_name, version);\r\n}\r\nregisterPerformance(index_esm[\"a\" /* default */]);\n\n\n//# sourceMappingURL=index.esm.js.map\n\n// CONCATENATED MODULE: ./node_modules/firebase/performance/dist/index.esm.js\n\n//# sourceMappingURL=index.esm.js.map\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/home/raul/Documentos/Proyectos/Flexxo/flexxo-web/node_modules/@firebase/performance/dist/index.esm.js","/home/raul/Documentos/Proyectos/Flexxo/flexxo-web/node_modules/firebase/performance/dist/index.esm.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAqC;AACJ;AACgB;AAC8C;AAC3C;AACJ;;AAEhD,IAAI,cAAI;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAE;AACN,6BAA6B,WAAE,KAAK;AACpC,IAAI,WAAE,uDAAuD,WAAW;AACxE,IAAI,WAAE,uDAAuD,WAAW;AACxE,IAAI,WAAE,6EAA6E,WAAW;AAC9F,IAAI,WAAE,0EAA0E,WAAW;AAC3F,IAAI,WAAE;AACN,IAAI,WAAE;AACN,IAAI,WAAE;AACN,IAAI,WAAE;AACN,IAAI,WAAE;AACN,IAAI,WAAE;AACN,IAAI,WAAE;AACN,IAAI,WAAE,2EAA2E,eAAe;AAChG,IAAI,WAAE,8EAA8E,gBAAgB;AACpG,IAAI,WAAE,uFAAuF,kBAAkB;AAC/G,IAAI,WAAE;AACN,IAAI,WAAE;AACN,wBAAwB,2CAAY;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uCAAM;AAC9B,yBAAyB,yCAAQ;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,aAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,2DAAoB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,0BAA0B,0BAA0B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,aAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4BAA4B,EAAE;AAC/D;AACA,iBAAiB,EAAE;AACnB;AACA;AACA,uBAAuB,aAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,aAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,mDAAmD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wBAAwB,EAAE;AACrD,8BAA8B,uBAAuB,EAAE;AACvD,2BAA2B,qCAAqC,EAAE,eAAe,qCAAqC,EAAE;AACxH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,aAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA,KAAK,EAAE,EAAE;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2CAAc;AAC9B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2CAAc;AAClC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2CAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,aAAG;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,4BAA4B,EAAE,eAAe,4BAA4B,EAAE;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sCAAsC,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,wDAAwD,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAG;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,eAAK;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;AACA;AACA,mBAAmB,aAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,oCAAoC,qCAAQ,GAAG;AAC/C;AACA;AACA,+DAA+D,gBAAgB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,kBAAkB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qCAAQ,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAG;AACvB;AACA;AACA;AACA;AACA,sCAAsC,aAAG;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,yCAAyC,EAAE;AAClH;AACA;AACA;AACA,iFAAiF,oDAAoD,EAAE;AACvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,aAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yBAAyB,EAAE;AACvD,4BAA4B,+BAA+B,EAAE;AAC7D,4BAA4B,gCAAgC,EAAE;AAC9D;AACA;AACA,cAAc,aAAG;AACjB;AACA,6CAA6C,yBAAyB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,aAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,eAAK;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB,eAAK;AACrB;AACA,SAAS;AACT;AACA;AACA,QAAQ,eAAK;AACb;AACA;AACA;AACA,cAAc,aAAG;AACjB;AACA;AACA,2CAA2C,wBAAwB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,eAAK;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,+BAAqB;AACzB;AACA;AACA,YAAY,aAAG;AACf,YAAY,gEAAyB;AACrC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,mBAAmB,eAAK;AACxB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+BAAqB;AACxC;AACA;AACA,4CAA4C,6CAAS;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,6BAA6B,cAAI;AACjC;AACA,oBAAoB,4BAAQ;;AAEG;AAC/B;;;AC36C+B;AAC/B","file":"x","sourcesContent":["import firebase from '@firebase/app';\nimport '@firebase/installations';\nimport { __spreadArrays, __assign } from 'tslib';\nimport { ErrorFactory, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { Component } from '@firebase/component';\n\nvar name = \"@firebase/performance\";\nvar version = \"0.4.5\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SDK_VERSION = version;\r\n/** The prefix for start User Timing marks used for creating Traces. */\r\nvar TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\r\n/** The prefix for stop User Timing marks used for creating Traces. */\r\nvar TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\r\n/** The prefix for User Timing measure used for creating Traces. */\r\nvar TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\r\n/** The prefix for out of the box page load Trace name. */\r\nvar OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\r\nvar FIRST_PAINT_COUNTER_NAME = '_fp';\r\nvar FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\r\nvar FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\r\nvar CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\r\nvar CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\r\nvar SERVICE = 'performance';\r\nvar SERVICE_NAME = 'Performance';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"trace started\" /* TRACE_STARTED_BEFORE */] = 'Trace {$traceName} was started before.',\r\n    _a[\"trace stopped\" /* TRACE_STOPPED_BEFORE */] = 'Trace {$traceName} is not running.',\r\n    _a[\"nonpositive trace startTime\" /* NONPOSITIVE_TRACE_START_TIME */] = 'Trace {$traceName} startTime should be positive.',\r\n    _a[\"nonpositive trace duration\" /* NONPOSITIVE_TRACE_DURATION */] = 'Trace {$traceName} duration should be positive.',\r\n    _a[\"no window\" /* NO_WINDOW */] = 'Window is not available.',\r\n    _a[\"no app id\" /* NO_APP_ID */] = 'App id is not available.',\r\n    _a[\"no project id\" /* NO_PROJECT_ID */] = 'Project id is not available.',\r\n    _a[\"no api key\" /* NO_API_KEY */] = 'Api key is not available.',\r\n    _a[\"invalid cc log\" /* INVALID_CC_LOG */] = 'Attempted to queue invalid cc event',\r\n    _a[\"FB not default\" /* FB_NOT_DEFAULT */] = 'Performance can only start when Firebase app instance is the default one.',\r\n    _a[\"RC response not ok\" /* RC_NOT_OK */] = 'RC response is not ok',\r\n    _a[\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */] = 'Attribute name {$attributeName} is invalid.',\r\n    _a[\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */] = 'Attribute value {$attributeValue} is invalid.',\r\n    _a[\"invalid custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */] = 'Custom metric name {$customMetricName} is invalid',\r\n    _a[\"invalid String merger input\" /* INVALID_STRING_MERGER_PARAMETER */] = 'Input for String merger is invalid, contact support team to resolve.',\r\n    _a);\r\nvar ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar consoleLogger = new Logger(SERVICE_NAME);\r\nconsoleLogger.logLevel = LogLevel.INFO;\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar apiInstance;\r\nvar windowInstance;\r\n/**\r\n * This class holds a reference to various browser related objects injected by\r\n * set methods.\r\n */\r\nvar Api = /** @class */ (function () {\r\n    function Api(window) {\r\n        this.window = window;\r\n        if (!window) {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        this.performance = window.performance;\r\n        this.PerformanceObserver = window.PerformanceObserver;\r\n        this.windowLocation = window.location;\r\n        this.navigator = window.navigator;\r\n        this.document = window.document;\r\n        if (this.navigator && this.navigator.cookieEnabled) {\r\n            // If user blocks cookies on the browser, accessing localStorage will\r\n            // throw an exception.\r\n            this.localStorage = window.localStorage;\r\n        }\r\n        if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\r\n            this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\r\n        }\r\n    }\r\n    Api.prototype.getUrl = function () {\r\n        // Do not capture the string query part of url.\r\n        return this.windowLocation.href.split('?')[0];\r\n    };\r\n    Api.prototype.mark = function (name) {\r\n        if (!this.performance || !this.performance.mark) {\r\n            return;\r\n        }\r\n        this.performance.mark(name);\r\n    };\r\n    Api.prototype.measure = function (measureName, mark1, mark2) {\r\n        if (!this.performance || !this.performance.measure) {\r\n            return;\r\n        }\r\n        this.performance.measure(measureName, mark1, mark2);\r\n    };\r\n    Api.prototype.getEntriesByType = function (type) {\r\n        if (!this.performance || !this.performance.getEntriesByType) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByType(type);\r\n    };\r\n    Api.prototype.getEntriesByName = function (name) {\r\n        if (!this.performance || !this.performance.getEntriesByName) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByName(name);\r\n    };\r\n    Api.prototype.getTimeOrigin = function () {\r\n        // Polyfill the time origin with performance.timing.navigationStart.\r\n        return (this.performance &&\r\n            (this.performance.timeOrigin || this.performance.timing.navigationStart));\r\n    };\r\n    Api.prototype.requiredApisAvailable = function () {\r\n        if (!fetch ||\r\n            !Promise ||\r\n            !this.navigator ||\r\n            !this.navigator.cookieEnabled) {\r\n            consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\r\n            return false;\r\n        }\r\n        if (!isIndexedDBAvailable()) {\r\n            consoleLogger.info('IndexedDB is not supported by current browswer');\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    Api.prototype.setupObserver = function (entryType, callback) {\r\n        if (!this.PerformanceObserver) {\r\n            return;\r\n        }\r\n        var observer = new this.PerformanceObserver(function (list) {\r\n            for (var _i = 0, _a = list.getEntries(); _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                // `entry` is a PerformanceEntry instance.\r\n                callback(entry);\r\n            }\r\n        });\r\n        // Start observing the entry types you care about.\r\n        observer.observe({ entryTypes: [entryType] });\r\n    };\r\n    Api.getInstance = function () {\r\n        if (apiInstance === undefined) {\r\n            apiInstance = new Api(windowInstance);\r\n        }\r\n        return apiInstance;\r\n    };\r\n    return Api;\r\n}());\r\nfunction setupApi(window) {\r\n    windowInstance = window;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction mergeStrings(part1, part2) {\r\n    var sizeDiff = part1.length - part2.length;\r\n    if (sizeDiff < 0 || sizeDiff > 1) {\r\n        throw ERROR_FACTORY.create(\"invalid String merger input\" /* INVALID_STRING_MERGER_PARAMETER */);\r\n    }\r\n    var resultArray = [];\r\n    for (var i = 0; i < part1.length; i++) {\r\n        resultArray.push(part1.charAt(i));\r\n        if (part2.length > i) {\r\n            resultArray.push(part2.charAt(i));\r\n        }\r\n    }\r\n    return resultArray.join('');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar settingsServiceInstance;\r\nvar SettingsService = /** @class */ (function () {\r\n    function SettingsService() {\r\n        // The variable which controls logging of automatic traces and HTTP/S network monitoring.\r\n        this.instrumentationEnabled = true;\r\n        // The variable which controls logging of custom traces.\r\n        this.dataCollectionEnabled = true;\r\n        // Configuration flags set through remote config.\r\n        this.loggingEnabled = false;\r\n        // Sampling rate between 0 and 1.\r\n        this.tracesSamplingRate = 1;\r\n        this.networkRequestsSamplingRate = 1;\r\n        // Address of logging service.\r\n        this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\r\n        // Performance event transport endpoint URL which should be compatible with proto3.\r\n        // New Address for transport service, not configurable via Remote Config.\r\n        this.flTransportEndpointUrl = mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\r\n        this.transportKey = mergeStrings('AzSC8r6ReiGqFMyfvgow', 'Iayx0u-XT3vksVM-pIV');\r\n        // Source type for performance event logs.\r\n        this.logSource = 462;\r\n        // Flags which control per session logging of traces and network requests.\r\n        this.logTraceAfterSampling = false;\r\n        this.logNetworkAfterSampling = false;\r\n        // TTL of config retrieved from remote config in hours.\r\n        this.configTimeToLive = 12;\r\n    }\r\n    SettingsService.prototype.getAppId = function () {\r\n        var appId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.appId;\r\n        if (!appId) {\r\n            throw ERROR_FACTORY.create(\"no app id\" /* NO_APP_ID */);\r\n        }\r\n        return appId;\r\n    };\r\n    SettingsService.prototype.getProjectId = function () {\r\n        var projectId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.projectId;\r\n        if (!projectId) {\r\n            throw ERROR_FACTORY.create(\"no project id\" /* NO_PROJECT_ID */);\r\n        }\r\n        return projectId;\r\n    };\r\n    SettingsService.prototype.getApiKey = function () {\r\n        var apiKey = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.apiKey;\r\n        if (!apiKey) {\r\n            throw ERROR_FACTORY.create(\"no api key\" /* NO_API_KEY */);\r\n        }\r\n        return apiKey;\r\n    };\r\n    SettingsService.prototype.getFlTransportFullUrl = function () {\r\n        return this.flTransportEndpointUrl.concat('?key=', this.transportKey);\r\n    };\r\n    SettingsService.getInstance = function () {\r\n        if (settingsServiceInstance === undefined) {\r\n            settingsServiceInstance = new SettingsService();\r\n        }\r\n        return settingsServiceInstance;\r\n    };\r\n    return SettingsService;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar iid;\r\nfunction getIidPromise() {\r\n    var iidPromise = SettingsService.getInstance().installationsService.getId();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    iidPromise.then(function (iidVal) {\r\n        iid = iidVal;\r\n    });\r\n    return iidPromise;\r\n}\r\n// This method should be used after the iid is retrieved by getIidPromise method.\r\nfunction getIid() {\r\n    return iid;\r\n}\r\nfunction getAuthTokenPromise() {\r\n    var authTokenPromise = SettingsService.getInstance().installationsService.getToken();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    authTokenPromise.then(function (authTokenVal) {\r\n    });\r\n    return authTokenPromise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityState;\r\n(function (VisibilityState) {\r\n    VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\r\n    VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\r\n})(VisibilityState || (VisibilityState = {}));\r\nvar RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\r\nvar ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\r\nvar MAX_ATTRIBUTE_NAME_LENGTH = 40;\r\nvar MAX_ATTRIBUTE_VALUE_LENGTH = 100;\r\nfunction getServiceWorkerStatus() {\r\n    var navigator = Api.getInstance().navigator;\r\n    if ('serviceWorker' in navigator) {\r\n        if (navigator.serviceWorker.controller) {\r\n            return 2 /* CONTROLLED */;\r\n        }\r\n        else {\r\n            return 3 /* UNCONTROLLED */;\r\n        }\r\n    }\r\n    else {\r\n        return 1 /* UNSUPPORTED */;\r\n    }\r\n}\r\nfunction getVisibilityState() {\r\n    var document = Api.getInstance().document;\r\n    var visibilityState = document.visibilityState;\r\n    switch (visibilityState) {\r\n        case 'visible':\r\n            return VisibilityState.VISIBLE;\r\n        case 'hidden':\r\n            return VisibilityState.HIDDEN;\r\n        default:\r\n            return VisibilityState.UNKNOWN;\r\n    }\r\n}\r\nfunction getEffectiveConnectionType() {\r\n    var navigator = Api.getInstance().navigator;\r\n    var navigatorConnection = navigator.connection;\r\n    var effectiveType = navigatorConnection && navigatorConnection.effectiveType;\r\n    switch (effectiveType) {\r\n        case 'slow-2g':\r\n            return 1 /* CONNECTION_SLOW_2G */;\r\n        case '2g':\r\n            return 2 /* CONNECTION_2G */;\r\n        case '3g':\r\n            return 3 /* CONNECTION_3G */;\r\n        case '4g':\r\n            return 4 /* CONNECTION_4G */;\r\n        default:\r\n            return 0 /* UNKNOWN */;\r\n    }\r\n}\r\nfunction isValidCustomAttributeName(name) {\r\n    if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\r\n        return false;\r\n    }\r\n    var matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(function (prefix) {\r\n        return name.startsWith(prefix);\r\n    });\r\n    return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\r\n}\r\nfunction isValidCustomAttributeValue(value) {\r\n    return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar REMOTE_CONFIG_SDK_VERSION = '0.0.1';\r\n// These values will be used if the remote config object is successfully\r\n// retrieved, but the template does not have these fields.\r\nvar DEFAULT_CONFIGS = {\r\n    loggingEnabled: true\r\n};\r\nvar FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\r\nfunction getConfig(iid) {\r\n    var config = getStoredConfig();\r\n    if (config) {\r\n        processConfig(config);\r\n        return Promise.resolve();\r\n    }\r\n    return getRemoteConfig(iid)\r\n        .then(processConfig)\r\n        .then(function (config) { return storeConfig(config); }, \r\n    /** Do nothing for error, use defaults set in settings service. */\r\n    function () { });\r\n}\r\nfunction getStoredConfig() {\r\n    var localStorage = Api.getInstance().localStorage;\r\n    if (!localStorage) {\r\n        return;\r\n    }\r\n    var expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\r\n    if (!expiryString || !configValid(expiryString)) {\r\n        return;\r\n    }\r\n    var configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\r\n    if (!configStringified) {\r\n        return;\r\n    }\r\n    try {\r\n        var configResponse = JSON.parse(configStringified);\r\n        return configResponse;\r\n    }\r\n    catch (_a) {\r\n        return;\r\n    }\r\n}\r\nfunction storeConfig(config) {\r\n    var localStorage = Api.getInstance().localStorage;\r\n    if (!config || !localStorage) {\r\n        return;\r\n    }\r\n    localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\r\n    localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() +\r\n        SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\r\n}\r\nvar COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\r\nfunction getRemoteConfig(iid) {\r\n    // Perf needs auth token only to retrieve remote config.\r\n    return getAuthTokenPromise()\r\n        .then(function (authToken) {\r\n        var projectId = SettingsService.getInstance().getProjectId();\r\n        var configEndPoint = \"https://firebaseremoteconfig.googleapis.com/v1/projects/\" + projectId + \"/namespaces/fireperf:fetch?key=\" + SettingsService.getInstance().getApiKey();\r\n        var request = new Request(configEndPoint, {\r\n            method: 'POST',\r\n            headers: { Authorization: FIS_AUTH_PREFIX + \" \" + authToken },\r\n            /* eslint-disable camelcase */\r\n            body: JSON.stringify({\r\n                app_instance_id: iid,\r\n                app_instance_id_token: authToken,\r\n                app_id: SettingsService.getInstance().getAppId(),\r\n                app_version: SDK_VERSION,\r\n                sdk_version: REMOTE_CONFIG_SDK_VERSION\r\n            })\r\n            /* eslint-enable camelcase */\r\n        });\r\n        return fetch(request).then(function (response) {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            // In case response is not ok. This will be caught by catch.\r\n            throw ERROR_FACTORY.create(\"RC response not ok\" /* RC_NOT_OK */);\r\n        });\r\n    })\r\n        .catch(function () {\r\n        consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\r\n        return undefined;\r\n    });\r\n}\r\n/**\r\n * Processes config coming either from calling RC or from local storage.\r\n * This method only runs if call is successful or config in storage\r\n * is valid.\r\n */\r\nfunction processConfig(config) {\r\n    if (!config) {\r\n        return config;\r\n    }\r\n    var settingsServiceInstance = SettingsService.getInstance();\r\n    var entries = config.entries || {};\r\n    if (entries.fpr_enabled !== undefined) {\r\n        // TODO: Change the assignment of loggingEnabled once the received type is\r\n        // known.\r\n        settingsServiceInstance.loggingEnabled =\r\n            String(entries.fpr_enabled) === 'true';\r\n    }\r\n    else {\r\n        // Config retrieved successfully, but there is no fpr_enabled in template.\r\n        // Use secondary configs value.\r\n        settingsServiceInstance.loggingEnabled = DEFAULT_CONFIGS.loggingEnabled;\r\n    }\r\n    if (entries.fpr_log_source) {\r\n        settingsServiceInstance.logSource = Number(entries.fpr_log_source);\r\n    }\r\n    if (entries.fpr_log_endpoint_url) {\r\n        settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\r\n    }\r\n    // Key from Remote Config has to be non-empty string, otherwsie use local value.\r\n    if (entries.fpr_log_transport_key) {\r\n        settingsServiceInstance.transportKey = entries.fpr_log_transport_key;\r\n    }\r\n    if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\r\n        settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\r\n    }\r\n    if (entries.fpr_vc_trace_sampling_rate !== undefined) {\r\n        settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\r\n    }\r\n    // Set the per session trace and network logging flags.\r\n    settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\r\n    settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\r\n    return config;\r\n}\r\nfunction configValid(expiry) {\r\n    return Number(expiry) > Date.now();\r\n}\r\nfunction shouldLogAfterSampling(samplingRate) {\r\n    return Math.random() <= samplingRate;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar initializationStatus = 1 /* notInitialized */;\r\nvar initializationPromise;\r\nfunction getInitializationPromise() {\r\n    initializationStatus = 2 /* initializationPending */;\r\n    initializationPromise = initializationPromise || initializePerf();\r\n    return initializationPromise;\r\n}\r\nfunction isPerfInitialized() {\r\n    return initializationStatus === 3 /* initialized */;\r\n}\r\nfunction initializePerf() {\r\n    return getDocumentReadyComplete()\r\n        .then(function () { return getIidPromise(); })\r\n        .then(function (iid) { return getConfig(iid); })\r\n        .then(function () { return changeInitializationStatus(); }, function () { return changeInitializationStatus(); });\r\n}\r\n/**\r\n * Returns a promise which resolves whenever the document readystate is complete or\r\n * immediately if it is called after page load complete.\r\n */\r\nfunction getDocumentReadyComplete() {\r\n    var document = Api.getInstance().document;\r\n    return new Promise(function (resolve) {\r\n        if (document && document.readyState !== 'complete') {\r\n            var handler_1 = function () {\r\n                if (document.readyState === 'complete') {\r\n                    document.removeEventListener('readystatechange', handler_1);\r\n                    resolve();\r\n                }\r\n            };\r\n            document.addEventListener('readystatechange', handler_1);\r\n        }\r\n        else {\r\n            resolve();\r\n        }\r\n    });\r\n}\r\nfunction changeInitializationStatus() {\r\n    initializationStatus = 3 /* initialized */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\r\nvar INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\r\n// If end point does not work, the call will be tried for these many times.\r\nvar DEFAULT_REMAINING_TRIES = 3;\r\nvar MAX_EVENT_COUNT_PER_REQUEST = 1000;\r\nvar remainingTries = DEFAULT_REMAINING_TRIES;\r\n/* eslint-enable camelcase */\r\nvar queue = [];\r\nvar isTransportSetup = false;\r\nfunction setupTransportService() {\r\n    if (!isTransportSetup) {\r\n        processQueue(INITIAL_SEND_TIME_DELAY_MS);\r\n        isTransportSetup = true;\r\n    }\r\n}\r\nfunction processQueue(timeOffset) {\r\n    setTimeout(function () {\r\n        // If there is no remainingTries left, stop retrying.\r\n        if (remainingTries === 0) {\r\n            return;\r\n        }\r\n        // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\r\n        if (!queue.length) {\r\n            return processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n        }\r\n        dispatchQueueEvents();\r\n    }, timeOffset);\r\n}\r\nfunction dispatchQueueEvents() {\r\n    // Extract events up to the maximum cap of single logRequest from top of \"official queue\".\r\n    // The staged events will be used for current logRequest attempt, remaining events will be kept\r\n    // for next attempt.\r\n    var staged = queue.splice(0, MAX_EVENT_COUNT_PER_REQUEST);\r\n    /* eslint-disable camelcase */\r\n    // We will pass the JSON serialized event to the backend.\r\n    var log_event = staged.map(function (evt) { return ({\r\n        source_extension_json_proto3: evt.message,\r\n        event_time_ms: String(evt.eventTime)\r\n    }); });\r\n    var data = {\r\n        request_time_ms: String(Date.now()),\r\n        client_info: {\r\n            client_type: 1,\r\n            js_client_info: {}\r\n        },\r\n        log_source: SettingsService.getInstance().logSource,\r\n        log_event: log_event\r\n    };\r\n    /* eslint-enable camelcase */\r\n    sendEventsToFl(data, staged).catch(function () {\r\n        // If the request fails for some reason, add the events that were attempted\r\n        // back to the primary queue to retry later.\r\n        queue = __spreadArrays(staged, queue);\r\n        remainingTries--;\r\n        consoleLogger.info(\"Tries left: \" + remainingTries + \".\");\r\n        processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n    });\r\n}\r\nfunction sendEventsToFl(data, staged) {\r\n    return postToFlEndpoint(data)\r\n        .then(function (res) {\r\n        if (!res.ok) {\r\n            consoleLogger.info('Call to Firebase backend failed.');\r\n        }\r\n        return res.json();\r\n    })\r\n        .then(function (res) {\r\n        // Find the next call wait time from the response.\r\n        var transportWait = Number(res.nextRequestWaitMillis);\r\n        var requestOffset = DEFAULT_SEND_INTERVAL_MS;\r\n        if (!isNaN(transportWait)) {\r\n            requestOffset = Math.max(transportWait, requestOffset);\r\n        }\r\n        // Delete request if response include RESPONSE_ACTION_UNKNOWN or DELETE_REQUEST action.\r\n        // Otherwise, retry request using normal scheduling if response include RETRY_REQUEST_LATER.\r\n        var logResponseDetails = res.logResponseDetails;\r\n        if (Array.isArray(logResponseDetails) &&\r\n            logResponseDetails.length > 0 &&\r\n            logResponseDetails[0].responseAction === 'RETRY_REQUEST_LATER') {\r\n            queue = __spreadArrays(staged, queue);\r\n            consoleLogger.info(\"Retry transport request later.\");\r\n        }\r\n        remainingTries = DEFAULT_REMAINING_TRIES;\r\n        // Schedule the next process.\r\n        processQueue(requestOffset);\r\n    });\r\n}\r\nfunction postToFlEndpoint(data) {\r\n    var flTransportFullUrl = SettingsService.getInstance().getFlTransportFullUrl();\r\n    return fetch(flTransportFullUrl, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data)\r\n    });\r\n}\r\nfunction addToQueue(evt) {\r\n    if (!evt.eventTime || !evt.message) {\r\n        throw ERROR_FACTORY.create(\"invalid cc log\" /* INVALID_CC_LOG */);\r\n    }\r\n    // Add the new event to the queue.\r\n    queue = __spreadArrays(queue, [evt]);\r\n}\r\n/** Log handler for cc service to send the performance logs to the server. */\r\nfunction transportHandler(\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nserializer) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        var message = serializer.apply(void 0, args);\r\n        addToQueue({\r\n            message: message,\r\n            eventTime: Date.now()\r\n        });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-enble camelcase */\r\nvar logger;\r\n// This method is not called before initialization.\r\nfunction sendLog(resource, resourceType) {\r\n    if (!logger) {\r\n        logger = transportHandler(serializer);\r\n    }\r\n    logger(resource, resourceType);\r\n}\r\nfunction logTrace(trace) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log if trace is auto generated and instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled && trace.isAuto) {\r\n        return;\r\n    }\r\n    // Do not log if trace is custom and data collection is disabled.\r\n    if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\r\n        return;\r\n    }\r\n    // Do not log if required apis are not available.\r\n    if (!Api.getInstance().requiredApisAvailable()) {\r\n        return;\r\n    }\r\n    // Only log the page load auto traces if page is visible.\r\n    if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\r\n        return;\r\n    }\r\n    if (isPerfInitialized()) {\r\n        sendTraceLog(trace);\r\n    }\r\n    else {\r\n        // Custom traces can be used before the initialization but logging\r\n        // should wait until after.\r\n        getInitializationPromise().then(function () { return sendTraceLog(trace); }, function () { return sendTraceLog(trace); });\r\n    }\r\n}\r\nfunction sendTraceLog(trace) {\r\n    if (!getIid()) {\r\n        return;\r\n    }\r\n    var settingsService = SettingsService.getInstance();\r\n    if (!settingsService.loggingEnabled ||\r\n        !settingsService.logTraceAfterSampling) {\r\n        return;\r\n    }\r\n    setTimeout(function () { return sendLog(trace, 1 /* Trace */); }, 0);\r\n}\r\nfunction logNetworkRequest(networkRequest) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log network requests if instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled) {\r\n        return;\r\n    }\r\n    // Do not log the js sdk's call to transport service domain to avoid unnecessary cycle.\r\n    // Need to blacklist both old and new endpoints to avoid migration gap.\r\n    var networkRequestUrl = networkRequest.url;\r\n    // Blacklist old log endpoint and new transport endpoint.\r\n    // Because Performance SDK doesn't instrument requests sent from SDK itself.\r\n    var logEndpointUrl = settingsService.logEndPointUrl.split('?')[0];\r\n    var flEndpointUrl = settingsService.flTransportEndpointUrl.split('?')[0];\r\n    if (networkRequestUrl === logEndpointUrl ||\r\n        networkRequestUrl === flEndpointUrl) {\r\n        return;\r\n    }\r\n    if (!settingsService.loggingEnabled ||\r\n        !settingsService.logNetworkAfterSampling) {\r\n        return;\r\n    }\r\n    setTimeout(function () { return sendLog(networkRequest, 0 /* NetworkRequest */); }, 0);\r\n}\r\nfunction serializer(resource, resourceType) {\r\n    if (resourceType === 0 /* NetworkRequest */) {\r\n        return serializeNetworkRequest(resource);\r\n    }\r\n    return serializeTrace(resource);\r\n}\r\nfunction serializeNetworkRequest(networkRequest) {\r\n    var networkRequestMetric = {\r\n        url: networkRequest.url,\r\n        http_method: networkRequest.httpMethod || 0,\r\n        http_response_code: 200,\r\n        response_payload_bytes: networkRequest.responsePayloadBytes,\r\n        client_start_time_us: networkRequest.startTimeUs,\r\n        time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\r\n        time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\r\n    };\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        network_request_metric: networkRequestMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction serializeTrace(trace) {\r\n    var traceMetric = {\r\n        name: trace.name,\r\n        is_auto: trace.isAuto,\r\n        client_start_time_us: trace.startTimeUs,\r\n        duration_us: trace.durationUs\r\n    };\r\n    if (Object.keys(trace.counters).length !== 0) {\r\n        traceMetric.counters = trace.counters;\r\n    }\r\n    var customAttributes = trace.getAttributes();\r\n    if (Object.keys(customAttributes).length !== 0) {\r\n        traceMetric.custom_attributes = customAttributes;\r\n    }\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        trace_metric: traceMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction getApplicationInfo() {\r\n    return {\r\n        google_app_id: SettingsService.getInstance().getAppId(),\r\n        app_instance_id: getIid(),\r\n        web_app_info: {\r\n            sdk_version: SDK_VERSION,\r\n            page_url: Api.getInstance().getUrl(),\r\n            service_worker_status: getServiceWorkerStatus(),\r\n            visibility_state: getVisibilityState(),\r\n            effective_connection_type: getEffectiveConnectionType()\r\n        },\r\n        application_process_state: 0\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_METRIC_NAME_LENGTH = 100;\r\nvar RESERVED_AUTO_PREFIX = '_';\r\nvar oobMetrics = [\r\n    FIRST_PAINT_COUNTER_NAME,\r\n    FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\r\n    FIRST_INPUT_DELAY_COUNTER_NAME\r\n];\r\n/**\r\n * Returns true if the metric is custom and does not start with reserved prefix, or if\r\n * the metric is one of out of the box page load trace metrics.\r\n */\r\nfunction isValidMetricName(name, traceName) {\r\n    if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\r\n        return false;\r\n    }\r\n    return ((traceName &&\r\n        traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) &&\r\n        oobMetrics.indexOf(name) > -1) ||\r\n        !name.startsWith(RESERVED_AUTO_PREFIX));\r\n}\r\n/**\r\n * Converts the provided value to an integer value to be used in case of a metric.\r\n * @param providedValue Provided number value of the metric that needs to be converted to an integer.\r\n *\r\n * @returns Converted integer number to be set for the metric.\r\n */\r\nfunction convertMetricValueToInteger(providedValue) {\r\n    var valueAsInteger = Math.floor(providedValue);\r\n    if (valueAsInteger < providedValue) {\r\n        consoleLogger.info(\"Metric value should be an Integer, setting the value as : \" + valueAsInteger + \".\");\r\n    }\r\n    return valueAsInteger;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Trace = /** @class */ (function () {\r\n    /**\r\n     * @param name The name of the trace.\r\n     * @param isAuto If the trace is auto-instrumented.\r\n     * @param traceMeasureName The name of the measure marker in user timing specification. This field\r\n     * is only set when the trace is built for logging when the user directly uses the user timing\r\n     * api (performance.mark and performance.measure).\r\n     */\r\n    function Trace(name, isAuto, traceMeasureName) {\r\n        if (isAuto === void 0) { isAuto = false; }\r\n        this.name = name;\r\n        this.isAuto = isAuto;\r\n        this.state = 1 /* UNINITIALIZED */;\r\n        this.customAttributes = {};\r\n        this.counters = {};\r\n        this.api = Api.getInstance();\r\n        this.randomId = Math.floor(Math.random() * 1000000);\r\n        if (!this.isAuto) {\r\n            this.traceStartMark = TRACE_START_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceStopMark = TRACE_STOP_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceMeasure =\r\n                traceMeasureName ||\r\n                    TRACE_MEASURE_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            if (traceMeasureName) {\r\n                // For the case of direct user timing traces, no start stop will happen. The measure object\r\n                // is already available.\r\n                this.calculateTraceMetrics();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Starts a trace. The measurement of the duration starts at this point.\r\n     */\r\n    Trace.prototype.start = function () {\r\n        if (this.state !== 1 /* UNINITIALIZED */) {\r\n            throw ERROR_FACTORY.create(\"trace started\" /* TRACE_STARTED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.api.mark(this.traceStartMark);\r\n        this.state = 2 /* RUNNING */;\r\n    };\r\n    /**\r\n     * Stops the trace. The measurement of the duration of the trace stops at this point and trace\r\n     * is logged.\r\n     */\r\n    Trace.prototype.stop = function () {\r\n        if (this.state !== 2 /* RUNNING */) {\r\n            throw ERROR_FACTORY.create(\"trace stopped\" /* TRACE_STOPPED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.state = 3 /* TERMINATED */;\r\n        this.api.mark(this.traceStopMark);\r\n        this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\r\n        this.calculateTraceMetrics();\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Records a trace with predetermined values. If this method is used a trace is created and logged\r\n     * directly. No need to use start and stop methods.\r\n     * @param startTime Trace start time since epoch in millisec\r\n     * @param duration The duraction of the trace in millisec\r\n     * @param options An object which can optionally hold maps of custom metrics and custom attributes\r\n     */\r\n    Trace.prototype.record = function (startTime, duration, options) {\r\n        if (startTime <= 0) {\r\n            throw ERROR_FACTORY.create(\"nonpositive trace startTime\" /* NONPOSITIVE_TRACE_START_TIME */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        if (duration <= 0) {\r\n            throw ERROR_FACTORY.create(\"nonpositive trace duration\" /* NONPOSITIVE_TRACE_DURATION */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.durationUs = Math.floor(duration * 1000);\r\n        this.startTimeUs = Math.floor(startTime * 1000);\r\n        if (options && options.attributes) {\r\n            this.customAttributes = __assign({}, options.attributes);\r\n        }\r\n        if (options && options.metrics) {\r\n            for (var _i = 0, _a = Object.keys(options.metrics); _i < _a.length; _i++) {\r\n                var metric = _a[_i];\r\n                if (!isNaN(Number(options.metrics[metric]))) {\r\n                    this.counters[metric] = Number(Math.floor(options.metrics[metric]));\r\n                }\r\n            }\r\n        }\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\r\n     * custom metric if one with the given name does not exist. The value will be floored down to an\r\n     * integer.\r\n     * @param counter Name of the custom metric\r\n     * @param numAsInteger Increment by value\r\n     */\r\n    Trace.prototype.incrementMetric = function (counter, numAsInteger) {\r\n        if (numAsInteger === void 0) { numAsInteger = 1; }\r\n        if (this.counters[counter] === undefined) {\r\n            this.putMetric(counter, numAsInteger);\r\n        }\r\n        else {\r\n            this.putMetric(counter, this.counters[counter] + numAsInteger);\r\n        }\r\n    };\r\n    /**\r\n     * Sets a custom metric to a specified value. Will create a new custom metric if one with the\r\n     * given name does not exist. The value will be floored down to an integer.\r\n     * @param counter Name of the custom metric\r\n     * @param numAsInteger Set custom metric to this value\r\n     */\r\n    Trace.prototype.putMetric = function (counter, numAsInteger) {\r\n        if (isValidMetricName(counter, this.name)) {\r\n            this.counters[counter] = convertMetricValueToInteger(numAsInteger);\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"invalid custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */, {\r\n                customMetricName: counter\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Returns the value of the custom metric by that name. If a custom metric with that name does\r\n     * not exist will return zero.\r\n     * @param counter\r\n     */\r\n    Trace.prototype.getMetric = function (counter) {\r\n        return this.counters[counter] || 0;\r\n    };\r\n    /**\r\n     * Sets a custom attribute of a trace to a certain value.\r\n     * @param attr\r\n     * @param value\r\n     */\r\n    Trace.prototype.putAttribute = function (attr, value) {\r\n        var isValidName = isValidCustomAttributeName(attr);\r\n        var isValidValue = isValidCustomAttributeValue(value);\r\n        if (isValidName && isValidValue) {\r\n            this.customAttributes[attr] = value;\r\n            return;\r\n        }\r\n        // Throw appropriate error when the attribute name or value is invalid.\r\n        if (!isValidName) {\r\n            throw ERROR_FACTORY.create(\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */, {\r\n                attributeName: attr\r\n            });\r\n        }\r\n        if (!isValidValue) {\r\n            throw ERROR_FACTORY.create(\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */, {\r\n                attributeValue: value\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Retrieves the value a custom attribute of a trace is set to.\r\n     * @param attr\r\n     */\r\n    Trace.prototype.getAttribute = function (attr) {\r\n        return this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.removeAttribute = function (attr) {\r\n        if (this.customAttributes[attr] === undefined) {\r\n            return;\r\n        }\r\n        delete this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.getAttributes = function () {\r\n        return __assign({}, this.customAttributes);\r\n    };\r\n    Trace.prototype.setStartTime = function (startTime) {\r\n        this.startTimeUs = startTime;\r\n    };\r\n    Trace.prototype.setDuration = function (duration) {\r\n        this.durationUs = duration;\r\n    };\r\n    /**\r\n     * Calculates and assigns the duration and start time of the trace using the measure performance\r\n     * entry.\r\n     */\r\n    Trace.prototype.calculateTraceMetrics = function () {\r\n        var perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\r\n        var perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\r\n        if (perfMeasureEntry) {\r\n            this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\r\n            this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\r\n        }\r\n    };\r\n    /**\r\n     * @param navigationTimings A single element array which contains the navigationTIming object of\r\n     * the page load\r\n     * @param paintTimings A array which contains paintTiming object of the page load\r\n     * @param firstInputDelay First input delay in millisec\r\n     */\r\n    Trace.createOobTrace = function (navigationTimings, paintTimings, firstInputDelay) {\r\n        var route = Api.getInstance().getUrl();\r\n        if (!route) {\r\n            return;\r\n        }\r\n        var trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\r\n        var timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\r\n        trace.setStartTime(timeOriginUs);\r\n        // navigationTimings includes only one element.\r\n        if (navigationTimings && navigationTimings[0]) {\r\n            trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\r\n            trace.putMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\r\n            trace.putMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\r\n            trace.putMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\r\n        }\r\n        var FIRST_PAINT = 'first-paint';\r\n        var FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\r\n        if (paintTimings) {\r\n            var firstPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_PAINT; });\r\n            if (firstPaint && firstPaint.startTime) {\r\n                trace.putMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\r\n            }\r\n            var firstContentfulPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_CONTENTFUL_PAINT; });\r\n            if (firstContentfulPaint && firstContentfulPaint.startTime) {\r\n                trace.putMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\r\n            }\r\n            if (firstInputDelay) {\r\n                trace.putMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\r\n            }\r\n        }\r\n        logTrace(trace);\r\n    };\r\n    Trace.createUserTimingTrace = function (measureName) {\r\n        var trace = new Trace(measureName, false, measureName);\r\n        logTrace(trace);\r\n    };\r\n    return Trace;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createNetworkRequestEntry(entry) {\r\n    var performanceEntry = entry;\r\n    if (!performanceEntry || performanceEntry.responseStart === undefined) {\r\n        return;\r\n    }\r\n    var timeOrigin = Api.getInstance().getTimeOrigin();\r\n    var startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\r\n    var timeToResponseInitiatedUs = performanceEntry.responseStart\r\n        ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000)\r\n        : undefined;\r\n    var timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000);\r\n    // Remove the query params from logged network request url.\r\n    var url = performanceEntry.name && performanceEntry.name.split('?')[0];\r\n    var networkRequest = {\r\n        url: url,\r\n        responsePayloadBytes: performanceEntry.transferSize,\r\n        startTimeUs: startTimeUs,\r\n        timeToResponseInitiatedUs: timeToResponseInitiatedUs,\r\n        timeToResponseCompletedUs: timeToResponseCompletedUs\r\n    };\r\n    logNetworkRequest(networkRequest);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FID_WAIT_TIME_MS = 5000;\r\nfunction setupOobResources() {\r\n    // Do not initialize unless iid is available.\r\n    if (!getIid()) {\r\n        return;\r\n    }\r\n    // The load event might not have fired yet, and that means performance navigation timing\r\n    // object has a duration of 0. The setup should run after all current tasks in js queue.\r\n    setTimeout(function () { return setupOobTraces(); }, 0);\r\n    setTimeout(function () { return setupNetworkRequests(); }, 0);\r\n    setTimeout(function () { return setupUserTimingTraces(); }, 0);\r\n}\r\nfunction setupNetworkRequests() {\r\n    var api = Api.getInstance();\r\n    var resources = api.getEntriesByType('resource');\r\n    for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\r\n        var resource = resources_1[_i];\r\n        createNetworkRequestEntry(resource);\r\n    }\r\n    api.setupObserver('resource', createNetworkRequestEntry);\r\n}\r\nfunction setupOobTraces() {\r\n    var api = Api.getInstance();\r\n    var navigationTimings = api.getEntriesByType('navigation');\r\n    var paintTimings = api.getEntriesByType('paint');\r\n    // If First Input Desly polyfill is added to the page, report the fid value.\r\n    // https://github.com/GoogleChromeLabs/first-input-delay\r\n    if (api.onFirstInputDelay) {\r\n        // If the fid call back is not called for certain time, continue without it.\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        var timeoutId_1 = setTimeout(function () {\r\n            Trace.createOobTrace(navigationTimings, paintTimings);\r\n            timeoutId_1 = undefined;\r\n        }, FID_WAIT_TIME_MS);\r\n        api.onFirstInputDelay(function (fid) {\r\n            if (timeoutId_1) {\r\n                clearTimeout(timeoutId_1);\r\n                Trace.createOobTrace(navigationTimings, paintTimings, fid);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        Trace.createOobTrace(navigationTimings, paintTimings);\r\n    }\r\n}\r\nfunction setupUserTimingTraces() {\r\n    var api = Api.getInstance();\r\n    // Run through the measure performance entries collected up to this point.\r\n    var measures = api.getEntriesByType('measure');\r\n    for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\r\n        var measure = measures_1[_i];\r\n        createUserTimingTrace(measure);\r\n    }\r\n    // Setup an observer to capture the measures from this point on.\r\n    api.setupObserver('measure', createUserTimingTrace);\r\n}\r\nfunction createUserTimingTrace(measure) {\r\n    var measureName = measure.name;\r\n    // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\r\n    if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) ===\r\n        TRACE_MEASURE_PREFIX) {\r\n        return;\r\n    }\r\n    Trace.createUserTimingTrace(measureName);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PerformanceController = /** @class */ (function () {\r\n    function PerformanceController(app) {\r\n        this.app = app;\r\n        if (Api.getInstance().requiredApisAvailable()) {\r\n            validateIndexedDBOpenable()\r\n                .then(function (isAvailable) {\r\n                if (isAvailable) {\r\n                    setupTransportService();\r\n                    getInitializationPromise().then(setupOobResources, setupOobResources);\r\n                }\r\n            })\r\n                .catch(function (error) {\r\n                consoleLogger.info(\"Environment doesn't support IndexedDB: \" + error);\r\n            });\r\n        }\r\n    }\r\n    PerformanceController.prototype.trace = function (name) {\r\n        return new Trace(name);\r\n    };\r\n    Object.defineProperty(PerformanceController.prototype, \"instrumentationEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().instrumentationEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().instrumentationEnabled = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PerformanceController.prototype, \"dataCollectionEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().dataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().dataCollectionEnabled = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return PerformanceController;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nfunction registerPerformance(instance) {\r\n    var factoryMethod = function (app, installations) {\r\n        if (app.name !== DEFAULT_ENTRY_NAME) {\r\n            throw ERROR_FACTORY.create(\"FB not default\" /* FB_NOT_DEFAULT */);\r\n        }\r\n        if (typeof window === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        setupApi(window);\r\n        SettingsService.getInstance().firebaseAppInstance = app;\r\n        SettingsService.getInstance().installationsService = installations;\r\n        return new PerformanceController(app);\r\n    };\r\n    // Register performance with firebase-app.\r\n    instance.INTERNAL.registerComponent(new Component('performance', function (container) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        // The following call will always succeed because perf has `import '@firebase/installations'`\r\n        var installations = container\r\n            .getProvider('installations')\r\n            .getImmediate();\r\n        return factoryMethod(app, installations);\r\n    }, \"PUBLIC\" /* PUBLIC */));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterPerformance(firebase);\n\nexport { registerPerformance };\n//# sourceMappingURL=index.esm.js.map\n","import '@firebase/performance';\n//# sourceMappingURL=index.esm.js.map\n"]}}