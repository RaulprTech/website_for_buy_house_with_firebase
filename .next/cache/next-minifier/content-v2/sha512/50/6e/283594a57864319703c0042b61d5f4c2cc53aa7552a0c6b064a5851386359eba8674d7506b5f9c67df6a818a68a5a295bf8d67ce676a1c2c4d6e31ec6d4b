{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[27],{oRHo:function(t,e,i){\"use strict\";i.r(e);var s,r=i(\"zIRd\"),n=(i(\"fSjL\"),i(\"mrSG\")),o=i(\"qOnz\"),a=i(\"q/0M\"),c=i(\"/6Yf\"),u=function(){function t(t,e,i,s){this.client=t,this.storage=e,this.storageCache=i,this.logger=s}return t.prototype.isCachedDataFresh=function(t,e){if(!e)return this.logger.debug(\"Config fetch cache check. Cache unpopulated.\"),!1;var i=Date.now()-e,s=i<=t;return this.logger.debug(\"Config fetch cache check. Cache age millis: \"+i+\". Cache max age millis (minimumFetchIntervalMillis setting): \"+t+\". Is cache hit: \"+s+\".\"),s},t.prototype.fetch=function(t){return Object(n.b)(this,void 0,void 0,(function(){var e,i,s,r,o;return Object(n.d)(this,(function(n){switch(n.label){case 0:return[4,Promise.all([this.storage.getLastSuccessfulFetchTimestampMillis(),this.storage.getLastSuccessfulFetchResponse()])];case 1:return e=n.sent(),i=e[0],(s=e[1])&&this.isCachedDataFresh(t.cacheMaxAgeMillis,i)?[2,s]:(t.eTag=s&&s.eTag,[4,this.client.fetch(t)]);case 2:return r=n.sent(),o=[this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())],200===r.status&&o.push(this.storage.setLastSuccessfulFetchResponse(r)),[4,Promise.all(o)];case 3:return n.sent(),[2,r]}}))}))},t}(),h=((s={})[\"registration-window\"]=\"Undefined window object. This SDK only supports usage in a browser environment.\",s[\"registration-project-id\"]=\"Undefined project identifier. Check Firebase app initialization.\",s[\"registration-api-key\"]=\"Undefined API key. Check Firebase app initialization.\",s[\"registration-app-id\"]=\"Undefined app identifier. Check Firebase app initialization.\",s[\"storage-open\"]=\"Error thrown when opening storage. Original error: {$originalErrorMessage}.\",s[\"storage-get\"]=\"Error thrown when reading from storage. Original error: {$originalErrorMessage}.\",s[\"storage-set\"]=\"Error thrown when writing to storage. Original error: {$originalErrorMessage}.\",s[\"storage-delete\"]=\"Error thrown when deleting from storage. Original error: {$originalErrorMessage}.\",s[\"fetch-client-network\"]=\"Fetch client failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.\",s[\"fetch-timeout\"]='The config fetch request timed out.  Configure timeout using \"fetchTimeoutMillis\" SDK setting.',s[\"fetch-throttle\"]='The config fetch request timed out while in an exponential backoff state. Configure timeout using \"fetchTimeoutMillis\" SDK setting. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',s[\"fetch-client-parse\"]=\"Fetch client could not parse response. Original error: {$originalErrorMessage}.\",s[\"fetch-status\"]=\"Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.\",s),l=new o.b(\"remoteconfig\",\"Remote Config\",h);var f=function(){function t(t,e,i,s,r,n){this.firebaseInstallations=t,this.sdkVersion=e,this.namespace=i,this.projectId=s,this.apiKey=r,this.appId=n}return t.prototype.fetch=function(t){return Object(n.b)(this,void 0,void 0,(function(){var e,i,s,r,o,a,c,u,h,f,g,p,d,m,v,b,_,w,y;return Object(n.d)(this,(function(n){switch(n.label){case 0:return[4,Promise.all([this.firebaseInstallations.getId(),this.firebaseInstallations.getToken()])];case 1:e=n.sent(),i=e[0],s=e[1],r=window.FIREBASE_REMOTE_CONFIG_URL_BASE||\"https://firebaseremoteconfig.googleapis.com\",o=r+\"/v1/projects/\"+this.projectId+\"/namespaces/\"+this.namespace+\":fetch?key=\"+this.apiKey,a={\"Content-Type\":\"application/json\",\"Content-Encoding\":\"gzip\",\"If-None-Match\":t.eTag||\"*\"},c={sdk_version:this.sdkVersion,app_instance_id:i,app_instance_id_token:s,app_id:this.appId,language_code:(void 0===C&&(C=navigator),C.languages&&C.languages[0]||C.language)},u={method:\"POST\",headers:a,body:JSON.stringify(c)},h=fetch(o,u),f=new Promise((function(e,i){t.signal.addEventListener((function(){var t=new Error(\"The operation was aborted.\");t.name=\"AbortError\",i(t)}))})),n.label=2;case 2:return n.trys.push([2,5,,6]),[4,Promise.race([h,f])];case 3:return n.sent(),[4,h];case 4:return g=n.sent(),[3,6];case 5:throw p=n.sent(),d=\"fetch-client-network\",\"AbortError\"===p.name&&(d=\"fetch-timeout\"),l.create(d,{originalErrorMessage:p.message});case 6:if(m=g.status,v=g.headers.get(\"ETag\")||void 0,200!==g.status)return[3,11];w=void 0,n.label=7;case 7:return n.trys.push([7,9,,10]),[4,g.json()];case 8:return w=n.sent(),[3,10];case 9:throw y=n.sent(),l.create(\"fetch-client-parse\",{originalErrorMessage:y.message});case 10:b=w.entries,_=w.state,n.label=11;case 11:if(\"INSTANCE_STATE_UNSPECIFIED\"===_?m=500:\"NO_CHANGE\"===_?m=304:\"NO_TEMPLATE\"!==_&&\"EMPTY_CONFIG\"!==_||(b={}),304!==m&&200!==m)throw l.create(\"fetch-status\",{httpStatus:m});return[2,{status:m,eTag:v,config:b}]}var C}))}))},t}(),g=function(){function t(){this.listeners=[]}return t.prototype.addEventListener=function(t){this.listeners.push(t)},t.prototype.abort=function(){this.listeners.forEach((function(t){return t()}))},t}(),p=[\"1\",\"true\",\"t\",\"yes\",\"y\",\"on\"],d=function(){function t(t,e){void 0===e&&(e=\"\"),this._source=t,this._value=e}return t.prototype.asString=function(){return this._value},t.prototype.asBoolean=function(){return\"static\"!==this._source&&p.indexOf(this._value.toLowerCase())>=0},t.prototype.asNumber=function(){if(\"static\"===this._source)return 0;var t=Number(this._value);return isNaN(t)&&(t=0),t},t.prototype.getSource=function(){return this._source},t}(),m=function(){function t(t,e,i,s,r){this.app=t,this._client=e,this._storageCache=i,this._storage=s,this._logger=r,this._isInitializationComplete=!1,this.settings={fetchTimeoutMillis:6e4,minimumFetchIntervalMillis:432e5},this.defaultConfig={}}return t.prototype.setLogLevel=function(t){switch(t){case\"debug\":this._logger.logLevel=a.a.DEBUG;break;case\"silent\":this._logger.logLevel=a.a.SILENT;break;default:this._logger.logLevel=a.a.ERROR}},Object.defineProperty(t.prototype,\"fetchTimeMillis\",{get:function(){return this._storageCache.getLastSuccessfulFetchTimestampMillis()||-1},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"lastFetchStatus\",{get:function(){return this._storageCache.getLastFetchStatus()||\"no-fetch-yet\"},enumerable:!1,configurable:!0}),t.prototype.activate=function(){return Object(n.b)(this,void 0,void 0,(function(){var t,e,i;return Object(n.d)(this,(function(s){switch(s.label){case 0:return[4,Promise.all([this._storage.getLastSuccessfulFetchResponse(),this._storage.getActiveConfigEtag()])];case 1:return t=s.sent(),e=t[0],i=t[1],e&&e.config&&e.eTag&&e.eTag!==i?[4,Promise.all([this._storageCache.setActiveConfig(e.config),this._storage.setActiveConfigEtag(e.eTag)])]:[2,!1];case 2:return s.sent(),[2,!0]}}))}))},t.prototype.ensureInitialized=function(){var t=this;return this._initializePromise||(this._initializePromise=this._storageCache.loadFromStorage().then((function(){t._isInitializationComplete=!0}))),this._initializePromise},t.prototype.fetch=function(){return Object(n.b)(this,void 0,void 0,(function(){var t,e,i,s=this;return Object(n.d)(this,(function(r){switch(r.label){case 0:t=new g,setTimeout((function(){return Object(n.b)(s,void 0,void 0,(function(){return Object(n.d)(this,(function(e){return t.abort(),[2]}))}))}),this.settings.fetchTimeoutMillis),r.label=1;case 1:return r.trys.push([1,4,,6]),[4,this._client.fetch({cacheMaxAgeMillis:this.settings.minimumFetchIntervalMillis,signal:t})];case 2:return r.sent(),[4,this._storageCache.setLastFetchStatus(\"success\")];case 3:return r.sent(),[3,6];case 4:return e=r.sent(),c=\"fetch-throttle\",i=(a=e)instanceof o.c&&-1!==a.code.indexOf(c)?\"throttle\":\"failure\",[4,this._storageCache.setLastFetchStatus(i)];case 5:throw r.sent(),e;case 6:return[2]}var a,c}))}))},t.prototype.fetchAndActivate=function(){return Object(n.b)(this,void 0,void 0,(function(){return Object(n.d)(this,(function(t){switch(t.label){case 0:return[4,this.fetch()];case 1:return t.sent(),[2,this.activate()]}}))}))},t.prototype.getAll=function(){var t=this;return function(t,e){void 0===t&&(t={});void 0===e&&(e={});return Object.keys(Object(n.a)(Object(n.a)({},t),e))}(this._storageCache.getActiveConfig(),this.defaultConfig).reduce((function(e,i){return e[i]=t.getValue(i),e}),{})},t.prototype.getBoolean=function(t){return this.getValue(t).asBoolean()},t.prototype.getNumber=function(t){return this.getValue(t).asNumber()},t.prototype.getString=function(t){return this.getValue(t).asString()},t.prototype.getValue=function(t){this._isInitializationComplete||this._logger.debug('A value was requested for key \"'+t+'\" before SDK initialization completed. Await on ensureInitialized if the intent was to get a previously activated value.');var e=this._storageCache.getActiveConfig();return e&&void 0!==e[t]?new d(\"remote\",e[t]):this.defaultConfig&&void 0!==this.defaultConfig[t]?new d(\"default\",String(this.defaultConfig[t])):(this._logger.debug('Returning static value for key \"'+t+'\". Define a default or remote value if this is unintentional.'),new d(\"static\"))},t}();function v(t,e){var i=t.target.error||void 0;return l.create(e,{originalErrorMessage:i&&i.message})}var b=\"app_namespace_store\";var _=function(){function t(t,e,i,s){void 0===s&&(s=new Promise((function(t,e){var i=indexedDB.open(\"firebase_remote_config\",1);i.onerror=function(t){e(v(t,\"storage-open\"))},i.onsuccess=function(e){t(e.target.result)},i.onupgradeneeded=function(t){var e=t.target.result;switch(t.oldVersion){case 0:e.createObjectStore(b,{keyPath:\"compositeKey\"})}}}))),this.appId=t,this.appName=e,this.namespace=i,this.openDbPromise=s}return t.prototype.getLastFetchStatus=function(){return this.get(\"last_fetch_status\")},t.prototype.setLastFetchStatus=function(t){return this.set(\"last_fetch_status\",t)},t.prototype.getLastSuccessfulFetchTimestampMillis=function(){return this.get(\"last_successful_fetch_timestamp_millis\")},t.prototype.setLastSuccessfulFetchTimestampMillis=function(t){return this.set(\"last_successful_fetch_timestamp_millis\",t)},t.prototype.getLastSuccessfulFetchResponse=function(){return this.get(\"last_successful_fetch_response\")},t.prototype.setLastSuccessfulFetchResponse=function(t){return this.set(\"last_successful_fetch_response\",t)},t.prototype.getActiveConfig=function(){return this.get(\"active_config\")},t.prototype.setActiveConfig=function(t){return this.set(\"active_config\",t)},t.prototype.getActiveConfigEtag=function(){return this.get(\"active_config_etag\")},t.prototype.setActiveConfigEtag=function(t){return this.set(\"active_config_etag\",t)},t.prototype.getThrottleMetadata=function(){return this.get(\"throttle_metadata\")},t.prototype.setThrottleMetadata=function(t){return this.set(\"throttle_metadata\",t)},t.prototype.deleteThrottleMetadata=function(){return this.delete(\"throttle_metadata\")},t.prototype.get=function(t){return Object(n.b)(this,void 0,void 0,(function(){var e,i=this;return Object(n.d)(this,(function(s){switch(s.label){case 0:return[4,this.openDbPromise];case 1:return e=s.sent(),[2,new Promise((function(s,r){var n=e.transaction([b],\"readonly\").objectStore(b),o=i.createCompositeKey(t);try{var a=n.get(o);a.onerror=function(t){r(v(t,\"storage-get\"))},a.onsuccess=function(t){var e=t.target.result;s(e?e.value:void 0)}}catch(c){r(l.create(\"storage-get\",{originalErrorMessage:c&&c.message}))}}))]}}))}))},t.prototype.set=function(t,e){return Object(n.b)(this,void 0,void 0,(function(){var i,s=this;return Object(n.d)(this,(function(r){switch(r.label){case 0:return[4,this.openDbPromise];case 1:return i=r.sent(),[2,new Promise((function(r,n){var o=i.transaction([b],\"readwrite\").objectStore(b),a=s.createCompositeKey(t);try{var c=o.put({compositeKey:a,value:e});c.onerror=function(t){n(v(t,\"storage-set\"))},c.onsuccess=function(){r()}}catch(u){n(l.create(\"storage-set\",{originalErrorMessage:u&&u.message}))}}))]}}))}))},t.prototype.delete=function(t){return Object(n.b)(this,void 0,void 0,(function(){var e,i=this;return Object(n.d)(this,(function(s){switch(s.label){case 0:return[4,this.openDbPromise];case 1:return e=s.sent(),[2,new Promise((function(s,r){var n=e.transaction([b],\"readwrite\").objectStore(b),o=i.createCompositeKey(t);try{var a=n.delete(o);a.onerror=function(t){r(v(t,\"storage-delete\"))},a.onsuccess=function(){s()}}catch(c){r(l.create(\"storage-delete\",{originalErrorMessage:c&&c.message}))}}))]}}))}))},t.prototype.createCompositeKey=function(t){return[this.appId,this.appName,this.namespace,t].join()},t}(),w=function(){function t(t){this.storage=t}return t.prototype.getLastFetchStatus=function(){return this.lastFetchStatus},t.prototype.getLastSuccessfulFetchTimestampMillis=function(){return this.lastSuccessfulFetchTimestampMillis},t.prototype.getActiveConfig=function(){return this.activeConfig},t.prototype.loadFromStorage=function(){return Object(n.b)(this,void 0,void 0,(function(){var t,e,i,s,r,o;return Object(n.d)(this,(function(n){switch(n.label){case 0:return t=this.storage.getLastFetchStatus(),e=this.storage.getLastSuccessfulFetchTimestampMillis(),i=this.storage.getActiveConfig(),[4,t];case 1:return(s=n.sent())&&(this.lastFetchStatus=s),[4,e];case 2:return(r=n.sent())&&(this.lastSuccessfulFetchTimestampMillis=r),[4,i];case 3:return(o=n.sent())&&(this.activeConfig=o),[2]}}))}))},t.prototype.setLastFetchStatus=function(t){return this.lastFetchStatus=t,this.storage.setLastFetchStatus(t)},t.prototype.setLastSuccessfulFetchTimestampMillis=function(t){return this.lastSuccessfulFetchTimestampMillis=t,this.storage.setLastSuccessfulFetchTimestampMillis(t)},t.prototype.setActiveConfig=function(t){return this.activeConfig=t,this.storage.setActiveConfig(t)},t}();function y(t,e){return new Promise((function(i,s){var r=Math.max(e-Date.now(),0),n=setTimeout(i,r);t.addEventListener((function(){clearTimeout(n),s(l.create(\"fetch-throttle\",{throttleEndTimeMillis:e}))}))}))}var C,S=function(){function t(t,e){this.client=t,this.storage=e}return t.prototype.fetch=function(t){return Object(n.b)(this,void 0,void 0,(function(){var e;return Object(n.d)(this,(function(i){switch(i.label){case 0:return[4,this.storage.getThrottleMetadata()];case 1:return e=i.sent()||{backoffCount:0,throttleEndTimeMillis:Date.now()},[2,this.attemptFetch(t,e)]}}))}))},t.prototype.attemptFetch=function(t,e){var i=e.throttleEndTimeMillis,s=e.backoffCount;return Object(n.b)(this,void 0,void 0,(function(){var e,r,a;return Object(n.d)(this,(function(n){switch(n.label){case 0:return[4,y(t.signal,i)];case 1:n.sent(),n.label=2;case 2:return n.trys.push([2,5,,7]),[4,this.client.fetch(t)];case 3:return e=n.sent(),[4,this.storage.deleteThrottleMetadata()];case 4:return n.sent(),[2,e];case 5:if(!function(t){if(!(t instanceof o.c)||!t.customData)return!1;var e=Number(t.customData.httpStatus);return 429===e||500===e||503===e||504===e}(r=n.sent()))throw r;return a={throttleEndTimeMillis:Date.now()+Object(o.j)(s),backoffCount:s+1},[4,this.storage.setThrottleMetadata(a)];case 6:return n.sent(),[2,this.attemptFetch(t,a)];case 7:return[2]}}))}))},t}(),T=\"@firebase/remote-config\";(C=r.a).INTERNAL.registerComponent(new c.a(\"remoteConfig\",(function(t,e){var i=t.getProvider(\"app\").getImmediate(),s=t.getProvider(\"installations\").getImmediate();if(\"undefined\"===typeof window)throw l.create(\"registration-window\");var r=i.options,n=r.projectId,o=r.apiKey,c=r.appId;if(!n)throw l.create(\"registration-project-id\");if(!o)throw l.create(\"registration-api-key\");if(!c)throw l.create(\"registration-app-id\");e=e||\"firebase\";var h=new _(c,i.name,e),g=new w(h),p=new a.b(T);p.logLevel=a.a.ERROR;var d=new f(s,C.SDK_VERSION,e,n,o,c),v=new S(d,h),b=new u(v,h,g,p),y=new m(i,b,g,h,p);return y.ensureInitialized(),y}),\"PUBLIC\").setMultipleInstances(!0)),C.registerVersion(T,\"0.1.30\")}}]);","map":{"version":3,"sources":["static/chunks/remoteConfig.831f8ecb1944c02eaf8f.js"],"names":["window","push","oRHo","module","__webpack_exports__","__webpack_require__","r","index_esm_a","index_esm","tslib_es6","util_dist_index_esm","logger_dist_index_esm","component_dist_index_esm","index_esm_CachingClient","CachingClient","client","storage","storageCache","logger","this","prototype","isCachedDataFresh","cacheMaxAgeMillis","lastSuccessfulFetchTimestampMillis","debug","cacheAgeMillis","Date","now","fetch","request","Object","_a","lastSuccessfulFetchResponse","response","storageOperations","_b","label","Promise","all","getLastSuccessfulFetchTimestampMillis","getLastSuccessfulFetchResponse","sent","eTag","setLastSuccessfulFetchTimestampMillis","status","setLastSuccessfulFetchResponse","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","index_esm_RestClient","RestClient","firebaseInstallations","sdkVersion","namespace","projectId","apiKey","appId","installationId","installationToken","urlBase","url","headers","requestBody","options","fetchPromise","timeoutPromise","originalError_1","errorCode","responseEtag","config","state","responseBody","originalError_2","getId","getToken","FIREBASE_REMOTE_CONFIG_URL_BASE","Content-Type","Content-Encoding","If-None-Match","sdk_version","app_instance_id","app_instance_id_token","app_id","language_code","navigatorLanguage","navigator","languages","language","method","body","JSON","stringify","_resolve","reject","signal","addEventListener","error","Error","name","trys","race","create","originalErrorMessage","message","get","undefined","json","httpStatus","RemoteConfigAbortSignal","listeners","listener","abort","forEach","BOOLEAN_TRUTHY_VALUES","Value","_source","_value","asString","asBoolean","indexOf","toLowerCase","asNumber","num","Number","isNaN","getSource","index_esm_RemoteConfig","RemoteConfig","app","_client","_storageCache","_storage","_logger","_isInitializationComplete","settings","fetchTimeoutMillis","minimumFetchIntervalMillis","defaultConfig","setLogLevel","logLevel","DEBUG","SILENT","ERROR","defineProperty","enumerable","configurable","getLastFetchStatus","activate","activeConfigEtag","getActiveConfigEtag","setActiveConfig","setActiveConfigEtag","ensureInitialized","_this","_initializePromise","loadFromStorage","then","abortSignal","e_1","lastFetchStatus","setTimeout","setLastFetchStatus","e","code","fetchAndActivate","getAll","obj1","obj2","keys","getAllKeys","getActiveConfig","reduce","allConfigs","key","getValue","getBoolean","getNumber","getString","activeConfig","String","toFirebaseError","event","originalError","target","APP_NAMESPACE_STORE","index_esm_Storage","Storage","appName","openDbPromise","resolve","indexedDB","open","onerror","onsuccess","result","onupgradeneeded","db","oldVersion","createObjectStore","keyPath","set","timestamp","etag","getThrottleMetadata","setThrottleMetadata","metadata","deleteThrottleMetadata","delete","objectStore","transaction","compositeKey","createCompositeKey","value","put","join","index_esm_StorageCache","StorageCache","lastFetchStatusPromise","lastSuccessfulFetchTimestampMillisPromise","activeConfigPromise","timestampMillis","setAbortableTimeout","throttleEndTimeMillis","backoffMillis","Math","max","timeout","clearTimeout","firebaseInstance","index_esm_RetryingClient","RetryingClient","throttleMetadata","backoffCount","attemptFetch","customData","isRetriableError","index_esm_name","INTERNAL","registerComponent","container","getProvider","getImmediate","installations","restClient","SDK_VERSION","retryingClient","cachingClient","remoteConfigInstance","setMultipleInstances","registerVersion"],"mappings":"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"},"name":"static/chunks/remoteConfig.831f8ecb1944c02eaf8f.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[27],{\n\n/***/ \"oRHo\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/@firebase/app/dist/index.esm.js\nvar index_esm = __webpack_require__(\"zIRd\");\n\n// EXTERNAL MODULE: ./node_modules/@firebase/installations/dist/index.esm.js\nvar dist_index_esm = __webpack_require__(\"fSjL\");\n\n// EXTERNAL MODULE: ./node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(\"mrSG\");\n\n// EXTERNAL MODULE: ./node_modules/@firebase/util/dist/index.esm.js\nvar util_dist_index_esm = __webpack_require__(\"qOnz\");\n\n// EXTERNAL MODULE: ./node_modules/@firebase/logger/dist/index.esm.js\nvar logger_dist_index_esm = __webpack_require__(\"q/0M\");\n\n// EXTERNAL MODULE: ./node_modules/@firebase/component/dist/index.esm.js\nvar component_dist_index_esm = __webpack_require__(\"/6Yf\");\n\n// CONCATENATED MODULE: ./node_modules/@firebase/remote-config/dist/index.esm.js\n\n\n\n\n\n\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements the {@link RemoteConfigClient} abstraction with success response caching.\r\n *\r\n * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service\r\n * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the\r\n * Cache API doesn't support matching entries by time.\r\n */\r\nvar index_esm_CachingClient = /** @class */ (function () {\r\n    function CachingClient(client, storage, storageCache, logger) {\r\n        this.client = client;\r\n        this.storage = storage;\r\n        this.storageCache = storageCache;\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Returns true if the age of the cached fetched configs is less than or equal to\r\n     * {@link Settings#minimumFetchIntervalInSeconds}.\r\n     *\r\n     * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the\r\n     * native Fetch API.\r\n     *\r\n     * <p>Visible for testing.\r\n     */\r\n    CachingClient.prototype.isCachedDataFresh = function (cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis) {\r\n        // Cache can only be fresh if it's populated.\r\n        if (!lastSuccessfulFetchTimestampMillis) {\r\n            this.logger.debug('Config fetch cache check. Cache unpopulated.');\r\n            return false;\r\n        }\r\n        // Calculates age of cache entry.\r\n        var cacheAgeMillis = Date.now() - lastSuccessfulFetchTimestampMillis;\r\n        var isCachedDataFresh = cacheAgeMillis <= cacheMaxAgeMillis;\r\n        this.logger.debug('Config fetch cache check.' +\r\n            (\" Cache age millis: \" + cacheAgeMillis + \".\") +\r\n            (\" Cache max age millis (minimumFetchIntervalMillis setting): \" + cacheMaxAgeMillis + \".\") +\r\n            (\" Is cache hit: \" + isCachedDataFresh + \".\"));\r\n        return isCachedDataFresh;\r\n    };\r\n    CachingClient.prototype.fetch = function (request) {\r\n        return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var _a, lastSuccessfulFetchTimestampMillis, lastSuccessfulFetchResponse, response, storageOperations;\r\n            return Object(tslib_es6[\"d\" /* __generator */])(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.storage.getLastSuccessfulFetchTimestampMillis(),\r\n                            this.storage.getLastSuccessfulFetchResponse()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), lastSuccessfulFetchTimestampMillis = _a[0], lastSuccessfulFetchResponse = _a[1];\r\n                        // Exits early on cache hit.\r\n                        if (lastSuccessfulFetchResponse &&\r\n                            this.isCachedDataFresh(request.cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis)) {\r\n                            return [2 /*return*/, lastSuccessfulFetchResponse];\r\n                        }\r\n                        // Deviates from pure decorator by not honoring a passed ETag since we don't have a public API\r\n                        // that allows the caller to pass an ETag.\r\n                        request.eTag =\r\n                            lastSuccessfulFetchResponse && lastSuccessfulFetchResponse.eTag;\r\n                        return [4 /*yield*/, this.client.fetch(request)];\r\n                    case 2:\r\n                        response = _b.sent();\r\n                        storageOperations = [\r\n                            // Uses write-through cache for consistency with synchronous public API.\r\n                            this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())\r\n                        ];\r\n                        if (response.status === 200) {\r\n                            // Caches response only if it has changed, ie non-304 responses.\r\n                            storageOperations.push(this.storage.setLastSuccessfulFetchResponse(response));\r\n                        }\r\n                        return [4 /*yield*/, Promise.all(storageOperations)];\r\n                    case 3:\r\n                        _b.sent();\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return CachingClient;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar index_esm_a;\r\nvar ERROR_DESCRIPTION_MAP = (index_esm_a = {},\r\n    index_esm_a[\"registration-window\" /* REGISTRATION_WINDOW */] = 'Undefined window object. This SDK only supports usage in a browser environment.',\r\n    index_esm_a[\"registration-project-id\" /* REGISTRATION_PROJECT_ID */] = 'Undefined project identifier. Check Firebase app initialization.',\r\n    index_esm_a[\"registration-api-key\" /* REGISTRATION_API_KEY */] = 'Undefined API key. Check Firebase app initialization.',\r\n    index_esm_a[\"registration-app-id\" /* REGISTRATION_APP_ID */] = 'Undefined app identifier. Check Firebase app initialization.',\r\n    index_esm_a[\"storage-open\" /* STORAGE_OPEN */] = 'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\r\n    index_esm_a[\"storage-get\" /* STORAGE_GET */] = 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\r\n    index_esm_a[\"storage-set\" /* STORAGE_SET */] = 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\r\n    index_esm_a[\"storage-delete\" /* STORAGE_DELETE */] = 'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.',\r\n    index_esm_a[\"fetch-client-network\" /* FETCH_NETWORK */] = 'Fetch client failed to connect to a network. Check Internet connection.' +\r\n        ' Original error: {$originalErrorMessage}.',\r\n    index_esm_a[\"fetch-timeout\" /* FETCH_TIMEOUT */] = 'The config fetch request timed out. ' +\r\n        ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.',\r\n    index_esm_a[\"fetch-throttle\" /* FETCH_THROTTLE */] = 'The config fetch request timed out while in an exponential backoff state.' +\r\n        ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.' +\r\n        ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\r\n    index_esm_a[\"fetch-client-parse\" /* FETCH_PARSE */] = 'Fetch client could not parse response.' +\r\n        ' Original error: {$originalErrorMessage}.',\r\n    index_esm_a[\"fetch-status\" /* FETCH_STATUS */] = 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',\r\n    index_esm_a);\r\nvar ERROR_FACTORY = new util_dist_index_esm[\"b\" /* ErrorFactory */]('remoteconfig' /* service */, 'Remote Config' /* service name */, ERROR_DESCRIPTION_MAP);\r\n// Note how this is like typeof/instanceof, but for ErrorCode.\r\nfunction hasErrorCode(e, errorCode) {\r\n    return e instanceof util_dist_index_esm[\"c\" /* FirebaseError */] && e.code.indexOf(errorCode) !== -1;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Attempts to get the most accurate browser language setting.\r\n *\r\n * <p>Adapted from getUserLanguage in packages/auth/src/utils.js for TypeScript.\r\n *\r\n * <p>Defers default language specification to server logic for consistency.\r\n *\r\n * @param navigatorLanguage Enables tests to override read-only {@link NavigatorLanguage}.\r\n */\r\nfunction getUserLanguage(navigatorLanguage) {\r\n    if (navigatorLanguage === void 0) { navigatorLanguage = navigator; }\r\n    return (\r\n    // Most reliable, but only supported in Chrome/Firefox.\r\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\r\n        // Supported in most browsers, but returns the language of the browser\r\n        // UI, not the language set in browser settings.\r\n        navigatorLanguage.language\r\n    // Polyfill otherwise.\r\n    );\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements the Client abstraction for the Remote Config REST API.\r\n */\r\nvar index_esm_RestClient = /** @class */ (function () {\r\n    function RestClient(firebaseInstallations, sdkVersion, namespace, projectId, apiKey, appId) {\r\n        this.firebaseInstallations = firebaseInstallations;\r\n        this.sdkVersion = sdkVersion;\r\n        this.namespace = namespace;\r\n        this.projectId = projectId;\r\n        this.apiKey = apiKey;\r\n        this.appId = appId;\r\n    }\r\n    /**\r\n     * Fetches from the Remote Config REST API.\r\n     *\r\n     * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't\r\n     * connect to the network.\r\n     * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the\r\n     * fetch response.\r\n     * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.\r\n     */\r\n    RestClient.prototype.fetch = function (request) {\r\n        return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var _a, installationId, installationToken, urlBase, url, headers, requestBody, options, fetchPromise, timeoutPromise, response, originalError_1, errorCode, status, responseEtag, config, state, responseBody, originalError_2;\r\n            return Object(tslib_es6[\"d\" /* __generator */])(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.firebaseInstallations.getId(),\r\n                            this.firebaseInstallations.getToken()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), installationId = _a[0], installationToken = _a[1];\r\n                        urlBase = window.FIREBASE_REMOTE_CONFIG_URL_BASE ||\r\n                            'https://firebaseremoteconfig.googleapis.com';\r\n                        url = urlBase + \"/v1/projects/\" + this.projectId + \"/namespaces/\" + this.namespace + \":fetch?key=\" + this.apiKey;\r\n                        headers = {\r\n                            'Content-Type': 'application/json',\r\n                            'Content-Encoding': 'gzip',\r\n                            // Deviates from pure decorator by not passing max-age header since we don't currently have\r\n                            // service behavior using that header.\r\n                            'If-None-Match': request.eTag || '*'\r\n                        };\r\n                        requestBody = {\r\n                            /* eslint-disable camelcase */\r\n                            sdk_version: this.sdkVersion,\r\n                            app_instance_id: installationId,\r\n                            app_instance_id_token: installationToken,\r\n                            app_id: this.appId,\r\n                            language_code: getUserLanguage()\r\n                            /* eslint-enable camelcase */\r\n                        };\r\n                        options = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: JSON.stringify(requestBody)\r\n                        };\r\n                        fetchPromise = fetch(url, options);\r\n                        timeoutPromise = new Promise(function (_resolve, reject) {\r\n                            // Maps async event listener to Promise API.\r\n                            request.signal.addEventListener(function () {\r\n                                // Emulates https://heycam.github.io/webidl/#aborterror\r\n                                var error = new Error('The operation was aborted.');\r\n                                error.name = 'AbortError';\r\n                                reject(error);\r\n                            });\r\n                        });\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        _b.trys.push([2, 5, , 6]);\r\n                        return [4 /*yield*/, Promise.race([fetchPromise, timeoutPromise])];\r\n                    case 3:\r\n                        _b.sent();\r\n                        return [4 /*yield*/, fetchPromise];\r\n                    case 4:\r\n                        response = _b.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        originalError_1 = _b.sent();\r\n                        errorCode = \"fetch-client-network\" /* FETCH_NETWORK */;\r\n                        if (originalError_1.name === 'AbortError') {\r\n                            errorCode = \"fetch-timeout\" /* FETCH_TIMEOUT */;\r\n                        }\r\n                        throw ERROR_FACTORY.create(errorCode, {\r\n                            originalErrorMessage: originalError_1.message\r\n                        });\r\n                    case 6:\r\n                        status = response.status;\r\n                        responseEtag = response.headers.get('ETag') || undefined;\r\n                        if (!(response.status === 200)) return [3 /*break*/, 11];\r\n                        responseBody = void 0;\r\n                        _b.label = 7;\r\n                    case 7:\r\n                        _b.trys.push([7, 9, , 10]);\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 8:\r\n                        responseBody = _b.sent();\r\n                        return [3 /*break*/, 10];\r\n                    case 9:\r\n                        originalError_2 = _b.sent();\r\n                        throw ERROR_FACTORY.create(\"fetch-client-parse\" /* FETCH_PARSE */, {\r\n                            originalErrorMessage: originalError_2.message\r\n                        });\r\n                    case 10:\r\n                        config = responseBody['entries'];\r\n                        state = responseBody['state'];\r\n                        _b.label = 11;\r\n                    case 11:\r\n                        // Normalizes based on legacy state.\r\n                        if (state === 'INSTANCE_STATE_UNSPECIFIED') {\r\n                            status = 500;\r\n                        }\r\n                        else if (state === 'NO_CHANGE') {\r\n                            status = 304;\r\n                        }\r\n                        else if (state === 'NO_TEMPLATE' || state === 'EMPTY_CONFIG') {\r\n                            // These cases can be fixed remotely, so normalize to safe value.\r\n                            config = {};\r\n                        }\r\n                        // Normalize to exception-based control flow for non-success cases.\r\n                        // Encapsulates HTTP specifics in this class as much as possible. Status is still the best for\r\n                        // differentiating success states (200 from 304; the state body param is undefined in a\r\n                        // standard 304).\r\n                        if (status !== 304 && status !== 200) {\r\n                            throw ERROR_FACTORY.create(\"fetch-status\" /* FETCH_STATUS */, {\r\n                                httpStatus: status\r\n                            });\r\n                        }\r\n                        return [2 /*return*/, { status: status, eTag: responseEtag, config: config }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RestClient;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Shims a minimal AbortSignal.\r\n *\r\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\r\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\r\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\r\n * swapped out if/when we do.\r\n */\r\nvar RemoteConfigAbortSignal = /** @class */ (function () {\r\n    function RemoteConfigAbortSignal() {\r\n        this.listeners = [];\r\n    }\r\n    RemoteConfigAbortSignal.prototype.addEventListener = function (listener) {\r\n        this.listeners.push(listener);\r\n    };\r\n    RemoteConfigAbortSignal.prototype.abort = function () {\r\n        this.listeners.forEach(function (listener) { return listener(); });\r\n    };\r\n    return RemoteConfigAbortSignal;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_VALUE_FOR_BOOLEAN = false;\r\nvar DEFAULT_VALUE_FOR_STRING = '';\r\nvar DEFAULT_VALUE_FOR_NUMBER = 0;\r\nvar BOOLEAN_TRUTHY_VALUES = ['1', 'true', 't', 'yes', 'y', 'on'];\r\nvar Value = /** @class */ (function () {\r\n    function Value(_source, _value) {\r\n        if (_value === void 0) { _value = DEFAULT_VALUE_FOR_STRING; }\r\n        this._source = _source;\r\n        this._value = _value;\r\n    }\r\n    Value.prototype.asString = function () {\r\n        return this._value;\r\n    };\r\n    Value.prototype.asBoolean = function () {\r\n        if (this._source === 'static') {\r\n            return DEFAULT_VALUE_FOR_BOOLEAN;\r\n        }\r\n        return BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase()) >= 0;\r\n    };\r\n    Value.prototype.asNumber = function () {\r\n        if (this._source === 'static') {\r\n            return DEFAULT_VALUE_FOR_NUMBER;\r\n        }\r\n        var num = Number(this._value);\r\n        if (isNaN(num)) {\r\n            num = DEFAULT_VALUE_FOR_NUMBER;\r\n        }\r\n        return num;\r\n    };\r\n    Value.prototype.getSource = function () {\r\n        return this._source;\r\n    };\r\n    return Value;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_FETCH_TIMEOUT_MILLIS = 60 * 1000; // One minute\r\nvar DEFAULT_CACHE_MAX_AGE_MILLIS = 12 * 60 * 60 * 1000; // Twelve hours.\r\n/**\r\n * Encapsulates business logic mapping network and storage dependencies to the public SDK API.\r\n *\r\n * See {@link https://github.com/FirebasePrivate/firebase-js-sdk/blob/master/packages/firebase/index.d.ts|interface documentation} for method descriptions.\r\n */\r\nvar index_esm_RemoteConfig = /** @class */ (function () {\r\n    function RemoteConfig(\r\n    // Required by FirebaseServiceFactory interface.\r\n    app, \r\n    // JS doesn't support private yet\r\n    // (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an\r\n    // underscore prefix.\r\n    _client, _storageCache, _storage, _logger) {\r\n        this.app = app;\r\n        this._client = _client;\r\n        this._storageCache = _storageCache;\r\n        this._storage = _storage;\r\n        this._logger = _logger;\r\n        // Tracks completion of initialization promise.\r\n        this._isInitializationComplete = false;\r\n        this.settings = {\r\n            fetchTimeoutMillis: DEFAULT_FETCH_TIMEOUT_MILLIS,\r\n            minimumFetchIntervalMillis: DEFAULT_CACHE_MAX_AGE_MILLIS\r\n        };\r\n        this.defaultConfig = {};\r\n    }\r\n    // Based on packages/firestore/src/util/log.ts but not static because we need per-instance levels\r\n    // to differentiate 2p and 3p use-cases.\r\n    RemoteConfig.prototype.setLogLevel = function (logLevel) {\r\n        switch (logLevel) {\r\n            case 'debug':\r\n                this._logger.logLevel = logger_dist_index_esm[\"a\" /* LogLevel */].DEBUG;\r\n                break;\r\n            case 'silent':\r\n                this._logger.logLevel = logger_dist_index_esm[\"a\" /* LogLevel */].SILENT;\r\n                break;\r\n            default:\r\n                this._logger.logLevel = logger_dist_index_esm[\"a\" /* LogLevel */].ERROR;\r\n        }\r\n    };\r\n    Object.defineProperty(RemoteConfig.prototype, \"fetchTimeMillis\", {\r\n        get: function () {\r\n            return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RemoteConfig.prototype, \"lastFetchStatus\", {\r\n        get: function () {\r\n            return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    RemoteConfig.prototype.activate = function () {\r\n        return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var _a, lastSuccessfulFetchResponse, activeConfigEtag;\r\n            return Object(tslib_es6[\"d\" /* __generator */])(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this._storage.getLastSuccessfulFetchResponse(),\r\n                            this._storage.getActiveConfigEtag()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), lastSuccessfulFetchResponse = _a[0], activeConfigEtag = _a[1];\r\n                        if (!lastSuccessfulFetchResponse ||\r\n                            !lastSuccessfulFetchResponse.config ||\r\n                            !lastSuccessfulFetchResponse.eTag ||\r\n                            lastSuccessfulFetchResponse.eTag === activeConfigEtag) {\r\n                            // Either there is no successful fetched config, or is the same as current active\r\n                            // config.\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        return [4 /*yield*/, Promise.all([\r\n                                this._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config),\r\n                                this._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)\r\n                            ])];\r\n                    case 2:\r\n                        _b.sent();\r\n                        return [2 /*return*/, true];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RemoteConfig.prototype.ensureInitialized = function () {\r\n        var _this = this;\r\n        if (!this._initializePromise) {\r\n            this._initializePromise = this._storageCache\r\n                .loadFromStorage()\r\n                .then(function () {\r\n                _this._isInitializationComplete = true;\r\n            });\r\n        }\r\n        return this._initializePromise;\r\n    };\r\n    /**\r\n     * @throws a {@link ErrorCode.FETCH_CLIENT_TIMEOUT} if the request takes longer than\r\n     * {@link Settings.fetchTimeoutInSeconds} or\r\n     * {@link DEFAULT_FETCH_TIMEOUT_SECONDS}.\r\n     */\r\n    RemoteConfig.prototype.fetch = function () {\r\n        return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var abortSignal, e_1, lastFetchStatus;\r\n            var _this = this;\r\n            return Object(tslib_es6[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        abortSignal = new RemoteConfigAbortSignal();\r\n                        setTimeout(function () { return Object(tslib_es6[\"b\" /* __awaiter */])(_this, void 0, void 0, function () {\r\n                            return Object(tslib_es6[\"d\" /* __generator */])(this, function (_a) {\r\n                                // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\r\n                                abortSignal.abort();\r\n                                return [2 /*return*/];\r\n                            });\r\n                        }); }, this.settings.fetchTimeoutMillis);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 6]);\r\n                        return [4 /*yield*/, this._client.fetch({\r\n                                cacheMaxAgeMillis: this.settings.minimumFetchIntervalMillis,\r\n                                signal: abortSignal\r\n                            })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this._storageCache.setLastFetchStatus('success')];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        lastFetchStatus = hasErrorCode(e_1, \"fetch-throttle\" /* FETCH_THROTTLE */)\r\n                            ? 'throttle'\r\n                            : 'failure';\r\n                        return [4 /*yield*/, this._storageCache.setLastFetchStatus(lastFetchStatus)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        throw e_1;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RemoteConfig.prototype.fetchAndActivate = function () {\r\n        return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            return Object(tslib_es6[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.fetch()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, this.activate()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RemoteConfig.prototype.getAll = function () {\r\n        var _this = this;\r\n        return getAllKeys(this._storageCache.getActiveConfig(), this.defaultConfig).reduce(function (allConfigs, key) {\r\n            allConfigs[key] = _this.getValue(key);\r\n            return allConfigs;\r\n        }, {});\r\n    };\r\n    RemoteConfig.prototype.getBoolean = function (key) {\r\n        return this.getValue(key).asBoolean();\r\n    };\r\n    RemoteConfig.prototype.getNumber = function (key) {\r\n        return this.getValue(key).asNumber();\r\n    };\r\n    RemoteConfig.prototype.getString = function (key) {\r\n        return this.getValue(key).asString();\r\n    };\r\n    RemoteConfig.prototype.getValue = function (key) {\r\n        if (!this._isInitializationComplete) {\r\n            this._logger.debug(\"A value was requested for key \\\"\" + key + \"\\\" before SDK initialization completed.\" +\r\n                ' Await on ensureInitialized if the intent was to get a previously activated value.');\r\n        }\r\n        var activeConfig = this._storageCache.getActiveConfig();\r\n        if (activeConfig && activeConfig[key] !== undefined) {\r\n            return new Value('remote', activeConfig[key]);\r\n        }\r\n        else if (this.defaultConfig && this.defaultConfig[key] !== undefined) {\r\n            return new Value('default', String(this.defaultConfig[key]));\r\n        }\r\n        this._logger.debug(\"Returning static value for key \\\"\" + key + \"\\\".\" +\r\n            ' Define a default or remote value if this is unintentional.');\r\n        return new Value('static');\r\n    };\r\n    return RemoteConfig;\r\n}());\r\n/**\r\n * Dedupes and returns an array of all the keys of the received objects.\r\n */\r\nfunction getAllKeys(obj1, obj2) {\r\n    if (obj1 === void 0) { obj1 = {}; }\r\n    if (obj2 === void 0) { obj2 = {}; }\r\n    return Object.keys(Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, obj1), obj2));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.\r\n */\r\nfunction toFirebaseError(event, errorCode) {\r\n    var originalError = event.target.error || undefined;\r\n    return ERROR_FACTORY.create(errorCode, {\r\n        originalErrorMessage: originalError && originalError.message\r\n    });\r\n}\r\n/**\r\n * A general-purpose store keyed by app + namespace + {@link\r\n * ProjectNamespaceKeyFieldValue}.\r\n *\r\n * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact\r\n * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys\r\n * for a set of key-value pairs. See {@link Storage#createCompositeKey}.\r\n *\r\n * <p>Visible for testing.\r\n */\r\nvar APP_NAMESPACE_STORE = 'app_namespace_store';\r\nvar DB_NAME = 'firebase_remote_config';\r\nvar DB_VERSION = 1;\r\n// Visible for testing.\r\nfunction openDatabase() {\r\n    return new Promise(function (resolve, reject) {\r\n        var request = indexedDB.open(DB_NAME, DB_VERSION);\r\n        request.onerror = function (event) {\r\n            reject(toFirebaseError(event, \"storage-open\" /* STORAGE_OPEN */));\r\n        };\r\n        request.onsuccess = function (event) {\r\n            resolve(event.target.result);\r\n        };\r\n        request.onupgradeneeded = function (event) {\r\n            var db = event.target.result;\r\n            // We don't use 'break' in this switch statement, the fall-through\r\n            // behavior is what we want, because if there are multiple versions between\r\n            // the old version and the current version, we want ALL the migrations\r\n            // that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (event.oldVersion) {\r\n                case 0:\r\n                    db.createObjectStore(APP_NAMESPACE_STORE, {\r\n                        keyPath: 'compositeKey'\r\n                    });\r\n            }\r\n        };\r\n    });\r\n}\r\n/**\r\n * Abstracts data persistence.\r\n */\r\nvar index_esm_Storage = /** @class */ (function () {\r\n    /**\r\n     * @param appId enables storage segmentation by app (ID + name).\r\n     * @param appName enables storage segmentation by app (ID + name).\r\n     * @param namespace enables storage segmentation by namespace.\r\n     */\r\n    function Storage(appId, appName, namespace, openDbPromise) {\r\n        if (openDbPromise === void 0) { openDbPromise = openDatabase(); }\r\n        this.appId = appId;\r\n        this.appName = appName;\r\n        this.namespace = namespace;\r\n        this.openDbPromise = openDbPromise;\r\n    }\r\n    Storage.prototype.getLastFetchStatus = function () {\r\n        return this.get('last_fetch_status');\r\n    };\r\n    Storage.prototype.setLastFetchStatus = function (status) {\r\n        return this.set('last_fetch_status', status);\r\n    };\r\n    // This is comparable to a cache entry timestamp. If we need to expire other data, we could\r\n    // consider adding timestamp to all storage records and an optional max age arg to getters.\r\n    Storage.prototype.getLastSuccessfulFetchTimestampMillis = function () {\r\n        return this.get('last_successful_fetch_timestamp_millis');\r\n    };\r\n    Storage.prototype.setLastSuccessfulFetchTimestampMillis = function (timestamp) {\r\n        return this.set('last_successful_fetch_timestamp_millis', timestamp);\r\n    };\r\n    Storage.prototype.getLastSuccessfulFetchResponse = function () {\r\n        return this.get('last_successful_fetch_response');\r\n    };\r\n    Storage.prototype.setLastSuccessfulFetchResponse = function (response) {\r\n        return this.set('last_successful_fetch_response', response);\r\n    };\r\n    Storage.prototype.getActiveConfig = function () {\r\n        return this.get('active_config');\r\n    };\r\n    Storage.prototype.setActiveConfig = function (config) {\r\n        return this.set('active_config', config);\r\n    };\r\n    Storage.prototype.getActiveConfigEtag = function () {\r\n        return this.get('active_config_etag');\r\n    };\r\n    Storage.prototype.setActiveConfigEtag = function (etag) {\r\n        return this.set('active_config_etag', etag);\r\n    };\r\n    Storage.prototype.getThrottleMetadata = function () {\r\n        return this.get('throttle_metadata');\r\n    };\r\n    Storage.prototype.setThrottleMetadata = function (metadata) {\r\n        return this.set('throttle_metadata', metadata);\r\n    };\r\n    Storage.prototype.deleteThrottleMetadata = function () {\r\n        return this.delete('throttle_metadata');\r\n    };\r\n    Storage.prototype.get = function (key) {\r\n        return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var db;\r\n            var _this = this;\r\n            return Object(tslib_es6[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.openDbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readonly');\r\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n                                var compositeKey = _this.createCompositeKey(key);\r\n                                try {\r\n                                    var request = objectStore.get(compositeKey);\r\n                                    request.onerror = function (event) {\r\n                                        reject(toFirebaseError(event, \"storage-get\" /* STORAGE_GET */));\r\n                                    };\r\n                                    request.onsuccess = function (event) {\r\n                                        var result = event.target.result;\r\n                                        if (result) {\r\n                                            resolve(result.value);\r\n                                        }\r\n                                        else {\r\n                                            resolve(undefined);\r\n                                        }\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    reject(ERROR_FACTORY.create(\"storage-get\" /* STORAGE_GET */, {\r\n                                        originalErrorMessage: e && e.message\r\n                                    }));\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Storage.prototype.set = function (key, value) {\r\n        return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var db;\r\n            var _this = this;\r\n            return Object(tslib_es6[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.openDbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\r\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n                                var compositeKey = _this.createCompositeKey(key);\r\n                                try {\r\n                                    var request = objectStore.put({\r\n                                        compositeKey: compositeKey,\r\n                                        value: value\r\n                                    });\r\n                                    request.onerror = function (event) {\r\n                                        reject(toFirebaseError(event, \"storage-set\" /* STORAGE_SET */));\r\n                                    };\r\n                                    request.onsuccess = function () {\r\n                                        resolve();\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    reject(ERROR_FACTORY.create(\"storage-set\" /* STORAGE_SET */, {\r\n                                        originalErrorMessage: e && e.message\r\n                                    }));\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Storage.prototype.delete = function (key) {\r\n        return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var db;\r\n            var _this = this;\r\n            return Object(tslib_es6[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.openDbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\r\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n                                var compositeKey = _this.createCompositeKey(key);\r\n                                try {\r\n                                    var request = objectStore.delete(compositeKey);\r\n                                    request.onerror = function (event) {\r\n                                        reject(toFirebaseError(event, \"storage-delete\" /* STORAGE_DELETE */));\r\n                                    };\r\n                                    request.onsuccess = function () {\r\n                                        resolve();\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    reject(ERROR_FACTORY.create(\"storage-delete\" /* STORAGE_DELETE */, {\r\n                                        originalErrorMessage: e && e.message\r\n                                    }));\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // Facilitates composite key functionality (which is unsupported in IE).\r\n    Storage.prototype.createCompositeKey = function (key) {\r\n        return [this.appId, this.appName, this.namespace, key].join();\r\n    };\r\n    return Storage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A memory cache layer over storage to support the SDK's synchronous read requirements.\r\n */\r\nvar index_esm_StorageCache = /** @class */ (function () {\r\n    function StorageCache(storage) {\r\n        this.storage = storage;\r\n    }\r\n    /**\r\n     * Memory-only getters\r\n     */\r\n    StorageCache.prototype.getLastFetchStatus = function () {\r\n        return this.lastFetchStatus;\r\n    };\r\n    StorageCache.prototype.getLastSuccessfulFetchTimestampMillis = function () {\r\n        return this.lastSuccessfulFetchTimestampMillis;\r\n    };\r\n    StorageCache.prototype.getActiveConfig = function () {\r\n        return this.activeConfig;\r\n    };\r\n    /**\r\n     * Read-ahead getter\r\n     */\r\n    StorageCache.prototype.loadFromStorage = function () {\r\n        return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var lastFetchStatusPromise, lastSuccessfulFetchTimestampMillisPromise, activeConfigPromise, lastFetchStatus, lastSuccessfulFetchTimestampMillis, activeConfig;\r\n            return Object(tslib_es6[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        lastFetchStatusPromise = this.storage.getLastFetchStatus();\r\n                        lastSuccessfulFetchTimestampMillisPromise = this.storage.getLastSuccessfulFetchTimestampMillis();\r\n                        activeConfigPromise = this.storage.getActiveConfig();\r\n                        return [4 /*yield*/, lastFetchStatusPromise];\r\n                    case 1:\r\n                        lastFetchStatus = _a.sent();\r\n                        if (lastFetchStatus) {\r\n                            this.lastFetchStatus = lastFetchStatus;\r\n                        }\r\n                        return [4 /*yield*/, lastSuccessfulFetchTimestampMillisPromise];\r\n                    case 2:\r\n                        lastSuccessfulFetchTimestampMillis = _a.sent();\r\n                        if (lastSuccessfulFetchTimestampMillis) {\r\n                            this.lastSuccessfulFetchTimestampMillis = lastSuccessfulFetchTimestampMillis;\r\n                        }\r\n                        return [4 /*yield*/, activeConfigPromise];\r\n                    case 3:\r\n                        activeConfig = _a.sent();\r\n                        if (activeConfig) {\r\n                            this.activeConfig = activeConfig;\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Write-through setters\r\n     */\r\n    StorageCache.prototype.setLastFetchStatus = function (status) {\r\n        this.lastFetchStatus = status;\r\n        return this.storage.setLastFetchStatus(status);\r\n    };\r\n    StorageCache.prototype.setLastSuccessfulFetchTimestampMillis = function (timestampMillis) {\r\n        this.lastSuccessfulFetchTimestampMillis = timestampMillis;\r\n        return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis);\r\n    };\r\n    StorageCache.prototype.setActiveConfig = function (activeConfig) {\r\n        this.activeConfig = activeConfig;\r\n        return this.storage.setActiveConfig(activeConfig);\r\n    };\r\n    return StorageCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Supports waiting on a backoff by:\r\n *\r\n * <ul>\r\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\r\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\r\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\r\n *       request appear the same.</li>\r\n * </ul>\r\n *\r\n * <p>Visible for testing.\r\n */\r\nfunction setAbortableTimeout(signal, throttleEndTimeMillis) {\r\n    return new Promise(function (resolve, reject) {\r\n        // Derives backoff from given end time, normalizing negative numbers to zero.\r\n        var backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\r\n        var timeout = setTimeout(resolve, backoffMillis);\r\n        // Adds listener, rather than sets onabort, because signal is a shared object.\r\n        signal.addEventListener(function () {\r\n            clearTimeout(timeout);\r\n            // If the request completes before this timeout, the rejection has no effect.\r\n            reject(ERROR_FACTORY.create(\"fetch-throttle\" /* FETCH_THROTTLE */, {\r\n                throttleEndTimeMillis: throttleEndTimeMillis\r\n            }));\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\r\n */\r\nfunction isRetriableError(e) {\r\n    if (!(e instanceof util_dist_index_esm[\"c\" /* FirebaseError */]) || !e.customData) {\r\n        return false;\r\n    }\r\n    // Uses string index defined by ErrorData, which FirebaseError implements.\r\n    var httpStatus = Number(e.customData['httpStatus']);\r\n    return (httpStatus === 429 ||\r\n        httpStatus === 500 ||\r\n        httpStatus === 503 ||\r\n        httpStatus === 504);\r\n}\r\n/**\r\n * Decorates a Client with retry logic.\r\n *\r\n * <p>Comparable to CachingClient, but uses backoff logic instead of cache max age and doesn't cache\r\n * responses (because the SDK has no use for error responses).\r\n */\r\nvar index_esm_RetryingClient = /** @class */ (function () {\r\n    function RetryingClient(client, storage) {\r\n        this.client = client;\r\n        this.storage = storage;\r\n    }\r\n    RetryingClient.prototype.fetch = function (request) {\r\n        return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var throttleMetadata;\r\n            return Object(tslib_es6[\"d\" /* __generator */])(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.storage.getThrottleMetadata()];\r\n                    case 1:\r\n                        throttleMetadata = (_a.sent()) || {\r\n                            backoffCount: 0,\r\n                            throttleEndTimeMillis: Date.now()\r\n                        };\r\n                        return [2 /*return*/, this.attemptFetch(request, throttleMetadata)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * A recursive helper for attempting a fetch request repeatedly.\r\n     *\r\n     * @throws any non-retriable errors.\r\n     */\r\n    RetryingClient.prototype.attemptFetch = function (request, _a) {\r\n        var throttleEndTimeMillis = _a.throttleEndTimeMillis, backoffCount = _a.backoffCount;\r\n        return Object(tslib_es6[\"b\" /* __awaiter */])(this, void 0, void 0, function () {\r\n            var response, e_1, throttleMetadata;\r\n            return Object(tslib_es6[\"d\" /* __generator */])(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: \r\n                    // Starts with a (potentially zero) timeout to support resumption from stored state.\r\n                    // Ensures the throttle end time is honored if the last attempt timed out.\r\n                    // Note the SDK will never make a request if the fetch timeout expires at this point.\r\n                    return [4 /*yield*/, setAbortableTimeout(request.signal, throttleEndTimeMillis)];\r\n                    case 1:\r\n                        // Starts with a (potentially zero) timeout to support resumption from stored state.\r\n                        // Ensures the throttle end time is honored if the last attempt timed out.\r\n                        // Note the SDK will never make a request if the fetch timeout expires at this point.\r\n                        _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        _b.trys.push([2, 5, , 7]);\r\n                        return [4 /*yield*/, this.client.fetch(request)];\r\n                    case 3:\r\n                        response = _b.sent();\r\n                        // Note the SDK only clears throttle state if response is success or non-retriable.\r\n                        return [4 /*yield*/, this.storage.deleteThrottleMetadata()];\r\n                    case 4:\r\n                        // Note the SDK only clears throttle state if response is success or non-retriable.\r\n                        _b.sent();\r\n                        return [2 /*return*/, response];\r\n                    case 5:\r\n                        e_1 = _b.sent();\r\n                        if (!isRetriableError(e_1)) {\r\n                            throw e_1;\r\n                        }\r\n                        throttleMetadata = {\r\n                            throttleEndTimeMillis: Date.now() + Object(util_dist_index_esm[\"j\" /* calculateBackoffMillis */])(backoffCount),\r\n                            backoffCount: backoffCount + 1\r\n                        };\r\n                        // Persists state.\r\n                        return [4 /*yield*/, this.storage.setThrottleMetadata(throttleMetadata)];\r\n                    case 6:\r\n                        // Persists state.\r\n                        _b.sent();\r\n                        return [2 /*return*/, this.attemptFetch(request, throttleMetadata)];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RetryingClient;\r\n}());\n\nvar index_esm_name = \"@firebase/remote-config\";\nvar version = \"0.1.30\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerRemoteConfig(firebaseInstance) {\r\n    firebaseInstance.INTERNAL.registerComponent(new component_dist_index_esm[\"a\" /* Component */]('remoteConfig', remoteConfigFactory, \"PUBLIC\" /* PUBLIC */).setMultipleInstances(true));\r\n    firebaseInstance.registerVersion(index_esm_name, version);\r\n    function remoteConfigFactory(container, namespace) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        // The following call will always succeed because rc has `import '@firebase/installations'`\r\n        var installations = container.getProvider('installations').getImmediate();\r\n        // Guards against the SDK being used in non-browser environments.\r\n        if (typeof window === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"registration-window\" /* REGISTRATION_WINDOW */);\r\n        }\r\n        // Normalizes optional inputs.\r\n        var _a = app.options, projectId = _a.projectId, apiKey = _a.apiKey, appId = _a.appId;\r\n        if (!projectId) {\r\n            throw ERROR_FACTORY.create(\"registration-project-id\" /* REGISTRATION_PROJECT_ID */);\r\n        }\r\n        if (!apiKey) {\r\n            throw ERROR_FACTORY.create(\"registration-api-key\" /* REGISTRATION_API_KEY */);\r\n        }\r\n        if (!appId) {\r\n            throw ERROR_FACTORY.create(\"registration-app-id\" /* REGISTRATION_APP_ID */);\r\n        }\r\n        namespace = namespace || 'firebase';\r\n        var storage = new index_esm_Storage(appId, app.name, namespace);\r\n        var storageCache = new index_esm_StorageCache(storage);\r\n        var logger = new logger_dist_index_esm[\"b\" /* Logger */](index_esm_name);\r\n        // Sets ERROR as the default log level.\r\n        // See RemoteConfig#setLogLevel for corresponding normalization to ERROR log level.\r\n        logger.logLevel = logger_dist_index_esm[\"a\" /* LogLevel */].ERROR;\r\n        var restClient = new index_esm_RestClient(installations, \r\n        // Uses the JS SDK version, by which the RC package version can be deduced, if necessary.\r\n        firebaseInstance.SDK_VERSION, namespace, projectId, apiKey, appId);\r\n        var retryingClient = new index_esm_RetryingClient(restClient, storage);\r\n        var cachingClient = new index_esm_CachingClient(retryingClient, storage, storageCache, logger);\r\n        var remoteConfigInstance = new index_esm_RemoteConfig(app, cachingClient, storageCache, storage, logger);\r\n        // Starts warming cache.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        remoteConfigInstance.ensureInitialized();\r\n        return remoteConfigInstance;\r\n    }\r\n}\r\nregisterRemoteConfig(index_esm[\"a\" /* default */]);\n\n\n//# sourceMappingURL=index.esm.js.map\n\n// CONCATENATED MODULE: ./node_modules/firebase/remote-config/dist/index.esm.js\n\n//# sourceMappingURL=index.esm.js.map\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/home/raul/Documentos/Proyectos/Flexxo/flexxo-web/node_modules/@firebase/remote-config/dist/index.esm.js","/home/raul/Documentos/Proyectos/Flexxo/flexxo-web/node_modules/firebase/remote-config/dist/index.esm.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAqC;AACJ;AACwB;AAC4B;AACjC;AACJ;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA,IAAI,uBAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6CAA6C;AACrD;AACA,oDAAoD,oCAAoC;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sCAAS;AACxB;AACA,mBAAmB,wCAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAE;AACN,6BAA6B,WAAE,KAAK;AACpC,IAAI,WAAE;AACN,IAAI,WAAE;AACN,IAAI,WAAE;AACN,IAAI,WAAE;AACN,IAAI,WAAE,2FAA2F,sBAAsB;AACvH,IAAI,WAAE,8FAA8F,sBAAsB;AAC1H,IAAI,WAAE,4FAA4F,sBAAsB;AACxH,IAAI,WAAE,qGAAqG,sBAAsB;AACjI,IAAI,WAAE;AACN,2BAA2B,sBAAsB;AACjD,IAAI,WAAE;AACN;AACA,IAAI,WAAE;AACN;AACA,8EAA8E,uBAAuB;AACrG,IAAI,WAAE;AACN,2BAA2B,sBAAsB;AACjD,IAAI,WAAE,iGAAiG,YAAY;AACnH,IAAI,WAAE;AACN,wBAAwB,2CAAY;AACpC;AACA;AACA,wBAAwB,4CAAa;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,wBAAwB;AACzF;AACA;AACA,uCAAuC,+BAA+B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,oBAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,8BAA8B,WAAW,wBAAwB;AACnF;AACA,kBAAkB,4BAA4B,WAAW,oBAAoB;AAC7E;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA,eAAe,sCAAS;AACxB;AACA,mBAAmB,wCAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,+CAA+C,qDAAqD;AACpG;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,mBAAmB,EAAE;AACzE;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mCAAmC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,uDAAuD;AACvD;AACA;AACA;AACA,QAAQ,0HAA0H;AAClI;AACA,IAAI,sBAAY;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,yCAAQ;AAChD;AACA;AACA,wCAAwC,yCAAQ;AAChD;AACA;AACA,wCAAwC,yCAAQ;AAChD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,sCAAS;AACxB;AACA,mBAAmB,wCAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,kBAAkB,qCAAqC;AACvD,QAAQ,qCAAqC;AAC7C,QAAQ,oCAAoC;AAC5C;AACA;AACA,eAAe,sCAAS;AACxB;AACA;AACA,mBAAmB,wCAAW;AAC9B;AACA;AACA;AACA,gDAAgD,QAAQ,sCAAS;AACjE,mCAAmC,wCAAW;AAC9C;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB,EAAE,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,sCAAS;AACxB,mBAAmB,wCAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,0BAA0B,WAAW;AACrC,0BAA0B,WAAW;AACrC,uBAAuB,qCAAQ,CAAC,qCAAQ,GAAG;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,iBAAiB,OAAO,oBAAoB;AAC1F;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uDAAuD;AACvD,iCAAiC;AACjC;AACA;AACA;AACA,sCAAsC,iCAAiC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,iBAAO;AACX;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,gCAAgC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sCAAS;AACxB;AACA;AACA,mBAAmB,wCAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,6BAA6B;AAC7B;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,sCAAS;AACxB;AACA;AACA,mBAAmB,wCAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,6BAA6B;AAC7B;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,sCAAS;AACxB;AACA;AACA,mBAAmB,wCAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,6BAA6B;AAC7B;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,sBAAY;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sCAAS;AACxB;AACA,mBAAmB,wCAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA,uBAAuB,4CAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wBAAc;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,sCAAS;AACxB;AACA,mBAAmB,wCAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sCAAS;AACxB;AACA,mBAAmB,wCAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,6DAAsB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;;AAED,IAAI,cAAI;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,6CAAS;AAC7D,qCAAqC,cAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iBAAO;AACjC,+BAA+B,sBAAY;AAC3C,yBAAyB,uCAAM,CAAC,cAAI;AACpC;AACA;AACA,0BAA0B,yCAAQ;AAClC,6BAA6B,oBAAU;AACvC;AACA;AACA,iCAAiC,wBAAc;AAC/C,gCAAgC,uBAAa;AAC7C,uCAAuC,sBAAY;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4BAAQ;;AAEG;AAChC;;;AC3oCiC;AACjC","file":"x","sourcesContent":["import firebase from '@firebase/app';\nimport '@firebase/installations';\nimport { __awaiter, __generator, __assign } from 'tslib';\nimport { ErrorFactory, FirebaseError, calculateBackoffMillis } from '@firebase/util';\nimport { LogLevel, Logger } from '@firebase/logger';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements the {@link RemoteConfigClient} abstraction with success response caching.\r\n *\r\n * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service\r\n * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the\r\n * Cache API doesn't support matching entries by time.\r\n */\r\nvar CachingClient = /** @class */ (function () {\r\n    function CachingClient(client, storage, storageCache, logger) {\r\n        this.client = client;\r\n        this.storage = storage;\r\n        this.storageCache = storageCache;\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Returns true if the age of the cached fetched configs is less than or equal to\r\n     * {@link Settings#minimumFetchIntervalInSeconds}.\r\n     *\r\n     * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the\r\n     * native Fetch API.\r\n     *\r\n     * <p>Visible for testing.\r\n     */\r\n    CachingClient.prototype.isCachedDataFresh = function (cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis) {\r\n        // Cache can only be fresh if it's populated.\r\n        if (!lastSuccessfulFetchTimestampMillis) {\r\n            this.logger.debug('Config fetch cache check. Cache unpopulated.');\r\n            return false;\r\n        }\r\n        // Calculates age of cache entry.\r\n        var cacheAgeMillis = Date.now() - lastSuccessfulFetchTimestampMillis;\r\n        var isCachedDataFresh = cacheAgeMillis <= cacheMaxAgeMillis;\r\n        this.logger.debug('Config fetch cache check.' +\r\n            (\" Cache age millis: \" + cacheAgeMillis + \".\") +\r\n            (\" Cache max age millis (minimumFetchIntervalMillis setting): \" + cacheMaxAgeMillis + \".\") +\r\n            (\" Is cache hit: \" + isCachedDataFresh + \".\"));\r\n        return isCachedDataFresh;\r\n    };\r\n    CachingClient.prototype.fetch = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, lastSuccessfulFetchTimestampMillis, lastSuccessfulFetchResponse, response, storageOperations;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.storage.getLastSuccessfulFetchTimestampMillis(),\r\n                            this.storage.getLastSuccessfulFetchResponse()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), lastSuccessfulFetchTimestampMillis = _a[0], lastSuccessfulFetchResponse = _a[1];\r\n                        // Exits early on cache hit.\r\n                        if (lastSuccessfulFetchResponse &&\r\n                            this.isCachedDataFresh(request.cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis)) {\r\n                            return [2 /*return*/, lastSuccessfulFetchResponse];\r\n                        }\r\n                        // Deviates from pure decorator by not honoring a passed ETag since we don't have a public API\r\n                        // that allows the caller to pass an ETag.\r\n                        request.eTag =\r\n                            lastSuccessfulFetchResponse && lastSuccessfulFetchResponse.eTag;\r\n                        return [4 /*yield*/, this.client.fetch(request)];\r\n                    case 2:\r\n                        response = _b.sent();\r\n                        storageOperations = [\r\n                            // Uses write-through cache for consistency with synchronous public API.\r\n                            this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())\r\n                        ];\r\n                        if (response.status === 200) {\r\n                            // Caches response only if it has changed, ie non-304 responses.\r\n                            storageOperations.push(this.storage.setLastSuccessfulFetchResponse(response));\r\n                        }\r\n                        return [4 /*yield*/, Promise.all(storageOperations)];\r\n                    case 3:\r\n                        _b.sent();\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return CachingClient;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"registration-window\" /* REGISTRATION_WINDOW */] = 'Undefined window object. This SDK only supports usage in a browser environment.',\r\n    _a[\"registration-project-id\" /* REGISTRATION_PROJECT_ID */] = 'Undefined project identifier. Check Firebase app initialization.',\r\n    _a[\"registration-api-key\" /* REGISTRATION_API_KEY */] = 'Undefined API key. Check Firebase app initialization.',\r\n    _a[\"registration-app-id\" /* REGISTRATION_APP_ID */] = 'Undefined app identifier. Check Firebase app initialization.',\r\n    _a[\"storage-open\" /* STORAGE_OPEN */] = 'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-get\" /* STORAGE_GET */] = 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-set\" /* STORAGE_SET */] = 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-delete\" /* STORAGE_DELETE */] = 'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-client-network\" /* FETCH_NETWORK */] = 'Fetch client failed to connect to a network. Check Internet connection.' +\r\n        ' Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-timeout\" /* FETCH_TIMEOUT */] = 'The config fetch request timed out. ' +\r\n        ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.',\r\n    _a[\"fetch-throttle\" /* FETCH_THROTTLE */] = 'The config fetch request timed out while in an exponential backoff state.' +\r\n        ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.' +\r\n        ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\r\n    _a[\"fetch-client-parse\" /* FETCH_PARSE */] = 'Fetch client could not parse response.' +\r\n        ' Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-status\" /* FETCH_STATUS */] = 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',\r\n    _a);\r\nvar ERROR_FACTORY = new ErrorFactory('remoteconfig' /* service */, 'Remote Config' /* service name */, ERROR_DESCRIPTION_MAP);\r\n// Note how this is like typeof/instanceof, but for ErrorCode.\r\nfunction hasErrorCode(e, errorCode) {\r\n    return e instanceof FirebaseError && e.code.indexOf(errorCode) !== -1;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Attempts to get the most accurate browser language setting.\r\n *\r\n * <p>Adapted from getUserLanguage in packages/auth/src/utils.js for TypeScript.\r\n *\r\n * <p>Defers default language specification to server logic for consistency.\r\n *\r\n * @param navigatorLanguage Enables tests to override read-only {@link NavigatorLanguage}.\r\n */\r\nfunction getUserLanguage(navigatorLanguage) {\r\n    if (navigatorLanguage === void 0) { navigatorLanguage = navigator; }\r\n    return (\r\n    // Most reliable, but only supported in Chrome/Firefox.\r\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\r\n        // Supported in most browsers, but returns the language of the browser\r\n        // UI, not the language set in browser settings.\r\n        navigatorLanguage.language\r\n    // Polyfill otherwise.\r\n    );\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements the Client abstraction for the Remote Config REST API.\r\n */\r\nvar RestClient = /** @class */ (function () {\r\n    function RestClient(firebaseInstallations, sdkVersion, namespace, projectId, apiKey, appId) {\r\n        this.firebaseInstallations = firebaseInstallations;\r\n        this.sdkVersion = sdkVersion;\r\n        this.namespace = namespace;\r\n        this.projectId = projectId;\r\n        this.apiKey = apiKey;\r\n        this.appId = appId;\r\n    }\r\n    /**\r\n     * Fetches from the Remote Config REST API.\r\n     *\r\n     * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't\r\n     * connect to the network.\r\n     * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the\r\n     * fetch response.\r\n     * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.\r\n     */\r\n    RestClient.prototype.fetch = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, installationId, installationToken, urlBase, url, headers, requestBody, options, fetchPromise, timeoutPromise, response, originalError_1, errorCode, status, responseEtag, config, state, responseBody, originalError_2;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.firebaseInstallations.getId(),\r\n                            this.firebaseInstallations.getToken()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), installationId = _a[0], installationToken = _a[1];\r\n                        urlBase = window.FIREBASE_REMOTE_CONFIG_URL_BASE ||\r\n                            'https://firebaseremoteconfig.googleapis.com';\r\n                        url = urlBase + \"/v1/projects/\" + this.projectId + \"/namespaces/\" + this.namespace + \":fetch?key=\" + this.apiKey;\r\n                        headers = {\r\n                            'Content-Type': 'application/json',\r\n                            'Content-Encoding': 'gzip',\r\n                            // Deviates from pure decorator by not passing max-age header since we don't currently have\r\n                            // service behavior using that header.\r\n                            'If-None-Match': request.eTag || '*'\r\n                        };\r\n                        requestBody = {\r\n                            /* eslint-disable camelcase */\r\n                            sdk_version: this.sdkVersion,\r\n                            app_instance_id: installationId,\r\n                            app_instance_id_token: installationToken,\r\n                            app_id: this.appId,\r\n                            language_code: getUserLanguage()\r\n                            /* eslint-enable camelcase */\r\n                        };\r\n                        options = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: JSON.stringify(requestBody)\r\n                        };\r\n                        fetchPromise = fetch(url, options);\r\n                        timeoutPromise = new Promise(function (_resolve, reject) {\r\n                            // Maps async event listener to Promise API.\r\n                            request.signal.addEventListener(function () {\r\n                                // Emulates https://heycam.github.io/webidl/#aborterror\r\n                                var error = new Error('The operation was aborted.');\r\n                                error.name = 'AbortError';\r\n                                reject(error);\r\n                            });\r\n                        });\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        _b.trys.push([2, 5, , 6]);\r\n                        return [4 /*yield*/, Promise.race([fetchPromise, timeoutPromise])];\r\n                    case 3:\r\n                        _b.sent();\r\n                        return [4 /*yield*/, fetchPromise];\r\n                    case 4:\r\n                        response = _b.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        originalError_1 = _b.sent();\r\n                        errorCode = \"fetch-client-network\" /* FETCH_NETWORK */;\r\n                        if (originalError_1.name === 'AbortError') {\r\n                            errorCode = \"fetch-timeout\" /* FETCH_TIMEOUT */;\r\n                        }\r\n                        throw ERROR_FACTORY.create(errorCode, {\r\n                            originalErrorMessage: originalError_1.message\r\n                        });\r\n                    case 6:\r\n                        status = response.status;\r\n                        responseEtag = response.headers.get('ETag') || undefined;\r\n                        if (!(response.status === 200)) return [3 /*break*/, 11];\r\n                        responseBody = void 0;\r\n                        _b.label = 7;\r\n                    case 7:\r\n                        _b.trys.push([7, 9, , 10]);\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 8:\r\n                        responseBody = _b.sent();\r\n                        return [3 /*break*/, 10];\r\n                    case 9:\r\n                        originalError_2 = _b.sent();\r\n                        throw ERROR_FACTORY.create(\"fetch-client-parse\" /* FETCH_PARSE */, {\r\n                            originalErrorMessage: originalError_2.message\r\n                        });\r\n                    case 10:\r\n                        config = responseBody['entries'];\r\n                        state = responseBody['state'];\r\n                        _b.label = 11;\r\n                    case 11:\r\n                        // Normalizes based on legacy state.\r\n                        if (state === 'INSTANCE_STATE_UNSPECIFIED') {\r\n                            status = 500;\r\n                        }\r\n                        else if (state === 'NO_CHANGE') {\r\n                            status = 304;\r\n                        }\r\n                        else if (state === 'NO_TEMPLATE' || state === 'EMPTY_CONFIG') {\r\n                            // These cases can be fixed remotely, so normalize to safe value.\r\n                            config = {};\r\n                        }\r\n                        // Normalize to exception-based control flow for non-success cases.\r\n                        // Encapsulates HTTP specifics in this class as much as possible. Status is still the best for\r\n                        // differentiating success states (200 from 304; the state body param is undefined in a\r\n                        // standard 304).\r\n                        if (status !== 304 && status !== 200) {\r\n                            throw ERROR_FACTORY.create(\"fetch-status\" /* FETCH_STATUS */, {\r\n                                httpStatus: status\r\n                            });\r\n                        }\r\n                        return [2 /*return*/, { status: status, eTag: responseEtag, config: config }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RestClient;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Shims a minimal AbortSignal.\r\n *\r\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\r\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\r\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\r\n * swapped out if/when we do.\r\n */\r\nvar RemoteConfigAbortSignal = /** @class */ (function () {\r\n    function RemoteConfigAbortSignal() {\r\n        this.listeners = [];\r\n    }\r\n    RemoteConfigAbortSignal.prototype.addEventListener = function (listener) {\r\n        this.listeners.push(listener);\r\n    };\r\n    RemoteConfigAbortSignal.prototype.abort = function () {\r\n        this.listeners.forEach(function (listener) { return listener(); });\r\n    };\r\n    return RemoteConfigAbortSignal;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_VALUE_FOR_BOOLEAN = false;\r\nvar DEFAULT_VALUE_FOR_STRING = '';\r\nvar DEFAULT_VALUE_FOR_NUMBER = 0;\r\nvar BOOLEAN_TRUTHY_VALUES = ['1', 'true', 't', 'yes', 'y', 'on'];\r\nvar Value = /** @class */ (function () {\r\n    function Value(_source, _value) {\r\n        if (_value === void 0) { _value = DEFAULT_VALUE_FOR_STRING; }\r\n        this._source = _source;\r\n        this._value = _value;\r\n    }\r\n    Value.prototype.asString = function () {\r\n        return this._value;\r\n    };\r\n    Value.prototype.asBoolean = function () {\r\n        if (this._source === 'static') {\r\n            return DEFAULT_VALUE_FOR_BOOLEAN;\r\n        }\r\n        return BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase()) >= 0;\r\n    };\r\n    Value.prototype.asNumber = function () {\r\n        if (this._source === 'static') {\r\n            return DEFAULT_VALUE_FOR_NUMBER;\r\n        }\r\n        var num = Number(this._value);\r\n        if (isNaN(num)) {\r\n            num = DEFAULT_VALUE_FOR_NUMBER;\r\n        }\r\n        return num;\r\n    };\r\n    Value.prototype.getSource = function () {\r\n        return this._source;\r\n    };\r\n    return Value;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_FETCH_TIMEOUT_MILLIS = 60 * 1000; // One minute\r\nvar DEFAULT_CACHE_MAX_AGE_MILLIS = 12 * 60 * 60 * 1000; // Twelve hours.\r\n/**\r\n * Encapsulates business logic mapping network and storage dependencies to the public SDK API.\r\n *\r\n * See {@link https://github.com/FirebasePrivate/firebase-js-sdk/blob/master/packages/firebase/index.d.ts|interface documentation} for method descriptions.\r\n */\r\nvar RemoteConfig = /** @class */ (function () {\r\n    function RemoteConfig(\r\n    // Required by FirebaseServiceFactory interface.\r\n    app, \r\n    // JS doesn't support private yet\r\n    // (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an\r\n    // underscore prefix.\r\n    _client, _storageCache, _storage, _logger) {\r\n        this.app = app;\r\n        this._client = _client;\r\n        this._storageCache = _storageCache;\r\n        this._storage = _storage;\r\n        this._logger = _logger;\r\n        // Tracks completion of initialization promise.\r\n        this._isInitializationComplete = false;\r\n        this.settings = {\r\n            fetchTimeoutMillis: DEFAULT_FETCH_TIMEOUT_MILLIS,\r\n            minimumFetchIntervalMillis: DEFAULT_CACHE_MAX_AGE_MILLIS\r\n        };\r\n        this.defaultConfig = {};\r\n    }\r\n    // Based on packages/firestore/src/util/log.ts but not static because we need per-instance levels\r\n    // to differentiate 2p and 3p use-cases.\r\n    RemoteConfig.prototype.setLogLevel = function (logLevel) {\r\n        switch (logLevel) {\r\n            case 'debug':\r\n                this._logger.logLevel = LogLevel.DEBUG;\r\n                break;\r\n            case 'silent':\r\n                this._logger.logLevel = LogLevel.SILENT;\r\n                break;\r\n            default:\r\n                this._logger.logLevel = LogLevel.ERROR;\r\n        }\r\n    };\r\n    Object.defineProperty(RemoteConfig.prototype, \"fetchTimeMillis\", {\r\n        get: function () {\r\n            return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RemoteConfig.prototype, \"lastFetchStatus\", {\r\n        get: function () {\r\n            return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    RemoteConfig.prototype.activate = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, lastSuccessfulFetchResponse, activeConfigEtag;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this._storage.getLastSuccessfulFetchResponse(),\r\n                            this._storage.getActiveConfigEtag()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), lastSuccessfulFetchResponse = _a[0], activeConfigEtag = _a[1];\r\n                        if (!lastSuccessfulFetchResponse ||\r\n                            !lastSuccessfulFetchResponse.config ||\r\n                            !lastSuccessfulFetchResponse.eTag ||\r\n                            lastSuccessfulFetchResponse.eTag === activeConfigEtag) {\r\n                            // Either there is no successful fetched config, or is the same as current active\r\n                            // config.\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        return [4 /*yield*/, Promise.all([\r\n                                this._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config),\r\n                                this._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)\r\n                            ])];\r\n                    case 2:\r\n                        _b.sent();\r\n                        return [2 /*return*/, true];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RemoteConfig.prototype.ensureInitialized = function () {\r\n        var _this = this;\r\n        if (!this._initializePromise) {\r\n            this._initializePromise = this._storageCache\r\n                .loadFromStorage()\r\n                .then(function () {\r\n                _this._isInitializationComplete = true;\r\n            });\r\n        }\r\n        return this._initializePromise;\r\n    };\r\n    /**\r\n     * @throws a {@link ErrorCode.FETCH_CLIENT_TIMEOUT} if the request takes longer than\r\n     * {@link Settings.fetchTimeoutInSeconds} or\r\n     * {@link DEFAULT_FETCH_TIMEOUT_SECONDS}.\r\n     */\r\n    RemoteConfig.prototype.fetch = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var abortSignal, e_1, lastFetchStatus;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        abortSignal = new RemoteConfigAbortSignal();\r\n                        setTimeout(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                            return __generator(this, function (_a) {\r\n                                // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\r\n                                abortSignal.abort();\r\n                                return [2 /*return*/];\r\n                            });\r\n                        }); }, this.settings.fetchTimeoutMillis);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 6]);\r\n                        return [4 /*yield*/, this._client.fetch({\r\n                                cacheMaxAgeMillis: this.settings.minimumFetchIntervalMillis,\r\n                                signal: abortSignal\r\n                            })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this._storageCache.setLastFetchStatus('success')];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        lastFetchStatus = hasErrorCode(e_1, \"fetch-throttle\" /* FETCH_THROTTLE */)\r\n                            ? 'throttle'\r\n                            : 'failure';\r\n                        return [4 /*yield*/, this._storageCache.setLastFetchStatus(lastFetchStatus)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        throw e_1;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RemoteConfig.prototype.fetchAndActivate = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.fetch()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, this.activate()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RemoteConfig.prototype.getAll = function () {\r\n        var _this = this;\r\n        return getAllKeys(this._storageCache.getActiveConfig(), this.defaultConfig).reduce(function (allConfigs, key) {\r\n            allConfigs[key] = _this.getValue(key);\r\n            return allConfigs;\r\n        }, {});\r\n    };\r\n    RemoteConfig.prototype.getBoolean = function (key) {\r\n        return this.getValue(key).asBoolean();\r\n    };\r\n    RemoteConfig.prototype.getNumber = function (key) {\r\n        return this.getValue(key).asNumber();\r\n    };\r\n    RemoteConfig.prototype.getString = function (key) {\r\n        return this.getValue(key).asString();\r\n    };\r\n    RemoteConfig.prototype.getValue = function (key) {\r\n        if (!this._isInitializationComplete) {\r\n            this._logger.debug(\"A value was requested for key \\\"\" + key + \"\\\" before SDK initialization completed.\" +\r\n                ' Await on ensureInitialized if the intent was to get a previously activated value.');\r\n        }\r\n        var activeConfig = this._storageCache.getActiveConfig();\r\n        if (activeConfig && activeConfig[key] !== undefined) {\r\n            return new Value('remote', activeConfig[key]);\r\n        }\r\n        else if (this.defaultConfig && this.defaultConfig[key] !== undefined) {\r\n            return new Value('default', String(this.defaultConfig[key]));\r\n        }\r\n        this._logger.debug(\"Returning static value for key \\\"\" + key + \"\\\".\" +\r\n            ' Define a default or remote value if this is unintentional.');\r\n        return new Value('static');\r\n    };\r\n    return RemoteConfig;\r\n}());\r\n/**\r\n * Dedupes and returns an array of all the keys of the received objects.\r\n */\r\nfunction getAllKeys(obj1, obj2) {\r\n    if (obj1 === void 0) { obj1 = {}; }\r\n    if (obj2 === void 0) { obj2 = {}; }\r\n    return Object.keys(__assign(__assign({}, obj1), obj2));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.\r\n */\r\nfunction toFirebaseError(event, errorCode) {\r\n    var originalError = event.target.error || undefined;\r\n    return ERROR_FACTORY.create(errorCode, {\r\n        originalErrorMessage: originalError && originalError.message\r\n    });\r\n}\r\n/**\r\n * A general-purpose store keyed by app + namespace + {@link\r\n * ProjectNamespaceKeyFieldValue}.\r\n *\r\n * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact\r\n * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys\r\n * for a set of key-value pairs. See {@link Storage#createCompositeKey}.\r\n *\r\n * <p>Visible for testing.\r\n */\r\nvar APP_NAMESPACE_STORE = 'app_namespace_store';\r\nvar DB_NAME = 'firebase_remote_config';\r\nvar DB_VERSION = 1;\r\n// Visible for testing.\r\nfunction openDatabase() {\r\n    return new Promise(function (resolve, reject) {\r\n        var request = indexedDB.open(DB_NAME, DB_VERSION);\r\n        request.onerror = function (event) {\r\n            reject(toFirebaseError(event, \"storage-open\" /* STORAGE_OPEN */));\r\n        };\r\n        request.onsuccess = function (event) {\r\n            resolve(event.target.result);\r\n        };\r\n        request.onupgradeneeded = function (event) {\r\n            var db = event.target.result;\r\n            // We don't use 'break' in this switch statement, the fall-through\r\n            // behavior is what we want, because if there are multiple versions between\r\n            // the old version and the current version, we want ALL the migrations\r\n            // that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (event.oldVersion) {\r\n                case 0:\r\n                    db.createObjectStore(APP_NAMESPACE_STORE, {\r\n                        keyPath: 'compositeKey'\r\n                    });\r\n            }\r\n        };\r\n    });\r\n}\r\n/**\r\n * Abstracts data persistence.\r\n */\r\nvar Storage = /** @class */ (function () {\r\n    /**\r\n     * @param appId enables storage segmentation by app (ID + name).\r\n     * @param appName enables storage segmentation by app (ID + name).\r\n     * @param namespace enables storage segmentation by namespace.\r\n     */\r\n    function Storage(appId, appName, namespace, openDbPromise) {\r\n        if (openDbPromise === void 0) { openDbPromise = openDatabase(); }\r\n        this.appId = appId;\r\n        this.appName = appName;\r\n        this.namespace = namespace;\r\n        this.openDbPromise = openDbPromise;\r\n    }\r\n    Storage.prototype.getLastFetchStatus = function () {\r\n        return this.get('last_fetch_status');\r\n    };\r\n    Storage.prototype.setLastFetchStatus = function (status) {\r\n        return this.set('last_fetch_status', status);\r\n    };\r\n    // This is comparable to a cache entry timestamp. If we need to expire other data, we could\r\n    // consider adding timestamp to all storage records and an optional max age arg to getters.\r\n    Storage.prototype.getLastSuccessfulFetchTimestampMillis = function () {\r\n        return this.get('last_successful_fetch_timestamp_millis');\r\n    };\r\n    Storage.prototype.setLastSuccessfulFetchTimestampMillis = function (timestamp) {\r\n        return this.set('last_successful_fetch_timestamp_millis', timestamp);\r\n    };\r\n    Storage.prototype.getLastSuccessfulFetchResponse = function () {\r\n        return this.get('last_successful_fetch_response');\r\n    };\r\n    Storage.prototype.setLastSuccessfulFetchResponse = function (response) {\r\n        return this.set('last_successful_fetch_response', response);\r\n    };\r\n    Storage.prototype.getActiveConfig = function () {\r\n        return this.get('active_config');\r\n    };\r\n    Storage.prototype.setActiveConfig = function (config) {\r\n        return this.set('active_config', config);\r\n    };\r\n    Storage.prototype.getActiveConfigEtag = function () {\r\n        return this.get('active_config_etag');\r\n    };\r\n    Storage.prototype.setActiveConfigEtag = function (etag) {\r\n        return this.set('active_config_etag', etag);\r\n    };\r\n    Storage.prototype.getThrottleMetadata = function () {\r\n        return this.get('throttle_metadata');\r\n    };\r\n    Storage.prototype.setThrottleMetadata = function (metadata) {\r\n        return this.set('throttle_metadata', metadata);\r\n    };\r\n    Storage.prototype.deleteThrottleMetadata = function () {\r\n        return this.delete('throttle_metadata');\r\n    };\r\n    Storage.prototype.get = function (key) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.openDbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readonly');\r\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n                                var compositeKey = _this.createCompositeKey(key);\r\n                                try {\r\n                                    var request = objectStore.get(compositeKey);\r\n                                    request.onerror = function (event) {\r\n                                        reject(toFirebaseError(event, \"storage-get\" /* STORAGE_GET */));\r\n                                    };\r\n                                    request.onsuccess = function (event) {\r\n                                        var result = event.target.result;\r\n                                        if (result) {\r\n                                            resolve(result.value);\r\n                                        }\r\n                                        else {\r\n                                            resolve(undefined);\r\n                                        }\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    reject(ERROR_FACTORY.create(\"storage-get\" /* STORAGE_GET */, {\r\n                                        originalErrorMessage: e && e.message\r\n                                    }));\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Storage.prototype.set = function (key, value) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.openDbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\r\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n                                var compositeKey = _this.createCompositeKey(key);\r\n                                try {\r\n                                    var request = objectStore.put({\r\n                                        compositeKey: compositeKey,\r\n                                        value: value\r\n                                    });\r\n                                    request.onerror = function (event) {\r\n                                        reject(toFirebaseError(event, \"storage-set\" /* STORAGE_SET */));\r\n                                    };\r\n                                    request.onsuccess = function () {\r\n                                        resolve();\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    reject(ERROR_FACTORY.create(\"storage-set\" /* STORAGE_SET */, {\r\n                                        originalErrorMessage: e && e.message\r\n                                    }));\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Storage.prototype.delete = function (key) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.openDbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\r\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n                                var compositeKey = _this.createCompositeKey(key);\r\n                                try {\r\n                                    var request = objectStore.delete(compositeKey);\r\n                                    request.onerror = function (event) {\r\n                                        reject(toFirebaseError(event, \"storage-delete\" /* STORAGE_DELETE */));\r\n                                    };\r\n                                    request.onsuccess = function () {\r\n                                        resolve();\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    reject(ERROR_FACTORY.create(\"storage-delete\" /* STORAGE_DELETE */, {\r\n                                        originalErrorMessage: e && e.message\r\n                                    }));\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // Facilitates composite key functionality (which is unsupported in IE).\r\n    Storage.prototype.createCompositeKey = function (key) {\r\n        return [this.appId, this.appName, this.namespace, key].join();\r\n    };\r\n    return Storage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A memory cache layer over storage to support the SDK's synchronous read requirements.\r\n */\r\nvar StorageCache = /** @class */ (function () {\r\n    function StorageCache(storage) {\r\n        this.storage = storage;\r\n    }\r\n    /**\r\n     * Memory-only getters\r\n     */\r\n    StorageCache.prototype.getLastFetchStatus = function () {\r\n        return this.lastFetchStatus;\r\n    };\r\n    StorageCache.prototype.getLastSuccessfulFetchTimestampMillis = function () {\r\n        return this.lastSuccessfulFetchTimestampMillis;\r\n    };\r\n    StorageCache.prototype.getActiveConfig = function () {\r\n        return this.activeConfig;\r\n    };\r\n    /**\r\n     * Read-ahead getter\r\n     */\r\n    StorageCache.prototype.loadFromStorage = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var lastFetchStatusPromise, lastSuccessfulFetchTimestampMillisPromise, activeConfigPromise, lastFetchStatus, lastSuccessfulFetchTimestampMillis, activeConfig;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        lastFetchStatusPromise = this.storage.getLastFetchStatus();\r\n                        lastSuccessfulFetchTimestampMillisPromise = this.storage.getLastSuccessfulFetchTimestampMillis();\r\n                        activeConfigPromise = this.storage.getActiveConfig();\r\n                        return [4 /*yield*/, lastFetchStatusPromise];\r\n                    case 1:\r\n                        lastFetchStatus = _a.sent();\r\n                        if (lastFetchStatus) {\r\n                            this.lastFetchStatus = lastFetchStatus;\r\n                        }\r\n                        return [4 /*yield*/, lastSuccessfulFetchTimestampMillisPromise];\r\n                    case 2:\r\n                        lastSuccessfulFetchTimestampMillis = _a.sent();\r\n                        if (lastSuccessfulFetchTimestampMillis) {\r\n                            this.lastSuccessfulFetchTimestampMillis = lastSuccessfulFetchTimestampMillis;\r\n                        }\r\n                        return [4 /*yield*/, activeConfigPromise];\r\n                    case 3:\r\n                        activeConfig = _a.sent();\r\n                        if (activeConfig) {\r\n                            this.activeConfig = activeConfig;\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Write-through setters\r\n     */\r\n    StorageCache.prototype.setLastFetchStatus = function (status) {\r\n        this.lastFetchStatus = status;\r\n        return this.storage.setLastFetchStatus(status);\r\n    };\r\n    StorageCache.prototype.setLastSuccessfulFetchTimestampMillis = function (timestampMillis) {\r\n        this.lastSuccessfulFetchTimestampMillis = timestampMillis;\r\n        return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis);\r\n    };\r\n    StorageCache.prototype.setActiveConfig = function (activeConfig) {\r\n        this.activeConfig = activeConfig;\r\n        return this.storage.setActiveConfig(activeConfig);\r\n    };\r\n    return StorageCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Supports waiting on a backoff by:\r\n *\r\n * <ul>\r\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\r\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\r\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\r\n *       request appear the same.</li>\r\n * </ul>\r\n *\r\n * <p>Visible for testing.\r\n */\r\nfunction setAbortableTimeout(signal, throttleEndTimeMillis) {\r\n    return new Promise(function (resolve, reject) {\r\n        // Derives backoff from given end time, normalizing negative numbers to zero.\r\n        var backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\r\n        var timeout = setTimeout(resolve, backoffMillis);\r\n        // Adds listener, rather than sets onabort, because signal is a shared object.\r\n        signal.addEventListener(function () {\r\n            clearTimeout(timeout);\r\n            // If the request completes before this timeout, the rejection has no effect.\r\n            reject(ERROR_FACTORY.create(\"fetch-throttle\" /* FETCH_THROTTLE */, {\r\n                throttleEndTimeMillis: throttleEndTimeMillis\r\n            }));\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\r\n */\r\nfunction isRetriableError(e) {\r\n    if (!(e instanceof FirebaseError) || !e.customData) {\r\n        return false;\r\n    }\r\n    // Uses string index defined by ErrorData, which FirebaseError implements.\r\n    var httpStatus = Number(e.customData['httpStatus']);\r\n    return (httpStatus === 429 ||\r\n        httpStatus === 500 ||\r\n        httpStatus === 503 ||\r\n        httpStatus === 504);\r\n}\r\n/**\r\n * Decorates a Client with retry logic.\r\n *\r\n * <p>Comparable to CachingClient, but uses backoff logic instead of cache max age and doesn't cache\r\n * responses (because the SDK has no use for error responses).\r\n */\r\nvar RetryingClient = /** @class */ (function () {\r\n    function RetryingClient(client, storage) {\r\n        this.client = client;\r\n        this.storage = storage;\r\n    }\r\n    RetryingClient.prototype.fetch = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var throttleMetadata;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.storage.getThrottleMetadata()];\r\n                    case 1:\r\n                        throttleMetadata = (_a.sent()) || {\r\n                            backoffCount: 0,\r\n                            throttleEndTimeMillis: Date.now()\r\n                        };\r\n                        return [2 /*return*/, this.attemptFetch(request, throttleMetadata)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * A recursive helper for attempting a fetch request repeatedly.\r\n     *\r\n     * @throws any non-retriable errors.\r\n     */\r\n    RetryingClient.prototype.attemptFetch = function (request, _a) {\r\n        var throttleEndTimeMillis = _a.throttleEndTimeMillis, backoffCount = _a.backoffCount;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, e_1, throttleMetadata;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: \r\n                    // Starts with a (potentially zero) timeout to support resumption from stored state.\r\n                    // Ensures the throttle end time is honored if the last attempt timed out.\r\n                    // Note the SDK will never make a request if the fetch timeout expires at this point.\r\n                    return [4 /*yield*/, setAbortableTimeout(request.signal, throttleEndTimeMillis)];\r\n                    case 1:\r\n                        // Starts with a (potentially zero) timeout to support resumption from stored state.\r\n                        // Ensures the throttle end time is honored if the last attempt timed out.\r\n                        // Note the SDK will never make a request if the fetch timeout expires at this point.\r\n                        _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        _b.trys.push([2, 5, , 7]);\r\n                        return [4 /*yield*/, this.client.fetch(request)];\r\n                    case 3:\r\n                        response = _b.sent();\r\n                        // Note the SDK only clears throttle state if response is success or non-retriable.\r\n                        return [4 /*yield*/, this.storage.deleteThrottleMetadata()];\r\n                    case 4:\r\n                        // Note the SDK only clears throttle state if response is success or non-retriable.\r\n                        _b.sent();\r\n                        return [2 /*return*/, response];\r\n                    case 5:\r\n                        e_1 = _b.sent();\r\n                        if (!isRetriableError(e_1)) {\r\n                            throw e_1;\r\n                        }\r\n                        throttleMetadata = {\r\n                            throttleEndTimeMillis: Date.now() + calculateBackoffMillis(backoffCount),\r\n                            backoffCount: backoffCount + 1\r\n                        };\r\n                        // Persists state.\r\n                        return [4 /*yield*/, this.storage.setThrottleMetadata(throttleMetadata)];\r\n                    case 6:\r\n                        // Persists state.\r\n                        _b.sent();\r\n                        return [2 /*return*/, this.attemptFetch(request, throttleMetadata)];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RetryingClient;\r\n}());\n\nvar name = \"@firebase/remote-config\";\nvar version = \"0.1.30\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerRemoteConfig(firebaseInstance) {\r\n    firebaseInstance.INTERNAL.registerComponent(new Component('remoteConfig', remoteConfigFactory, \"PUBLIC\" /* PUBLIC */).setMultipleInstances(true));\r\n    firebaseInstance.registerVersion(name, version);\r\n    function remoteConfigFactory(container, namespace) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        // The following call will always succeed because rc has `import '@firebase/installations'`\r\n        var installations = container.getProvider('installations').getImmediate();\r\n        // Guards against the SDK being used in non-browser environments.\r\n        if (typeof window === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"registration-window\" /* REGISTRATION_WINDOW */);\r\n        }\r\n        // Normalizes optional inputs.\r\n        var _a = app.options, projectId = _a.projectId, apiKey = _a.apiKey, appId = _a.appId;\r\n        if (!projectId) {\r\n            throw ERROR_FACTORY.create(\"registration-project-id\" /* REGISTRATION_PROJECT_ID */);\r\n        }\r\n        if (!apiKey) {\r\n            throw ERROR_FACTORY.create(\"registration-api-key\" /* REGISTRATION_API_KEY */);\r\n        }\r\n        if (!appId) {\r\n            throw ERROR_FACTORY.create(\"registration-app-id\" /* REGISTRATION_APP_ID */);\r\n        }\r\n        namespace = namespace || 'firebase';\r\n        var storage = new Storage(appId, app.name, namespace);\r\n        var storageCache = new StorageCache(storage);\r\n        var logger = new Logger(name);\r\n        // Sets ERROR as the default log level.\r\n        // See RemoteConfig#setLogLevel for corresponding normalization to ERROR log level.\r\n        logger.logLevel = LogLevel.ERROR;\r\n        var restClient = new RestClient(installations, \r\n        // Uses the JS SDK version, by which the RC package version can be deduced, if necessary.\r\n        firebaseInstance.SDK_VERSION, namespace, projectId, apiKey, appId);\r\n        var retryingClient = new RetryingClient(restClient, storage);\r\n        var cachingClient = new CachingClient(retryingClient, storage, storageCache, logger);\r\n        var remoteConfigInstance = new RemoteConfig(app, cachingClient, storageCache, storage, logger);\r\n        // Starts warming cache.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        remoteConfigInstance.ensureInitialized();\r\n        return remoteConfigInstance;\r\n    }\r\n}\r\nregisterRemoteConfig(firebase);\n\nexport { registerRemoteConfig };\n//# sourceMappingURL=index.esm.js.map\n","import '@firebase/remote-config';\n//# sourceMappingURL=index.esm.js.map\n"]}}